{
.appVersion = "1356";
DisplayStrings = (
"0"
);
copyright = "Copyright (c) 2011, Sorkin Type Co (www.sorkintype.com), with Reserved Font Name \"Doppio\"";
customParameters = (
{
name = description;
value = "Doppio is a robust low contrast sans serif type with a contemporary feeling. Doppio will work from small text sizes through large display sizes. Doppio's boxy style makes it especially suitable for screen use.";
},
{
name = trademark;
value = "Doppio is a trademark of Sorkin Type Co.";
},
{
name = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL";
},
{
name = vendorID;
value = "STC ";
},
{
name = panose;
value = (
2,
1,
6,
3,
3,
0,
0,
2,
8,
4
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
7,
29,
31,
33,
35,
38,
45,
62
);
},
{
name = fsType;
value = (
);
}
);
date = "2012-01-22 10:14:19 +0000";
designer = "Szymon Celej";
designerURL = www.hypnotype.com;
familyName = "Doppio One";
featurePrefixes = (
{
code = "lookup lookup_0 {\012sub w by .notdef;\012} lookup_0;\012";
name = lookup_0;
}
);
features = (
{
code = "script latn;\012sub e w' lookup lookup_0 i p ;\012";
name = calt;
},
{
code = "script latn;\012sub I J by IJ;\012sub e w i p l o g o by .notdef;\012sub f f i by .notdef;\012sub f f l by .notdef;\012sub f i by fi;\012sub f f by ff;\012sub f l by fl;\012sub f t by .notdef;\012sub i j by ij;\012";
name = liga;
},
{
code = "script latn;\012sub A by .notdef;\012sub B by .notdef;\012sub C by .notdef;\012sub D by .notdef;\012sub E by .notdef;\012sub F by .notdef;\012sub G by .notdef;\012sub H by .notdef;\012sub I by .notdef;\012sub J by .notdef;\012sub K by .notdef;\012sub L by .notdef;\012sub M by .notdef;\012sub N by .notdef;\012sub O by .notdef;\012sub P by .notdef;\012sub Q by .notdef;\012sub R by .notdef;\012sub S by .notdef;\012sub T by .notdef;\012sub U by .notdef;\012sub V by .notdef;\012sub W by .notdef;\012sub X by .notdef;\012sub Y by .notdef;\012sub Z by .notdef;\012sub a by .notdef;\012sub b by .notdef;\012sub c by .notdef;\012sub d by .notdef;\012sub e by .notdef;\012sub f by .notdef;\012sub g by .notdef;\012sub h by .notdef;\012sub i by .notdef;\012sub j by .notdef;\012sub k by .notdef;\012sub l by .notdef;\012sub m by .notdef;\012sub n by .notdef;\012sub o by .notdef;\012sub p by .notdef;\012sub q by .notdef;\012sub r by .notdef;\012sub s by .notdef;\012sub t by .notdef;\012sub u by .notdef;\012sub v by .notdef;\012sub w by .notdef;\012sub x by .notdef;\012sub y by .notdef;\012sub z by .notdef;\012sub Agrave by .notdef;\012sub Aacute by .notdef;\012sub Acircumflex by .notdef;\012sub Atilde by .notdef;\012sub Adieresis by .notdef;\012sub Aring by .notdef;\012sub Ccedilla by .notdef;\012sub Egrave by .notdef;\012sub Eacute by .notdef;\012sub Ecircumflex by .notdef;\012sub Edieresis by .notdef;\012sub Igrave by .notdef;\012sub Iacute by .notdef;\012sub Icircumflex by .notdef;\012sub Idieresis by .notdef;\012sub Ntilde by .notdef;\012sub Ograve by .notdef;\012sub Oacute by .notdef;\012sub Ocircumflex by .notdef;\012sub Otilde by .notdef;\012sub Odieresis by .notdef;\012sub Ugrave by .notdef;\012sub Uacute by .notdef;\012sub Ucircumflex by .notdef;\012sub Udieresis by .notdef;\012sub Yacute by .notdef;\012sub agrave by .notdef;\012sub aacute by .notdef;\012sub acircumflex by .notdef;\012sub atilde by .notdef;\012sub adieresis by .notdef;\012sub aring by .notdef;\012sub ccedilla by .notdef;\012sub egrave by .notdef;\012sub eacute by .notdef;\012sub ecircumflex by .notdef;\012sub edieresis by .notdef;\012sub igrave by .notdef;\012sub iacute by .notdef;\012sub icircumflex by .notdef;\012sub idieresis by .notdef;\012sub ntilde by .notdef;\012sub ograve by .notdef;\012sub oacute by .notdef;\012sub ocircumflex by .notdef;\012sub otilde by .notdef;\012sub odieresis by .notdef;\012sub ugrave by .notdef;\012sub uacute by .notdef;\012sub ucircumflex by .notdef;\012sub udieresis by .notdef;\012sub yacute by .notdef;\012sub ydieresis by .notdef;\012sub Amacron by .notdef;\012sub amacron by .notdef;\012sub Abreve by .notdef;\012sub abreve by .notdef;\012sub Aogonek by .notdef;\012sub aogonek by .notdef;\012sub Cacute by .notdef;\012sub cacute by .notdef;\012sub Ccircumflex by .notdef;\012sub ccircumflex by .notdef;\012sub Cdotaccent by .notdef;\012sub cdotaccent by .notdef;\012sub Ccaron by .notdef;\012sub ccaron by .notdef;\012sub Dcaron by .notdef;\012sub dcaron by .notdef;\012sub Dcroat by .notdef;\012sub dcroat by .notdef;\012sub Emacron by .notdef;\012sub emacron by .notdef;\012sub Ebreve by .notdef;\012sub ebreve by .notdef;\012sub Edotaccent by .notdef;\012sub edotaccent by .notdef;\012sub Eogonek by .notdef;\012sub eogonek by .notdef;\012sub Ecaron by .notdef;\012sub ecaron by .notdef;\012sub Gcircumflex by .notdef;\012sub gcircumflex by .notdef;\012sub Gbreve by .notdef;\012sub gbreve by .notdef;\012sub Gdotaccent by .notdef;\012sub gdotaccent by .notdef;\012sub Gcommaaccent by .notdef;\012sub gcommaaccent by .notdef;\012sub Hcircumflex by .notdef;\012sub hcircumflex by .notdef;\012sub Hbar by .notdef;\012sub hbar by .notdef;\012sub Itilde by .notdef;\012sub itilde by .notdef;\012sub Imacron by .notdef;\012sub imacron by .notdef;\012sub Ibreve by .notdef;\012sub ibreve by .notdef;\012sub Iogonek by .notdef;\012sub iogonek by .notdef;\012sub Jcircumflex by .notdef;\012sub jcircumflex by .notdef;\012sub Kcommaaccent by .notdef;\012sub kcommaaccent by .notdef;\012sub Lacute by .notdef;\012sub lacute by .notdef;\012sub Lcommaaccent by .notdef;\012sub lcommaaccent by .notdef;\012sub Lcaron by .notdef;\012sub lcaron by .notdef;\012sub Ldot by .notdef;\012sub ldot by .notdef;\012sub Lslash by .notdef;\012sub lslash by .notdef;\012sub Nacute by .notdef;\012sub nacute by .notdef;\012sub Ncommaaccent by .notdef;\012sub ncommaaccent by .notdef;\012sub Ncaron by .notdef;\012sub ncaron by .notdef;\012sub Omacron by .notdef;\012sub omacron by .notdef;\012sub Obreve by .notdef;\012sub obreve by .notdef;\012sub Ohungarumlaut by .notdef;\012sub ohungarumlaut by .notdef;\012sub Racute by .notdef;\012sub racute by .notdef;\012sub Rcommaaccent by .notdef;\012sub rcommaaccent by .notdef;\012sub Rcaron by .notdef;\012sub rcaron by .notdef;\012sub Sacute by .notdef;\012sub sacute by .notdef;\012sub Scircumflex by .notdef;\012sub scircumflex by .notdef;\012sub Scedilla by .notdef;\012sub scedilla by .notdef;\012sub Scaron by .notdef;\012sub scaron by .notdef;\012sub Tcommaaccent by .notdef;\012sub tcommaaccent by .notdef;\012sub Tcaron by .notdef;\012sub tcaron by .notdef;\012sub Tbar by .notdef;\012sub tbar by .notdef;\012sub Utilde by .notdef;\012sub utilde by .notdef;\012sub Umacron by .notdef;\012sub umacron by .notdef;\012sub Ubreve by .notdef;\012sub ubreve by .notdef;\012sub Uring by .notdef;\012sub uring by .notdef;\012sub Uhungarumlaut by .notdef;\012sub uhungarumlaut by .notdef;\012sub Uogonek by .notdef;\012sub uogonek by .notdef;\012sub Wcircumflex by .notdef;\012sub wcircumflex by .notdef;\012sub Ycircumflex by .notdef;\012sub ycircumflex by .notdef;\012sub Ydieresis by .notdef;\012sub Zacute by .notdef;\012sub zacute by .notdef;\012sub Zdotaccent by .notdef;\012sub zdotaccent by .notdef;\012sub Zcaron by .notdef;\012sub zcaron by .notdef;\012sub Scommaaccent by .notdef;\012sub scommaaccent by .notdef;\012sub Wgrave by .notdef;\012sub wgrave by .notdef;\012sub Wacute by .notdef;\012sub wacute by .notdef;\012sub Wdieresis by .notdef;\012sub wdieresis by .notdef;\012sub Ygrave by .notdef;\012sub ygrave by .notdef;\012";
name = smcp;
},
{
code = "script latn;\012sub zero by .notdef;\012sub one by .notdef;\012sub two by .notdef;\012sub three by .notdef;\012sub four by .notdef;\012sub five by .notdef;\012sub six by .notdef;\012sub seven by .notdef;\012sub eight by .notdef;\012sub nine by .notdef;\012";
name = subs;
},
{
code = "script latn;\012sub zero by .notdef;\012sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by .notdef;\012sub five by .notdef;\012sub six by .notdef;\012sub seven by .notdef;\012sub eight by .notdef;\012sub nine by .notdef;\012sub a by ordfeminine;\012sub n by .notdef;\012sub o by ordmasculine;\012";
name = sups;
}
);
fontMaster = (
{
ascender = 2060;
capHeight = 1427;
customParameters = (
{
name = typoAscender;
value = 2060;
},
{
name = typoDescender;
value = -500;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2060;
},
{
name = winDescent;
value = 500;
},
{
name = hheaAscender;
value = 2060;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 9 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01210 7 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 8 values pushed */\01210 55 48 38 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01211 44 37 29 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01212 48 37 29 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01213 48 37 29 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01214 61 48 38 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01215 42 37 29 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\01216 58 48 38 24 14 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 8 values pushed */\0121 57 48 38 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0122 44 37 29 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0123 51 48 29 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0124 62 48 38 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0125 56 48 38 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0126 42 37 29 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0127 68 48 38 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0128 58 48 38 24 14 0 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 8 values pushed */\0129 42 37 29 24 14 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01217 4 7 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHB[ ]	/* 2 values pushed */\0129 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
42,
199,
258,
223,
182,
203,
272,
168,
197,
273,
207,
258,
240,
238,
186,
268,
195,
0,
31,
-485,
15,
1055,
30,
1427,
29
);
}
);
descender = -500;
id = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
weightValue = 400;
widthValue = 5;
xHeight = 1055;
}
);
glyphs = (
{
glyphname = A;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"276 0 LINE",
"391 387 LINE",
"877 387 LINE",
"997 0 LINE",
"1262 0 LINE",
"795 1427 LINE",
"477 1427 LINE",
"14 0 LINE"
);
},
{
closed = 1;
nodes = (
"631 1206 LINE",
"635 1206 LINE",
"811 602 LINE",
"455 602 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0128 3 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0129 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1276;
}
);
note = A;
unicode = 0041;
},
{
glyphname = Aacute;
layers = (
{
components = (
{
name = A;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 350, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Abreve;
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 227, 352}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Abreve;
unicode = 0102;
},
{
glyphname = Acircumflex;
layers = (
{
components = (
{
name = A;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 246, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Adieresis;
layers = (
{
components = (
{
name = A;
},
{
name = period;
transform = "{1, 0, 0, 1, 622, 1552}";
},
{
name = period;
transform = "{1, 0, 0, 1, 157, 1552}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Agrave;
layers = (
{
components = (
{
name = A;
},
{
name = grave.cap;
transform = "{1, 0, 0, 1, 242, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Amacron;
layers = (
{
components = (
{
name = A;
},
{
name = macron;
transform = "{1, 0, 0, 1, 223, 338}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Amacron;
unicode = 0100;
},
{
glyphname = Aogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"276 0 LINE",
"391 387 LINE",
"877 387 LINE",
"997 0 LINE",
"973 -24 OFFCURVE",
"926 -84 OFFCURVE",
"888 -154 OFFCURVE",
"864 -235 OFFCURVE",
"864 -279 QCURVE SMOOTH",
"864 -334 OFFCURVE",
"903 -417 OFFCURVE",
"971 -472 OFFCURVE",
"1063 -500 OFFCURVE",
"1116 -500 QCURVE SMOOTH",
"1145 -500 OFFCURVE",
"1195 -494 OFFCURVE",
"1214 -490 QCURVE SMOOTH",
"1236 -486 OFFCURVE",
"1255 -479 QCURVE",
"1255 -311 LINE",
"1245 -313 OFFCURVE",
"1234 -314 QCURVE SMOOTH",
"1214 -317 OFFCURVE",
"1186 -317 QCURVE SMOOTH",
"1135 -317 OFFCURVE",
"1085 -267 OFFCURVE",
"1085 -225 QCURVE SMOOTH",
"1085 -174 OFFCURVE",
"1168 -56 OFFCURVE",
"1262 0 QCURVE",
"795 1427 LINE",
"477 1427 LINE",
"14 0 LINE"
);
},
{
closed = 1;
nodes = (
"631 1206 LINE",
"635 1206 LINE",
"811 602 LINE",
"455 602 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0125 10 23 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 23 25 23 41 23 57 23 73 23 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01228 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01231 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01233 3 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 8 23 8 39 8 55 8 71 8 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1276;
}
);
note = Aogonek;
unicode = 0104;
},
{
glyphname = Aring;
layers = (
{
components = (
{
name = A;
},
{
name = ring.cap;
transform = "{1, 0, 0, 1, 324, 311}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Atilde;
layers = (
{
components = (
{
name = A;
},
{
name = tilde.cap;
transform = "{1, 0, 0, 1, 168, 10}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = AE;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"272 0 LINE",
"387 387 LINE",
"873 387 LINE",
"993 0 LINE",
"1643 0 LINE",
"1643 223 LINE",
"1184 223 LINE",
"1057 610 LINE",
"1583 610 LINE",
"1583 829 LINE",
"985 829 LINE",
"862 1204 LINE",
"1567 1204 LINE",
"1567 1427 LINE",
"473 1427 LINE",
"10 0 LINE"
);
},
{
closed = 1;
nodes = (
"629 1204 LINE",
"635 1204 LINE",
"807 602 LINE",
"451 602 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01216 3 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0125 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1713;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = AEacute;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = AE;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 635, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1739;
}
);
note = AEacute;
unicode = 01FC;
},
{
glyphname = B;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"770 0 LINE SMOOTH",
"878 0 OFFCURVE",
"1039 34 OFFCURVE",
"1144 128 OFFCURVE",
"1196 294 OFFCURVE",
"1196 426 QCURVE SMOOTH",
"1196 492 OFFCURVE",
"1170 591 OFFCURVE",
"1128 661 OFFCURVE",
"1076 706 OFFCURVE",
"1022 733 OFFCURVE",
"972 746 OFFCURVE",
"954 748 QCURVE",
"954 750 LINE",
"982 756 OFFCURVE",
"1046 783 OFFCURVE",
"1098 845 OFFCURVE",
"1133 951 OFFCURVE",
"1133 1036 QCURVE SMOOTH",
"1133 1136 OFFCURVE",
"1089 1283 OFFCURVE",
"994 1380 OFFCURVE",
"846 1427 OFFCURVE",
"741 1427 QCURVE SMOOTH",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 1208 LINE",
"700 1208 LINE SMOOTH",
"746 1208 OFFCURVE",
"819 1190 OFFCURVE",
"869 1148 OFFCURVE",
"895 1077 OFFCURVE",
"895 1024 QCURVE SMOOTH",
"895 960 OFFCURVE",
"873 882 OFFCURVE",
"824 839 OFFCURVE",
"748 825 OFFCURVE",
"694 825 QCURVE SMOOTH",
"422 825 LINE"
);
},
{
closed = 1;
nodes = (
"422 621 LINE",
"729 621 LINE SMOOTH",
"785 621 OFFCURVE",
"866 608 OFFCURVE",
"919 566 OFFCURVE",
"944 487 OFFCURVE",
"944 422 QCURVE SMOOTH",
"944 357 OFFCURVE",
"915 278 OFFCURVE",
"862 234 OFFCURVE",
"787 219 OFFCURVE",
"741 219 QCURVE SMOOTH",
"422 219 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01237 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0126 13 31 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 31 25 31 41 31 57 31 73 31 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01212 31 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01244 31 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 44 25 44 41 44 57 44 73 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01219 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01226 5 49 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01212 49 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1312;
}
);
note = B;
unicode = 0042;
},
{
glyphname = Bdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = B;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 458, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1312;
}
);
note = uni1E02;
unicode = 1E02;
},
{
glyphname = C;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"923 -6 OFFCURVE",
"975 6 QCURVE SMOOTH",
"1035 19 OFFCURVE",
"1079 37 QCURVE",
"1079 209 LINE",
"1043 206 OFFCURVE",
"998 203 QCURVE SMOOTH",
"960 201 OFFCURVE",
"852 197 OFFCURVE",
"786 197 QCURVE SMOOTH",
"735 197 OFFCURVE",
"633 206 OFFCURVE",
"539 241 OFFCURVE",
"459 309 OFFCURVE",
"399 427 OFFCURVE",
"365 603 OFFCURVE",
"365 727 QCURVE SMOOTH",
"365 845 OFFCURVE",
"398 1011 OFFCURVE",
"457 1122 OFFCURVE",
"537 1186 OFFCURVE",
"630 1219 OFFCURVE",
"731 1227 OFFCURVE",
"782 1227 QCURVE SMOOTH",
"838 1227 OFFCURVE",
"941 1222 OFFCURVE",
"981 1220 QCURVE SMOOTH",
"1028 1217 OFFCURVE",
"1069 1214 QCURVE",
"1069 1386 LINE",
"1028 1404 OFFCURVE",
"970 1418 QCURVE SMOOTH",
"920 1430 OFFCURVE",
"772 1450 OFFCURVE",
"672 1450 QCURVE SMOOTH",
"613 1450 OFFCURVE",
"485 1425 OFFCURVE",
"361 1363 OFFCURVE",
"249 1258 OFFCURVE",
"165 1096 OFFCURVE",
"115 873 OFFCURVE",
"115 725 QCURVE SMOOTH",
"115 571 OFFCURVE",
"159 341 OFFCURVE",
"237 174 OFFCURVE",
"343 65 OFFCURVE",
"466 1 OFFCURVE",
"603 -25 OFFCURVE",
"672 -25 QCURVE SMOOTH",
"772 -25 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01232 11 7 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 32 22 32 38 32 54 32 70 32 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01220 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 39 23 39 39 39 55 39 71 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1179;
}
);
note = C;
unicode = 0043;
},
{
glyphname = Cacute;
layers = (
{
components = (
{
name = C;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 358, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
note = Cacute;
unicode = 0106;
},
{
glyphname = Ccaron;
layers = (
{
components = (
{
name = C;
},
{
name = caron.cap;
transform = "{1, 0, 0, 1, 279, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
note = Ccaron;
unicode = 010C;
},
{
glyphname = Ccedilla;
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 380, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Ccircumflex;
layers = (
{
components = (
{
name = C;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 299, -17}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
note = Ccircumflex;
unicode = 0108;
},
{
glyphname = Cdotaccent;
layers = (
{
components = (
{
name = C;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 502, 344}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
note = Cdotaccent;
unicode = 010A;
},
{
glyphname = D;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"694 0 LINE SMOOTH",
"779 0 OFFCURVE",
"928 22 OFFCURVE",
"1053 81 OFFCURVE",
"1151 184 OFFCURVE",
"1219 345 OFFCURVE",
"1255 572 OFFCURVE",
"1255 725 QCURVE SMOOTH",
"1255 873 OFFCURVE",
"1216 1093 OFFCURVE",
"1144 1249 OFFCURVE",
"1042 1349 OFFCURVE",
"918 1405 OFFCURVE",
"773 1427 OFFCURVE",
"694 1427 QCURVE SMOOTH",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 1204 LINE",
"629 1204 LINE SMOOTH",
"682 1204 OFFCURVE",
"779 1198 OFFCURVE",
"863 1169 OFFCURVE",
"930 1110 OFFCURVE",
"978 1004 OFFCURVE",
"1004 843 OFFCURVE",
"1004 727 QCURVE SMOOTH",
"1004 602 OFFCURVE",
"977 431 OFFCURVE",
"928 319 OFFCURVE",
"859 258 OFFCURVE",
"776 228 OFFCURVE",
"680 223 OFFCURVE",
"629 223 QCURVE SMOOTH",
"422 223 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 24 25 24 41 24 57 24 73 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01217 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01231 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1370;
}
);
note = D;
unicode = 0044;
},
{
glyphname = Eth;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"743 0 LINE SMOOTH",
"828 0 OFFCURVE",
"977 22 OFFCURVE",
"1102 81 OFFCURVE",
"1200 184 OFFCURVE",
"1268 345 OFFCURVE",
"1304 572 OFFCURVE",
"1304 725 QCURVE SMOOTH",
"1304 873 OFFCURVE",
"1265 1093 OFFCURVE",
"1193 1249 OFFCURVE",
"1091 1349 OFFCURVE",
"967 1405 OFFCURVE",
"822 1427 OFFCURVE",
"743 1427 QCURVE SMOOTH",
"231 1427 LINE",
"231 823 LINE",
"60 823 LINE",
"60 605 LINE",
"231 605 LINE",
"231 0 LINE"
);
},
{
closed = 1;
nodes = (
"471 605 LINE",
"795 605 LINE",
"795 823 LINE",
"471 823 LINE",
"471 1204 LINE",
"678 1204 LINE SMOOTH",
"731 1204 OFFCURVE",
"828 1198 OFFCURVE",
"912 1169 OFFCURVE",
"979 1110 OFFCURVE",
"1027 1004 OFFCURVE",
"1053 843 OFFCURVE",
"1053 727 QCURVE SMOOTH",
"1053 602 OFFCURVE",
"1026 431 OFFCURVE",
"977 319 OFFCURVE",
"908 258 OFFCURVE",
"825 228 OFFCURVE",
"729 223 OFFCURVE",
"678 223 QCURVE SMOOTH",
"471 223 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01212 11 28 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01239 1 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 28 25 28 41 28 57 28 73 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1419;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = Dcaron;
layers = (
{
components = (
{
name = D;
},
{
name = caron.cap;
transform = "{1, 0, 0, 1, 272, 4}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1370;
}
);
note = Dcaron;
unicode = 010E;
},
{
glyphname = Dcroat;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"743 0 LINE SMOOTH",
"828 0 OFFCURVE",
"977 22 OFFCURVE",
"1102 81 OFFCURVE",
"1200 184 OFFCURVE",
"1268 345 OFFCURVE",
"1304 572 OFFCURVE",
"1304 725 QCURVE SMOOTH",
"1304 873 OFFCURVE",
"1265 1093 OFFCURVE",
"1193 1249 OFFCURVE",
"1091 1349 OFFCURVE",
"967 1405 OFFCURVE",
"822 1427 OFFCURVE",
"743 1427 QCURVE SMOOTH",
"231 1427 LINE",
"231 823 LINE",
"60 823 LINE",
"60 605 LINE",
"231 605 LINE",
"231 0 LINE"
);
},
{
closed = 1;
nodes = (
"471 605 LINE",
"795 605 LINE",
"795 823 LINE",
"471 823 LINE",
"471 1204 LINE",
"678 1204 LINE SMOOTH",
"731 1204 OFFCURVE",
"828 1198 OFFCURVE",
"912 1169 OFFCURVE",
"979 1110 OFFCURVE",
"1027 1004 OFFCURVE",
"1053 843 OFFCURVE",
"1053 727 QCURVE SMOOTH",
"1053 602 OFFCURVE",
"1026 431 OFFCURVE",
"977 319 OFFCURVE",
"908 258 OFFCURVE",
"825 228 OFFCURVE",
"729 223 OFFCURVE",
"678 223 QCURVE SMOOTH",
"471 223 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01212 11 28 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01239 1 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 28 25 28 41 28 57 28 73 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1419;
}
);
note = Dcroat;
unicode = 0110;
},
{
glyphname = Ddotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 487, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1370;
}
);
note = uni1E0A;
unicode = 1E0A;
},
{
glyphname = E;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1057 0 LINE",
"1057 223 LINE",
"422 223 LINE",
"422 610 LINE",
"940 610 LINE",
"940 829 LINE",
"422 829 LINE",
"422 1204 LINE",
"1040 1204 LINE",
"1040 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
note = E;
unicode = 0045;
},
{
glyphname = Eacute;
layers = (
{
components = (
{
name = E;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 330, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ebreve;
layers = (
{
components = (
{
name = E;
},
{
name = breve;
transform = "{1, 0, 0, 1, 236, 332}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
note = Ebreve;
unicode = 0114;
},
{
glyphname = Ecaron;
layers = (
{
components = (
{
name = E;
},
{
name = caron.cap;
transform = "{1, 0, 0, 1, 248, -3}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
note = Ecaron;
unicode = 011A;
},
{
glyphname = Ecircumflex;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Edieresis;
layers = (
{
components = (
{
name = E;
},
{
name = period;
transform = "{1, 0, 0, 1, 599, 1552}";
},
{
name = period;
transform = "{1, 0, 0, 1, 134, 1552}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Edotaccent;
layers = (
{
components = (
{
name = E;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 438, 332}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
note = Edotaccent;
unicode = 0116;
},
{
glyphname = Egrave;
layers = (
{
components = (
{
name = E;
},
{
name = grave.cap;
transform = "{1, 0, 0, 1, 244, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Emacron;
layers = (
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 215, 342}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
note = Emacron;
unicode = 0112;
},
{
glyphname = Eogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"795 0 LINE",
"772 -24 OFFCURVE",
"725 -84 OFFCURVE",
"687 -155 OFFCURVE",
"663 -235 OFFCURVE",
"663 -279 QCURVE SMOOTH",
"663 -334 OFFCURVE",
"702 -417 OFFCURVE",
"770 -472 OFFCURVE",
"862 -500 OFFCURVE",
"915 -500 QCURVE SMOOTH",
"944 -500 OFFCURVE",
"993 -494 OFFCURVE",
"1013 -490 QCURVE SMOOTH",
"1035 -486 OFFCURVE",
"1055 -479 QCURVE",
"1055 -311 LINE",
"1045 -313 OFFCURVE",
"1034 -314 QCURVE SMOOTH",
"1014 -317 OFFCURVE",
"985 -317 QCURVE SMOOTH",
"934 -317 OFFCURVE",
"885 -267 OFFCURVE",
"885 -225 QCURVE SMOOTH",
"885 -174 OFFCURVE",
"963 -60 OFFCURVE",
"1057 0 QCURVE",
"1057 223 LINE",
"422 223 LINE",
"422 610 LINE",
"940 610 LINE",
"940 829 LINE",
"422 829 LINE",
"422 1204 LINE",
"1040 1204 LINE",
"1040 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0123 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 31 25 31 41 31 57 31 73 31 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01236 31 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01236 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01216 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 16 23 16 39 16 55 16 71 16 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
note = Eogonek;
unicode = 0118;
},
{
glyphname = F;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 551 LINE",
"963 551 LINE",
"963 774 LINE",
"422 774 LINE",
"422 1204 LINE",
"1040 1204 LINE",
"1040 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
note = F;
unicode = 0046;
},
{
glyphname = Fdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = F;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 357, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
note = uni1E1E;
unicode = 1E1E;
},
{
glyphname = G;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"204 213 OFFCURVE",
"372 39 OFFCURVE",
"615 -31 OFFCURVE",
"770 -31 QCURVE SMOOTH",
"865 -31 OFFCURVE",
"1028 -1 OFFCURVE",
"1088 18 QCURVE SMOOTH",
"1158 40 OFFCURVE",
"1217 68 QCURVE",
"1217 799 LINE",
"719 799 LINE",
"719 580 LINE",
"979 580 LINE",
"979 213 LINE",
"954 206 OFFCURVE",
"921 201 QCURVE SMOOTH",
"893 196 OFFCURVE",
"813 190 OFFCURVE",
"764 190 QCURVE SMOOTH",
"651 190 OFFCURVE",
"497 251 OFFCURVE",
"403 381 OFFCURVE",
"362 584 OFFCURVE",
"362 727 QCURVE SMOOTH",
"362 867 OFFCURVE",
"401 1060 OFFCURVE",
"497 1180 OFFCURVE",
"661 1233 OFFCURVE",
"786 1233 QCURVE SMOOTH",
"858 1233 OFFCURVE",
"994 1226 OFFCURVE",
"1047 1222 QCURVE SMOOTH",
"1109 1218 OFFCURVE",
"1163 1212 QCURVE",
"1163 1393 LINE",
"1113 1410 OFFCURVE",
"1050 1424 QCURVE SMOOTH",
"995 1436 OFFCURVE",
"842 1456 OFFCURVE",
"745 1456 QCURVE SMOOTH",
"601 1456 OFFCURVE",
"369 1382 OFFCURVE",
"204 1211 OFFCURVE",
"115 932 OFFCURVE",
"115 727 QCURVE SMOOTH",
"115 505 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 21 22 21 38 21 54 21 70 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01235 3 32 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 13 24 13 40 13 56 13 72 13 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 26 23 26 39 26 55 26 71 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1350;
}
);
note = G;
unicode = 0047;
},
{
glyphname = Gbreve;
layers = (
{
components = (
{
name = G;
},
{
name = breve;
transform = "{1, 0, 0, 1, 313, 352}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
note = Gbreve;
unicode = 011E;
},
{
glyphname = Gcircumflex;
layers = (
{
components = (
{
name = G;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 352, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
note = Gcircumflex;
unicode = 011C;
},
{
glyphname = Gcommaaccent;
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 519, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
note = Gcommaaccent;
unicode = 0122;
},
{
glyphname = Gdotaccent;
layers = (
{
components = (
{
name = G;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 545, 365}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
note = Gdotaccent;
unicode = 0120;
},
{
glyphname = H;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 612 LINE",
"1034 612 LINE",
"1034 0 LINE",
"1274 0 LINE",
"1274 1427 LINE",
"1034 1427 LINE",
"1034 836 LINE",
"422 836 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0125 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 8 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1456;
}
);
note = H;
unicode = 0048;
},
{
glyphname = Hbar;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"455 0 LINE",
"455 612 LINE",
"1067 612 LINE",
"1067 0 LINE",
"1307 0 LINE",
"1307 1016 LINE",
"1491 1016 LINE",
"1491 1182 LINE",
"1307 1182 LINE",
"1307 1427 LINE",
"1067 1427 LINE",
"1067 1182 LINE",
"455 1182 LINE",
"455 1427 LINE",
"215 1427 LINE",
"215 1182 LINE",
"0 1182 LINE",
"0 1016 LINE",
"215 1016 LINE",
"215 0 LINE"
);
},
{
closed = 1;
nodes = (
"455 1016 LINE",
"1067 1016 LINE",
"1067 836 LINE",
"455 836 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01222 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 12 7 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01220 3 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1491;
}
);
note = Hbar;
unicode = 0126;
},
{
glyphname = Hcircumflex;
layers = (
{
components = (
{
name = H;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 336, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1456;
}
);
note = Hcircumflex;
unicode = 0124;
},
{
glyphname = I;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 12 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 604;
}
);
note = I;
unicode = 0049;
},
{
glyphname = IJ;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 604, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1310;
}
);
note = IJ;
unicode = 0132;
},
{
glyphname = Iacute;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 9, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 613;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Ibreve;
layers = (
{
components = (
{
name = I;
},
{
name = breve;
transform = "{1, 0, 0, 1, -102, 373}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 603;
}
);
note = Ibreve;
unicode = 012C;
},
{
glyphname = Icircumflex;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, -85, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 610;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
layers = (
{
components = (
{
name = I;
},
{
name = period;
transform = "{1, 0, 0, 1, 282, 1552}";
},
{
name = period;
transform = "{1, 0, 0, 1, -182, 1552}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 611;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Idotaccent;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 121, 365}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 637;
}
);
note = Idotaccent;
unicode = 0130;
},
{
glyphname = Igrave;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = grave.cap;
transform = "{1, 0, 0, 1, -75, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 612;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Imacron;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macron;
transform = "{1, 0, 0, 1, -105, 352}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 615;
}
);
note = Imacron;
unicode = 012A;
},
{
glyphname = Iogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"194 -2 OFFCURVE",
"139 -65 OFFCURVE",
"94 -141 OFFCURVE",
"65 -230 OFFCURVE",
"65 -279 QCURVE SMOOTH",
"65 -334 OFFCURVE",
"104 -417 OFFCURVE",
"172 -472 OFFCURVE",
"264 -500 OFFCURVE",
"317 -500 QCURVE SMOOTH",
"346 -500 OFFCURVE",
"395 -494 OFFCURVE",
"415 -490 QCURVE SMOOTH",
"437 -486 OFFCURVE",
"457 -479 QCURVE",
"457 -311 LINE",
"447 -313 OFFCURVE",
"436 -314 QCURVE SMOOTH",
"416 -317 OFFCURVE",
"387 -317 QCURVE SMOOTH",
"336 -317 OFFCURVE",
"287 -267 OFFCURVE",
"287 -225 QCURVE SMOOTH",
"287 -174 OFFCURVE",
"365 -60 OFFCURVE",
"459 0 QCURVE",
"459 1427 LINE",
"219 1427 LINE",
"219 21 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0125 0 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 8 23 8 39 8 55 8 71 8 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 641;
}
);
note = Iogonek;
unicode = 012E;
},
{
glyphname = Itilde;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tilde.cap;
transform = "{1, 0, 0, 1, -160, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 616;
}
);
note = Itilde;
unicode = 0128;
},
{
glyphname = J;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"47 0 OFFCURVE",
"86 -8 QCURVE SMOOTH",
"119 -15 OFFCURVE",
"205 -25 OFFCURVE",
"253 -25 QCURVE SMOOTH",
"320 -25 OFFCURVE",
"422 0 OFFCURVE",
"491 61 OFFCURVE",
"526 162 OFFCURVE",
"526 238 QCURVE SMOOTH",
"525 1427 LINE",
"284 1427 LINE",
"284 311 LINE SMOOTH",
"284 263 OFFCURVE",
"268 210 OFFCURVE",
"236 184 OFFCURVE",
"187 178 OFFCURVE",
"153 178 QCURVE SMOOTH",
"131 178 OFFCURVE",
"83 179 OFFCURVE",
"62 180 QCURVE SMOOTH",
"37 181 OFFCURVE",
"14 182 QCURVE",
"14 10 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01213 12 10 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0120 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 706;
}
);
note = J;
unicode = 004A;
},
{
glyphname = Jcircumflex;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 40, -73}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 761;
}
);
note = Jcircumflex;
unicode = 0134;
},
{
glyphname = K;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 621 LINE",
"642 621 LINE",
"994 0 LINE",
"1275 0 LINE",
"854 737 LINE",
"1252 1427 LINE",
"975 1427 LINE",
"642 844 LINE",
"422 844 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 9 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1313;
}
);
note = K;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 419, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1313;
}
);
note = Kcommaaccent;
unicode = 0136;
},
{
glyphname = L;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1012 0 LINE",
"1012 223 LINE",
"422 223 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 12 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
}
);
note = L;
unicode = 004C;
},
{
glyphname = Lacute;
lastChange = "2021-07-14 20:20:25 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 121, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1075;
}
);
note = Lacute;
unicode = 0139;
},
{
glyphname = Lcaron;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"621 958 LINE",
"654 1025 OFFCURVE",
"683 1085 QCURVE SMOOTH",
"695 1110 OFFCURVE",
"721 1164 OFFCURVE",
"744 1213 OFFCURVE",
"764 1255 OFFCURVE",
"770 1270 QCURVE SMOOTH",
"805 1343 OFFCURVE",
"805 1382 QCURVE SMOOTH",
"805 1412 OFFCURVE",
"765 1444 OFFCURVE",
"725 1458 QCURVE SMOOTH",
"703 1465 OFFCURVE",
"659 1473 OFFCURVE",
"640 1476 QCURVE SMOOTH",
"618 1479 OFFCURVE",
"598 1481 QCURVE",
"473 1007 LINE"
);
},
{
closed = 1;
nodes = (
"1012 0 LINE",
"1012 223 LINE",
"422 223 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0128 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01220 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0120 9 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1062;
}
);
note = Lcaron;
unicode = 013D;
},
{
glyphname = Lcommaaccent;
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 374, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1056;
}
);
note = Lcommaaccent;
unicode = 013B;
},
{
glyphname = Ldot;
layers = (
{
components = (
{
name = L;
},
{
name = period;
transform = "{1, 0, 0, 1, 535, 662}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1087;
}
);
note = Ldot;
unicode = 013F;
},
{
glyphname = Lslash;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1112 0 LINE",
"1112 229 LINE",
"520 229 LINE",
"520 578 LINE",
"850 793 LINE",
"850 1047 LINE",
"520 829 LINE",
"520 1427 LINE",
"283 1427 LINE",
"283 702 LINE",
"123 602 LINE",
"123 352 LINE",
"283 453 LINE",
"283 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0120 12 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0121 12 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0126 12 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0127 12 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 2 values pushed */\01210 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1182;
}
);
note = Lslash;
unicode = 0141;
},
{
glyphname = M;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 1204 LINE",
"428 1204 LINE",
"442 1158 OFFCURVE",
"455 1115 QCURVE SMOOTH",
"466 1078 OFFCURVE",
"492 997 OFFCURVE",
"502 967 QCURVE SMOOTH",
"690 387 LINE",
"1049 387 LINE",
"1233 963 LINE SMOOTH",
"1243 993 OFFCURVE",
"1269 1076 OFFCURVE",
"1280 1114 QCURVE SMOOTH",
"1307 1204 LINE",
"1313 1204 LINE",
"1313 0 LINE",
"1552 0 LINE",
"1552 1427 LINE",
"1143 1427 LINE",
"870 567 LINE",
"862 567 LINE",
"598 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0126 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 4 14 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1734;
}
);
note = M;
unicode = 004D;
},
{
glyphname = Mdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = M;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 669, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1734;
}
);
note = uni1E40;
unicode = 1E40;
},
{
glyphname = N;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"420 0 LINE",
"420 1204 LINE",
"424 1204 LINE",
"435 1177 OFFCURVE",
"449 1145 QCURVE SMOOTH",
"460 1118 OFFCURVE",
"492 1046 OFFCURVE",
"510 1004 QCURVE SMOOTH",
"950 0 LINE",
"1339 0 LINE",
"1339 1427 LINE",
"1102 1427 LINE",
"1102 436 LINE SMOOTH",
"1102 402 OFFCURVE",
"1102 328 OFFCURVE",
"1103 296 QCURVE SMOOTH",
"1104 259 OFFCURVE",
"1105 223 QCURVE",
"1100 223 LINE",
"580 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0123 8 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 18 24 18 40 18 56 18 72 18 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1521;
}
);
note = N;
unicode = 004E;
},
{
glyphname = Nacute;
layers = (
{
components = (
{
name = N;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 481, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
note = Nacute;
unicode = 0143;
},
{
glyphname = Ncaron;
layers = (
{
components = (
{
name = N;
},
{
name = caron.cap;
transform = "{1, 0, 0, 1, 430, -30}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
note = Ncaron;
unicode = 0147;
},
{
glyphname = Ncommaaccent;
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 536, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
note = Ncommaaccent;
unicode = 0145;
},
{
glyphname = Eng;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"420 0 LINE",
"420 1204 LINE",
"424 1204 LINE",
"435 1177 OFFCURVE",
"449 1145 QCURVE SMOOTH",
"460 1118 OFFCURVE",
"492 1046 OFFCURVE",
"510 1004 QCURVE SMOOTH",
"950 0 LINE",
"1098 0 LINE",
"1098 -164 LINE SMOOTH",
"1098 -212 OFFCURVE",
"1082 -265 OFFCURVE",
"1050 -291 OFFCURVE",
"1001 -297 OFFCURVE",
"967 -297 QCURVE SMOOTH",
"945 -297 OFFCURVE",
"897 -296 OFFCURVE",
"876 -295 QCURVE SMOOTH",
"851 -294 OFFCURVE",
"828 -293 QCURVE",
"828 -465 LINE",
"861 -475 OFFCURVE",
"900 -483 QCURVE SMOOTH",
"933 -490 OFFCURVE",
"1019 -500 OFFCURVE",
"1067 -500 QCURVE SMOOTH",
"1134 -500 OFFCURVE",
"1236 -475 OFFCURVE",
"1305 -414 OFFCURVE",
"1340 -313 OFFCURVE",
"1340 -237 QCURVE SMOOTH",
"1339 77 LINE",
"1339 1427 LINE",
"1102 1427 LINE",
"1102 436 LINE SMOOTH",
"1102 402 OFFCURVE",
"1102 328 OFFCURVE",
"1103 296 QCURVE SMOOTH",
"1104 259 OFFCURVE",
"1105 223 QCURVE",
"1100 223 LINE",
"580 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01212 12 33 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01242 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01243 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 41 24 41 40 41 56 41 72 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1521;
}
);
note = Eng;
unicode = 014A;
},
{
glyphname = Ntilde;
layers = (
{
components = (
{
name = N;
},
{
name = tilde.cap;
transform = "{1, 0, 0, 1, 311, 41}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = O;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"951 -4 OFFCURVE",
"1081 60 OFFCURVE",
"1181 169 OFFCURVE",
"1250 334 OFFCURVE",
"1286 560 OFFCURVE",
"1286 709 QCURVE SMOOTH",
"1286 858 OFFCURVE",
"1250 1085 OFFCURVE",
"1181 1251 OFFCURVE",
"1081 1362 OFFCURVE",
"951 1428 OFFCURVE",
"793 1456 OFFCURVE",
"702 1456 QCURVE SMOOTH",
"565 1456 OFFCURVE",
"347 1391 OFFCURVE",
"195 1224 OFFCURVE",
"115 934 OFFCURVE",
"115 709 QCURVE SMOOTH",
"115 559 OFFCURVE",
"151 333 OFFCURVE",
"221 168 OFFCURVE",
"322 60 OFFCURVE",
"452 -5 OFFCURVE",
"610 -31 OFFCURVE",
"702 -31 QCURVE SMOOTH",
"793 -31 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"474 236 OFFCURVE",
"398 353 OFFCURVE",
"367 554 OFFCURVE",
"367 709 QCURVE SMOOTH",
"367 865 OFFCURVE",
"398 1067 OFFCURVE",
"474 1186 OFFCURVE",
"604 1233 OFFCURVE",
"702 1233 QCURVE SMOOTH",
"800 1233 OFFCURVE",
"929 1186 OFFCURVE",
"1005 1067 OFFCURVE",
"1036 865 OFFCURVE",
"1036 709 QCURVE SMOOTH",
"1036 554 OFFCURVE",
"1005 353 OFFCURVE",
"929 236 OFFCURVE",
"800 190 OFFCURVE",
"702 190 QCURVE SMOOTH",
"604 190 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 31 25 31 41 31 57 31 73 31 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 41 22 41 38 41 54 41 70 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01226 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 26 23 26 39 26 55 26 71 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 36 24 36 40 36 56 36 72 36 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1401;
}
);
note = O;
unicode = 004F;
},
{
glyphname = Oacute;
layers = (
{
components = (
{
name = O;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 356, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Obreve;
layers = (
{
components = (
{
name = O;
},
{
name = breve;
transform = "{1, 0, 0, 1, 295, 373}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
note = Obreve;
unicode = 014E;
},
{
glyphname = Ocircumflex;
layers = (
{
components = (
{
name = O;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Odieresis;
layers = (
{
components = (
{
name = O;
},
{
name = period;
transform = "{1, 0, 0, 1, 685, 1552}";
},
{
name = period;
transform = "{1, 0, 0, 1, 220, 1552}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Ograve;
layers = (
{
components = (
{
name = O;
},
{
name = grave.cap;
transform = "{1, 0, 0, 1, 369, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Ohungarumlaut;
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlaut.cap;
transform = "{1, 0, 0, 1, 254, 2}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
note = Ohungarumlaut;
unicode = 0150;
},
{
glyphname = Omacron;
layers = (
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 272, 356}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
note = Omacron;
unicode = 014C;
},
{
glyphname = Oslash;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"429 -172 LINE",
"504 -6 LINE",
"554 -20 OFFCURVE",
"665 -31 OFFCURVE",
"727 -31 QCURVE SMOOTH",
"818 -31 OFFCURVE",
"976 -4 OFFCURVE",
"1106 60 OFFCURVE",
"1206 169 OFFCURVE",
"1275 334 OFFCURVE",
"1311 560 OFFCURVE",
"1311 709 QCURVE SMOOTH",
"1311 835 OFFCURVE",
"1286 1035 OFFCURVE",
"1236 1190 OFFCURVE",
"1164 1304 OFFCURVE",
"1117 1344 QCURVE",
"1231 1595 LINE",
"1012 1595 LINE",
"938 1433 LINE",
"890 1445 OFFCURVE",
"785 1456 OFFCURVE",
"727 1456 QCURVE SMOOTH",
"590 1456 OFFCURVE",
"372 1391 OFFCURVE",
"220 1224 OFFCURVE",
"140 934 OFFCURVE",
"140 709 QCURVE SMOOTH",
"140 586 OFFCURVE",
"164 390 OFFCURVE",
"212 237 OFFCURVE",
"281 124 OFFCURVE",
"326 85 QCURVE",
"209 -172 LINE"
);
},
{
closed = 1;
nodes = (
"413 395 OFFCURVE",
"392 577 OFFCURVE",
"392 709 QCURVE SMOOTH",
"392 865 OFFCURVE",
"423 1067 OFFCURVE",
"499 1186 OFFCURVE",
"629 1233 OFFCURVE",
"727 1233 QCURVE SMOOTH",
"794 1233 OFFCURVE",
"843 1223 QCURVE",
"439 335 LINE"
);
},
{
closed = 1;
nodes = (
"1036 1039 OFFCURVE",
"1061 849 OFFCURVE",
"1061 709 QCURVE SMOOTH",
"1061 554 OFFCURVE",
"1030 353 OFFCURVE",
"954 236 OFFCURVE",
"825 190 OFFCURVE",
"727 190 QCURVE SMOOTH",
"690 190 OFFCURVE",
"626 195 OFFCURVE",
"599 202 QCURVE",
"1006 1100 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01215 33 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01241 33 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0125 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01253 33 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 53 25 53 41 53 57 53 73 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01221 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01244 33 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01256 33 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01228 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01214 32 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 36 24 36 40 36 56 36 72 36 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01244 32 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01248 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 48 23 48 39 48 55 48 71 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01256 32 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1451;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = Otilde;
layers = (
{
components = (
{
name = O;
},
{
name = tilde.cap;
transform = "{1, 0, 0, 1, 231, 10}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = OE;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"843 -11 OFFCURVE",
"891 -8 QCURVE SMOOTH",
"947 -4 OFFCURVE",
"1001 0 QCURVE",
"1876 0 LINE",
"1876 223 LINE",
"1241 223 LINE",
"1241 610 LINE",
"1759 610 LINE",
"1759 829 LINE",
"1241 829 LINE",
"1241 1204 LINE",
"1860 1204 LINE",
"1860 1427 LINE",
"1008 1427 LINE",
"952 1432 OFFCURVE",
"894 1436 QCURVE SMOOTH",
"844 1440 OFFCURVE",
"726 1446 OFFCURVE",
"672 1446 QCURVE SMOOTH",
"610 1446 OFFCURVE",
"479 1422 OFFCURVE",
"355 1360 OFFCURVE",
"246 1256 OFFCURVE",
"163 1096 OFFCURVE",
"115 873 OFFCURVE",
"115 725 QCURVE SMOOTH",
"115 571 OFFCURVE",
"161 342 OFFCURVE",
"240 178 OFFCURVE",
"347 71 OFFCURVE",
"471 8 OFFCURVE",
"606 -16 OFFCURVE",
"672 -16 QCURVE SMOOTH",
"726 -16 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"735 205 OFFCURVE",
"633 213 OFFCURVE",
"539 246 OFFCURVE",
"459 312 OFFCURVE",
"399 428 OFFCURVE",
"365 602 OFFCURVE",
"365 727 QCURVE SMOOTH",
"365 845 OFFCURVE",
"398 1010 OFFCURVE",
"457 1120 OFFCURVE",
"537 1183 OFFCURVE",
"630 1214 OFFCURVE",
"731 1221 OFFCURVE",
"782 1221 QCURVE SMOOTH",
"847 1221 OFFCURVE",
"959 1220 OFFCURVE",
"1001 1217 QCURVE",
"1001 205 LINE",
"786 205 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01246 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 46 22 46 38 46 54 46 70 46 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01224 3 25 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1968;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = P;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 502 LINE",
"739 502 LINE SMOOTH",
"784 502 OFFCURVE",
"877 515 OFFCURVE",
"965 552 OFFCURVE",
"1043 616 OFFCURVE",
"1101 718 OFFCURVE",
"1135 863 OFFCURVE",
"1135 961 QCURVE SMOOTH",
"1135 1059 OFFCURVE",
"1104 1205 OFFCURVE",
"1048 1308 OFFCURVE",
"974 1374 OFFCURVE",
"888 1413 OFFCURVE",
"794 1427 OFFCURVE",
"748 1427 QCURVE SMOOTH",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 1204 LINE",
"711 1204 LINE SMOOTH",
"765 1204 OFFCURVE",
"832 1165 OFFCURVE",
"871 1098 OFFCURVE",
"885 1010 OFFCURVE",
"885 961 QCURVE SMOOTH",
"885 911 OFFCURVE",
"871 825 OFFCURVE",
"832 761 OFFCURVE",
"765 725 OFFCURVE",
"711 725 QCURVE SMOOTH",
"422 725 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 24 25 24 41 24 57 24 73 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01219 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01229 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1215;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Pdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = P;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 410, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1215;
}
);
note = uni1E56;
unicode = 1E56;
},
{
glyphname = Thorn;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 266 LINE",
"443 259 OFFCURVE",
"509 241 OFFCURVE",
"589 225 OFFCURVE",
"678 214 OFFCURVE",
"723 214 QCURVE SMOOTH",
"820 214 OFFCURVE",
"987 256 OFFCURVE",
"1109 367 OFFCURVE",
"1178 560 OFFCURVE",
"1178 711 QCURVE SMOOTH",
"1178 859 OFFCURVE",
"1108 1051 OFFCURVE",
"987 1162 OFFCURVE",
"824 1205 OFFCURVE",
"731 1205 QCURVE SMOOTH",
"682 1205 OFFCURVE",
"588 1194 OFFCURVE",
"506 1177 OFFCURVE",
"441 1160 OFFCURVE",
"422 1154 QCURVE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"430 983 OFFCURVE",
"475 988 OFFCURVE",
"539 992 OFFCURVE",
"617 996 OFFCURVE",
"659 996 QCURVE SMOOTH",
"729 996 OFFCURVE",
"833 974 OFFCURVE",
"901 912 OFFCURVE",
"934 801 OFFCURVE",
"934 713 QCURVE SMOOTH",
"934 624 OFFCURVE",
"894 512 OFFCURVE",
"817 449 OFFCURVE",
"707 425 OFFCURVE",
"637 425 QCURVE SMOOTH",
"556 425 OFFCURVE",
"442 438 OFFCURVE",
"422 442 QCURVE",
"422 982 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 33 25 33 41 33 57 33 73 33 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01228 5 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0127 5 38 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0122 38 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01222 17 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1228;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = Q;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"896 -15 OFFCURVE",
"951 2 QCURVE",
"1034 -115 LINE",
"1252 -115 LINE",
"1106 90 LINE",
"1149 130 OFFCURVE",
"1217 242 OFFCURVE",
"1262 394 OFFCURVE",
"1286 588 OFFCURVE",
"1286 709 QCURVE SMOOTH",
"1286 858 OFFCURVE",
"1250 1085 OFFCURVE",
"1181 1251 OFFCURVE",
"1081 1362 OFFCURVE",
"951 1428 OFFCURVE",
"793 1456 OFFCURVE",
"702 1456 QCURVE SMOOTH",
"565 1456 OFFCURVE",
"347 1391 OFFCURVE",
"195 1224 OFFCURVE",
"115 934 OFFCURVE",
"115 709 QCURVE SMOOTH",
"115 559 OFFCURVE",
"151 333 OFFCURVE",
"221 168 OFFCURVE",
"322 60 OFFCURVE",
"452 -5 OFFCURVE",
"610 -31 OFFCURVE",
"702 -31 QCURVE SMOOTH",
"772 -31 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"474 236 OFFCURVE",
"398 353 OFFCURVE",
"367 554 OFFCURVE",
"367 709 QCURVE SMOOTH",
"367 865 OFFCURVE",
"398 1067 OFFCURVE",
"474 1186 OFFCURVE",
"604 1233 OFFCURVE",
"702 1233 QCURVE SMOOTH",
"800 1233 OFFCURVE",
"929 1186 OFFCURVE",
"1005 1067 OFFCURVE",
"1036 865 OFFCURVE",
"1036 709 QCURVE SMOOTH",
"1036 548 OFFCURVE",
"1003 344 OFFCURVE",
"961 286 QCURVE",
"862 430 LINE",
"647 430 LINE",
"809 198 LINE",
"786 194 OFFCURVE",
"732 190 OFFCURVE",
"702 190 QCURVE SMOOTH",
"604 190 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 39 25 39 41 39 57 39 73 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01225 39 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01233 7 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01234 7 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01236 7 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01249 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 49 22 49 38 49 54 49 70 49 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01236 0 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 44 24 44 40 44 56 44 72 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1403;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 524 LINE",
"659 524 LINE",
"926 0 LINE",
"1200 0 LINE",
"899 578 LINE",
"899 580 LINE",
"968 599 OFFCURVE",
"1023 647 QCURVE SMOOTH",
"1046 668 OFFCURVE",
"1091 726 OFFCURVE",
"1126 804 OFFCURVE",
"1147 905 OFFCURVE",
"1147 969 QCURVE SMOOTH",
"1147 1065 OFFCURVE",
"1115 1207 OFFCURVE",
"1056 1309 OFFCURVE",
"976 1374 OFFCURVE",
"879 1412 OFFCURVE",
"770 1427 OFFCURVE",
"713 1427 QCURVE SMOOTH",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 1204 LINE",
"705 1204 LINE SMOOTH",
"749 1204 OFFCURVE",
"821 1181 OFFCURVE",
"872 1129 OFFCURVE",
"899 1044 OFFCURVE",
"899 983 QCURVE SMOOTH",
"899 750 OFFCURVE",
"711 750 QCURVE SMOOTH",
"422 750 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01231 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01223 3 19 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1285;
}
);
note = R;
unicode = 0052;
},
{
glyphname = Racute;
layers = (
{
components = (
{
name = R;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 322, -32}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
note = Racute;
unicode = 0154;
},
{
glyphname = Rcaron;
layers = (
{
components = (
{
name = R;
},
{
name = caron.cap;
transform = "{1, 0, 0, 1, 231, -3}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
note = Rcaron;
unicode = 0158;
},
{
glyphname = Rcommaaccent;
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
note = Rcommaaccent;
unicode = 0156;
},
{
glyphname = S;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"152 18 OFFCURVE",
"207 3 QCURVE SMOOTH",
"255 -10 OFFCURVE",
"408 -31 OFFCURVE",
"524 -31 QCURVE SMOOTH",
"674 -31 OFFCURVE",
"863 18 OFFCURVE",
"971 121 OFFCURVE",
"1010 284 OFFCURVE",
"1010 398 QCURVE SMOOTH",
"1010 471 OFFCURVE",
"998 583 OFFCURVE",
"972 666 OFFCURVE",
"929 726 OFFCURVE",
"869 771 OFFCURVE",
"788 804 OFFCURVE",
"736 819 QCURVE SMOOTH",
"465 897 LINE SMOOTH",
"425 909 OFFCURVE",
"378 937 OFFCURVE",
"353 975 OFFCURVE",
"346 1025 OFFCURVE",
"346 1057 QCURVE SMOOTH",
"346 1115 OFFCURVE",
"372 1185 OFFCURVE",
"438 1223 OFFCURVE",
"552 1235 OFFCURVE",
"641 1235 QCURVE SMOOTH",
"698 1235 OFFCURVE",
"805 1228 OFFCURVE",
"848 1223 QCURVE SMOOTH",
"898 1218 OFFCURVE",
"943 1212 QCURVE",
"943 1397 LINE",
"894 1413 OFFCURVE",
"834 1426 QCURVE SMOOTH",
"783 1437 OFFCURVE",
"642 1456 OFFCURVE",
"557 1456 QCURVE SMOOTH",
"455 1456 OFFCURVE",
"289 1408 OFFCURVE",
"172 1308 OFFCURVE",
"108 1153 OFFCURVE",
"108 1047 QCURVE SMOOTH",
"108 957 OFFCURVE",
"135 824 OFFCURVE",
"194 730 OFFCURVE",
"290 669 OFFCURVE",
"359 651 QCURVE SMOOTH",
"650 575 LINE SMOOTH",
"692 564 OFFCURVE",
"740 529 OFFCURVE",
"766 481 OFFCURVE",
"773 420 OFFCURVE",
"773 383 QCURVE SMOOTH",
"773 336 OFFCURVE",
"756 264 OFFCURVE",
"696 215 OFFCURVE",
"582 190 OFFCURVE",
"485 190 QCURVE SMOOTH",
"412 190 OFFCURVE",
"281 196 OFFCURVE",
"230 201 QCURVE SMOOTH",
"171 206 OFFCURVE",
"120 213 QCURVE",
"120 37 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01242 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 7 values pushed */\0126 42 22 42 38 42 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\01254 42 70 42 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01255 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01260 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 34 24 34 40 34 56 34 72 34 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
note = S;
unicode = 0053;
},
{
glyphname = Sacute;
layers = (
{
components = (
{
name = S;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 242, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
note = Sacute;
unicode = 015A;
},
{
glyphname = Scaron;
layers = (
{
components = (
{
name = S;
},
{
name = caron.cap;
transform = "{1, 0, 0, 1, 168, 25}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = Scedilla;
layers = (
{
components = (
{
name = S;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 338, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
note = Scedilla;
unicode = 015E;
},
{
glyphname = Scircumflex;
layers = (
{
components = (
{
name = S;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 193, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
note = Scircumflex;
unicode = 015C;
},
{
glyphname = Scommaaccent;
layers = (
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 312, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
note = Scommaaccent;
unicode = 0218;
},
{
glyphname = Sdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 357, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
note = uni1E60;
unicode = 1E60;
},
{
glyphname = T;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"678 0 LINE",
"678 1206 LINE",
"1110 1206 LINE",
"1110 1427 LINE",
"12 1427 LINE",
"12 1206 LINE",
"440 1206 LINE",
"440 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0125 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1122;
}
);
note = T;
unicode = 0054;
},
{
glyphname = Tbar;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"707 0 LINE",
"707 603 LINE",
"996 603 LINE",
"996 797 LINE",
"707 797 LINE",
"707 1206 LINE",
"1139 1206 LINE",
"1139 1427 LINE",
"41 1427 LINE",
"41 1206 LINE",
"469 1206 LINE",
"469 797 LINE",
"185 797 LINE",
"185 603 LINE",
"469 603 LINE",
"469 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01212 1 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 8 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0124 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1180;
}
);
note = Tbar;
unicode = 0166;
},
{
glyphname = Tcaron;
layers = (
{
components = (
{
name = T;
},
{
name = caron.cap;
transform = "{1, 0, 0, 1, 170, 10}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
note = Tcaron;
unicode = 0164;
},
{
glyphname = Tcommaaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 321, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
note = Tcommaaccent;
unicode = 021A;
},
{
glyphname = Tdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 363, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
note = uni1E6A;
unicode = 1E6A;
},
{
glyphname = U;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"177 331 OFFCURVE",
"235 148 OFFCURVE",
"362 28 OFFCURVE",
"562 -31 OFFCURVE",
"704 -31 QCURVE SMOOTH",
"846 -31 OFFCURVE",
"1045 29 OFFCURVE",
"1171 150 OFFCURVE",
"1228 334 OFFCURVE",
"1228 459 QCURVE SMOOTH",
"1228 1427 LINE",
"990 1427 LINE",
"990 473 LINE SMOOTH",
"990 388 OFFCURVE",
"955 278 OFFCURVE",
"883 215 OFFCURVE",
"776 190 OFFCURVE",
"704 190 QCURVE SMOOTH",
"624 190 OFFCURVE",
"514 215 OFFCURVE",
"445 278 OFFCURVE",
"415 388 OFFCURVE",
"415 473 QCURVE SMOOTH",
"415 1427 LINE",
"177 1427 LINE",
"177 455 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0127 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 7 23 7 39 7 55 7 71 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1405;
}
);
note = U;
unicode = 0055;
},
{
glyphname = Uacute;
layers = (
{
components = (
{
name = U;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 415, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ubreve;
layers = (
{
components = (
{
name = U;
},
{
name = breve;
transform = "{1, 0, 0, 1, 296, 332}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Ubreve;
unicode = 016C;
},
{
glyphname = Ucircumflex;
layers = (
{
components = (
{
name = U;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 310, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Udieresis;
layers = (
{
components = (
{
name = U;
},
{
name = period;
transform = "{1, 0, 0, 1, 686, 1552}";
},
{
name = period;
transform = "{1, 0, 0, 1, 221, 1552}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = Ugrave;
layers = (
{
components = (
{
name = U;
},
{
name = grave.cap;
transform = "{1, 0, 0, 1, 351, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = Uhungarumlaut;
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 230, 352}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Uhungarumlaut;
unicode = 0170;
},
{
glyphname = Umacron;
layers = (
{
components = (
{
name = U;
},
{
name = macron;
transform = "{1, 0, 0, 1, 288, 373}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Umacron;
unicode = 016A;
},
{
glyphname = Uogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"177 336 OFFCURVE",
"230 158 OFFCURVE",
"346 38 OFFCURVE",
"529 -26 OFFCURVE",
"659 -30 QCURVE",
"639 -54 OFFCURVE",
"601 -109 OFFCURVE",
"572 -172 OFFCURVE",
"554 -241 OFFCURVE",
"554 -279 QCURVE SMOOTH",
"554 -334 OFFCURVE",
"593 -417 OFFCURVE",
"661 -472 OFFCURVE",
"753 -500 OFFCURVE",
"806 -500 QCURVE SMOOTH",
"835 -500 OFFCURVE",
"884 -494 OFFCURVE",
"904 -490 QCURVE SMOOTH",
"926 -486 OFFCURVE",
"946 -479 QCURVE",
"946 -311 LINE",
"936 -313 OFFCURVE",
"925 -314 QCURVE SMOOTH",
"905 -317 OFFCURVE",
"876 -317 QCURVE SMOOTH",
"825 -317 OFFCURVE",
"776 -267 OFFCURVE",
"776 -225 QCURVE SMOOTH",
"776 -175 OFFCURVE",
"854 -60 OFFCURVE",
"947 0 QCURVE",
"1096 45 OFFCURVE",
"1228 273 OFFCURVE",
"1228 459 QCURVE SMOOTH",
"1228 1427 LINE",
"990 1427 LINE",
"990 473 LINE SMOOTH",
"990 388 OFFCURVE",
"955 278 OFFCURVE",
"883 215 OFFCURVE",
"776 190 OFFCURVE",
"704 190 QCURVE SMOOTH",
"624 190 OFFCURVE",
"514 215 OFFCURVE",
"445 278 OFFCURVE",
"415 388 OFFCURVE",
"415 473 QCURVE SMOOTH",
"415 1427 LINE",
"177 1427 LINE",
"177 455 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 13 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01221 10 39 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 21 22 21 38 21 54 21 70 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01244 39 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01231 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01244 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0127 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 7 23 7 39 7 55 7 71 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01224 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 24 23 24 39 24 55 24 71 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1405;
}
);
note = Uogonek;
unicode = 0172;
},
{
glyphname = Uring;
layers = (
{
components = (
{
name = U;
},
{
name = ring;
transform = "{1, 0, 0, 1, 388, 332}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Uring;
unicode = 016E;
},
{
glyphname = Utilde;
layers = (
{
components = (
{
name = U;
},
{
name = tilde.cap;
transform = "{1, 0, 0, 1, 232, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
note = Utilde;
unicode = 0168;
},
{
glyphname = V;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1343 1427 LINE",
"1069 1427 LINE",
"680 223 LINE",
"664 223 LINE",
"274 1427 LINE",
"0 1427 LINE",
"483 0 LINE",
"860 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1343;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"736 0 LINE",
"973 1225 LINE",
"976 1225 LINE",
"1229 0 LINE",
"1604 0 LINE",
"1907 1427 LINE",
"1664 1427 LINE",
"1430 223 LINE",
"1426 223 LINE",
"1176 1427 LINE",
"777 1427 LINE",
"541 223 LINE",
"537 223 LINE",
"289 1427 LINE",
"35 1427 LINE",
"357 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1942;
}
);
note = W;
unicode = 0057;
},
{
glyphname = Wacute;
layers = (
{
components = (
{
name = W;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 683, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1942;
}
);
note = Wacute;
unicode = 1E82;
},
{
glyphname = Wcircumflex;
layers = (
{
components = (
{
name = W;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 580, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1942;
}
);
note = Wcircumflex;
unicode = 0174;
},
{
glyphname = Wdieresis;
layers = (
{
components = (
{
name = W;
},
{
name = period;
transform = "{1, 0, 0, 1, 956, 1573}";
},
{
name = period;
transform = "{1, 0, 0, 1, 491, 1573}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1942;
}
);
note = Wdieresis;
unicode = 1E84;
},
{
glyphname = Wgrave;
layers = (
{
components = (
{
name = W;
},
{
name = grave.cap;
transform = "{1, 0, 0, 1, 619, 20}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1942;
}
);
note = Wgrave;
unicode = 1E80;
},
{
glyphname = X;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"296 0 LINE",
"625 518 LINE",
"961 0 LINE",
"1250 0 LINE",
"773 739 LINE",
"1211 1427 LINE",
"930 1427 LINE",
"636 951 LINE",
"330 1427 LINE",
"38 1427 LINE",
"486 734 LINE",
"15 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0123 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0129 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1265;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"729 0 LINE",
"729 551 LINE",
"1221 1427 LINE",
"940 1427 LINE",
"612 805 LINE",
"608 805 LINE",
"281 1427 LINE",
"0 1427 LINE",
"492 551 LINE",
"492 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0127 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0124 0 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0124 8 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1221;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Yacute;
layers = (
{
components = (
{
name = Y;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 383, -60}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = Ycircumflex;
layers = (
{
components = (
{
name = Y;
},
{
name = circumflex.cap;
transform = "{1, 0, 0, 1, 219, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
note = Ycircumflex;
unicode = 0176;
},
{
glyphname = Ydieresis;
layers = (
{
components = (
{
name = Y;
},
{
name = period;
transform = "{1, 0, 0, 1, 595, 1552}";
},
{
name = period;
transform = "{1, 0, 0, 1, 130, 1552}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = Ygrave;
layers = (
{
components = (
{
name = Y;
},
{
name = grave.cap;
transform = "{1, 0, 0, 1, 225, -60}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
note = Ygrave;
unicode = 1EF2;
},
{
glyphname = Z;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1196 0 LINE",
"1196 223 LINE",
"446 223 LINE",
"446 225 LINE",
"1188 1268 LINE",
"1188 1427 LINE",
"131 1427 LINE",
"131 1204 LINE",
"834 1204 LINE",
"834 1202 LINE",
"90 156 LINE",
"90 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1276;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = Zacute;
layers = (
{
components = (
{
name = Z;
},
{
name = acute.cap;
transform = "{1, 0, 0, 1, 354, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Zacute;
unicode = 0179;
},
{
glyphname = Zcaron;
layers = (
{
components = (
{
name = Z;
},
{
name = caron.cap;
transform = "{1, 0, 0, 1, 268, 4}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Zcaron;
unicode = 017D;
},
{
glyphname = Zdotaccent;
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 440, 360}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
note = Zdotaccent;
unicode = 017B;
},
{
glyphname = a;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"164 83 OFFCURVE",
"245 5 OFFCURVE",
"373 -31 OFFCURVE",
"463 -31 QCURVE SMOOTH",
"537 -31 OFFCURVE",
"660 3 OFFCURVE",
"706 23 QCURVE SMOOTH",
"759 47 OFFCURVE",
"803 78 QCURVE",
"821 0 LINE",
"1022 0 LINE",
"1022 639 LINE SMOOTH",
"1022 706 OFFCURVE",
"1015 807 OFFCURVE",
"997 885 OFFCURVE",
"969 943 OFFCURVE",
"948 969 QCURVE SMOOTH",
"923 1000 OFFCURVE",
"860 1042 OFFCURVE",
"778 1068 OFFCURVE",
"671 1079 OFFCURVE",
"602 1079 QCURVE SMOOTH",
"499 1079 OFFCURVE",
"349 1060 OFFCURVE",
"299 1049 QCURVE SMOOTH",
"240 1036 OFFCURVE",
"200 1020 QCURVE",
"200 854 LINE",
"244 860 OFFCURVE",
"293 865 QCURVE SMOOTH",
"335 870 OFFCURVE",
"442 877 OFFCURVE",
"499 877 QCURVE SMOOTH",
"589 877 OFFCURVE",
"701 857 OFFCURVE",
"733 834 QCURVE SMOOTH",
"748 822 OFFCURVE",
"769 796 OFFCURVE",
"781 758 OFFCURVE",
"786 707 OFFCURVE",
"786 670 QCURVE SMOOTH",
"786 572 LINE",
"746 586 OFFCURVE",
"697 597 QCURVE SMOOTH",
"654 607 OFFCURVE",
"537 623 OFFCURVE",
"465 623 QCURVE SMOOTH",
"394 623 OFFCURVE",
"271 589 OFFCURVE",
"180 513 OFFCURVE",
"127 389 OFFCURVE",
"127 299 QCURVE SMOOTH",
"127 209 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"392 396 OFFCURVE",
"438 425 OFFCURVE",
"509 434 OFFCURVE",
"559 434 QCURVE SMOOTH",
"604 434 OFFCURVE",
"685 427 OFFCURVE",
"717 422 QCURVE SMOOTH",
"754 417 OFFCURVE",
"786 411 QCURVE",
"786 228 LINE",
"751 211 OFFCURVE",
"711 198 QCURVE SMOOTH",
"676 187 OFFCURVE",
"585 168 OFFCURVE",
"534 168 QCURVE SMOOTH",
"495 168 OFFCURVE",
"434 176 OFFCURVE",
"392 203 OFFCURVE",
"370 255 OFFCURVE",
"370 299 QCURVE SMOOTH",
"370 343 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01243 11 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01253 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 53 22 53 38 53 54 53 70 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01275 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01248 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 4 69 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01210 69 5 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 19 24 19 40 19 56 19 72 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01258 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 58 23 58 39 58 55 58 71 58 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01243 48 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01269 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1193;
}
);
note = a;
unicode = 0061;
},
{
glyphname = aacute;
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 266, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1180;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = abreve;
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 180, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1180;
}
);
note = abreve;
unicode = 0103;
},
{
glyphname = acircumflex;
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 156, 20}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1180;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = adieresis;
layers = (
{
components = (
{
name = a;
},
{
name = period;
transform = "{1, 0, 0, 1, 97, 1178}";
},
{
name = period;
transform = "{1, 0, 0, 1, 566, 1178}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1180;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = agrave;
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 262, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1180;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = amacron;
layers = (
{
components = (
{
name = a;
},
{
name = macron;
transform = "{1, 0, 0, 0.90002, 156, 103}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1180;
}
);
note = amacron;
unicode = 0101;
},
{
glyphname = aogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"164 83 OFFCURVE",
"245 5 OFFCURVE",
"373 -31 OFFCURVE",
"463 -31 QCURVE SMOOTH",
"537 -31 OFFCURVE",
"660 3 OFFCURVE",
"706 23 QCURVE SMOOTH",
"759 47 OFFCURVE",
"803 78 QCURVE",
"818 11 LINE",
"787 -11 OFFCURVE",
"720 -71 OFFCURVE",
"664 -147 OFFCURVE",
"628 -237 OFFCURVE",
"628 -289 QCURVE SMOOTH",
"628 -340 OFFCURVE",
"663 -419 OFFCURVE",
"725 -473 OFFCURVE",
"810 -500 OFFCURVE",
"861 -500 QCURVE SMOOTH",
"896 -500 OFFCURVE",
"955 -494 OFFCURVE",
"976 -490 QCURVE SMOOTH",
"1001 -486 OFFCURVE",
"1020 -479 QCURVE",
"1020 -311 LINE",
"1010 -313 OFFCURVE",
"999 -314 QCURVE SMOOTH",
"979 -317 OFFCURVE",
"950 -317 QCURVE SMOOTH",
"899 -317 OFFCURVE",
"850 -267 OFFCURVE",
"850 -225 QCURVE SMOOTH",
"850 -174 OFFCURVE",
"928 -60 OFFCURVE",
"1022 0 QCURVE",
"1022 639 LINE SMOOTH",
"1022 706 OFFCURVE",
"1015 807 OFFCURVE",
"997 885 OFFCURVE",
"969 943 OFFCURVE",
"948 969 QCURVE SMOOTH",
"923 1000 OFFCURVE",
"860 1042 OFFCURVE",
"778 1068 OFFCURVE",
"671 1079 OFFCURVE",
"602 1079 QCURVE SMOOTH",
"499 1079 OFFCURVE",
"349 1060 OFFCURVE",
"299 1049 QCURVE SMOOTH",
"240 1036 OFFCURVE",
"200 1020 QCURVE",
"200 854 LINE",
"244 860 OFFCURVE",
"293 865 QCURVE SMOOTH",
"335 870 OFFCURVE",
"442 877 OFFCURVE",
"499 877 QCURVE SMOOTH",
"589 877 OFFCURVE",
"701 857 OFFCURVE",
"733 834 QCURVE SMOOTH",
"748 822 OFFCURVE",
"769 796 OFFCURVE",
"781 758 OFFCURVE",
"786 707 OFFCURVE",
"786 670 QCURVE SMOOTH",
"786 572 LINE",
"746 586 OFFCURVE",
"697 597 QCURVE SMOOTH",
"654 607 OFFCURVE",
"537 623 OFFCURVE",
"465 623 QCURVE SMOOTH",
"394 623 OFFCURVE",
"271 589 OFFCURVE",
"180 513 OFFCURVE",
"127 389 OFFCURVE",
"127 299 QCURVE SMOOTH",
"127 209 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"392 396 OFFCURVE",
"438 425 OFFCURVE",
"509 434 OFFCURVE",
"559 434 QCURVE SMOOTH",
"604 434 OFFCURVE",
"685 427 OFFCURVE",
"717 422 QCURVE SMOOTH",
"754 417 OFFCURVE",
"786 411 QCURVE",
"786 228 LINE",
"751 211 OFFCURVE",
"711 198 QCURVE SMOOTH",
"676 187 OFFCURVE",
"585 168 OFFCURVE",
"534 168 QCURVE SMOOTH",
"495 168 OFFCURVE",
"434 176 OFFCURVE",
"392 203 OFFCURVE",
"370 255 OFFCURVE",
"370 299 QCURVE SMOOTH",
"370 343 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01244 10 62 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01278 12 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 62 25 62 41 62 57 62 73 62 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01210 62 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01211 62 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01240 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01268 62 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 78 22 78 38 78 54 78 70 78 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01288 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012100 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01267 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01254 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01257 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01273 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 4 94 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01210 94 5 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 19 24 19 40 19 56 19 72 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01247 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 47 23 47 39 47 55 47 71 47 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01283 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 83 23 83 39 83 55 83 71 83 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01268 73 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1180;
}
);
note = aogonek;
unicode = 0105;
},
{
glyphname = aring;
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 276, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1180;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = atilde;
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1180;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = ae;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"165 102 OFFCURVE",
"255 16 OFFCURVE",
"402 -31 OFFCURVE",
"510 -31 QCURVE SMOOTH",
"631 -31 OFFCURVE",
"815 55 OFFCURVE",
"877 125 QCURVE",
"917 78 OFFCURVE",
"999 18 OFFCURVE",
"1095 -17 OFFCURVE",
"1212 -31 OFFCURVE",
"1286 -31 QCURVE SMOOTH",
"1363 -31 OFFCURVE",
"1499 -10 OFFCURVE",
"1550 3 QCURVE SMOOTH",
"1610 18 OFFCURVE",
"1661 37 QCURVE",
"1661 207 LINE",
"1616 199 OFFCURVE",
"1563 194 QCURVE SMOOTH",
"1517 189 OFFCURVE",
"1396 182 OFFCURVE",
"1327 182 QCURVE SMOOTH",
"1237 182 OFFCURVE",
"1125 212 OFFCURVE",
"1061 276 OFFCURVE",
"1036 375 OFFCURVE",
"1034 444 QCURVE",
"1695 440 LINE",
"1701 494 OFFCURVE",
"1708 593 OFFCURVE",
"1708 640 QCURVE SMOOTH",
"1708 740 OFFCURVE",
"1670 904 OFFCURVE",
"1576 1021 OFFCURVE",
"1417 1085 OFFCURVE",
"1296 1085 QCURVE SMOOTH",
"1156 1085 OFFCURVE",
"975 1007 OFFCURVE",
"931 938 QCURVE",
"889 1010 OFFCURVE",
"710 1085 OFFCURVE",
"579 1085 QCURVE SMOOTH",
"507 1085 OFFCURVE",
"375 1064 OFFCURVE",
"324 1052 QCURVE SMOOTH",
"264 1038 OFFCURVE",
"211 1020 QCURVE",
"211 854 LINE",
"250 860 OFFCURVE",
"297 865 QCURVE SMOOTH",
"337 870 OFFCURVE",
"440 877 OFFCURVE",
"499 877 QCURVE SMOOTH",
"589 877 OFFCURVE",
"711 857 OFFCURVE",
"743 834 QCURVE SMOOTH",
"758 822 OFFCURVE",
"779 796 OFFCURVE",
"791 759 OFFCURVE",
"796 707 OFFCURVE",
"796 670 QCURVE SMOOTH",
"796 635 LINE",
"524 635 LINE SMOOTH",
"326 635 OFFCURVE",
"127 468 OFFCURVE",
"127 301 QCURVE SMOOTH",
"127 225 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1034 689 OFFCURVE",
"1050 780 OFFCURVE",
"1100 847 OFFCURVE",
"1194 885 OFFCURVE",
"1273 885 QCURVE SMOOTH",
"1343 885 OFFCURVE",
"1428 858 OFFCURVE",
"1474 803 OFFCURVE",
"1489 721 OFFCURVE",
"1489 667 QCURVE SMOOTH",
"1489 635 LINE",
"1034 635 LINE"
);
},
{
closed = 1;
nodes = (
"382 396 OFFCURVE",
"432 428 OFFCURVE",
"511 444 OFFCURVE",
"567 444 QCURVE SMOOTH",
"794 444 LINE",
"796 393 LINE SMOOTH",
"798 358 OFFCURVE",
"806 296 OFFCURVE",
"813 267 QCURVE",
"764 225 OFFCURVE",
"620 168 OFFCURVE",
"530 168 QCURVE SMOOTH",
"485 168 OFFCURVE",
"421 178 OFFCURVE",
"380 208 OFFCURVE",
"360 264 OFFCURVE",
"360 311 QCURVE SMOOTH",
"360 345 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01280 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01279 13 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01235 38 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01227 4 79 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 80 22 80 38 80 54 80 70 80 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01299 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01255 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01263 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01268 8 38 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 13 24 13 40 13 56 13 72 13 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01216 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 16 24 16 40 16 56 16 72 16 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01227 24 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 44 23 44 39 44 55 44 71 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01247 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 47 23 47 39 47 55 47 71 47 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01285 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1781;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = aeacute;
layers = (
{
components = (
{
name = ae;
},
{
name = acute;
transform = "{1, 0, 0, 1, 715, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1781;
}
);
note = aeacute;
unicode = 01FD;
},
{
glyphname = b;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"371 0 LINE",
"385 84 LINE",
"432 52 OFFCURVE",
"489 26 QCURVE SMOOTH",
"538 4 OFFCURVE",
"669 -31 OFFCURVE",
"745 -31 QCURVE SMOOTH",
"833 -31 OFFCURVE",
"972 28 OFFCURVE",
"1066 162 OFFCURVE",
"1116 376 OFFCURVE",
"1116 532 QCURVE SMOOTH",
"1116 662 OFFCURVE",
"1083 867 OFFCURVE",
"1001 1010 OFFCURVE",
"862 1085 OFFCURVE",
"756 1085 QCURVE SMOOTH",
"681 1085 OFFCURVE",
"553 1061 OFFCURVE",
"505 1047 QCURVE SMOOTH",
"450 1030 OFFCURVE",
"403 1010 QCURVE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
},
{
closed = 1;
nodes = (
"440 846 OFFCURVE",
"480 855 QCURVE SMOOTH",
"515 862 OFFCURVE",
"601 874 OFFCURVE",
"647 874 QCURVE SMOOTH",
"720 874 OFFCURVE",
"807 843 OFFCURVE",
"852 763 OFFCURVE",
"866 626 OFFCURVE",
"866 520 QCURVE SMOOTH",
"866 425 OFFCURVE",
"849 296 OFFCURVE",
"806 217 OFFCURVE",
"730 182 OFFCURVE",
"670 182 QCURVE SMOOTH",
"609 182 OFFCURVE",
"511 199 OFFCURVE",
"476 210 QCURVE SMOOTH",
"435 222 OFFCURVE",
"403 238 QCURVE",
"403 836 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 35 25 35 41 35 57 35 73 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01222 0 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 40 24 40 40 40 56 40 72 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0122 7 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01222 17 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1228;
}
);
note = b;
unicode = 0062;
},
{
glyphname = bdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = b;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 506, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
note = uni1E03;
unicode = 1E03;
},
{
glyphname = c;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"168 154 OFFCURVE",
"295 26 OFFCURVE",
"466 -27 OFFCURVE",
"563 -27 QCURVE SMOOTH",
"642 -27 OFFCURVE",
"760 -7 OFFCURVE",
"799 5 QCURVE SMOOTH",
"845 19 OFFCURVE",
"877 37 QCURVE",
"877 203 LINE",
"848 197 OFFCURVE",
"812 193 QCURVE SMOOTH",
"781 189 OFFCURVE",
"698 184 OFFCURVE",
"649 184 QCURVE SMOOTH",
"571 184 OFFCURVE",
"457 209 OFFCURVE",
"381 284 OFFCURVE",
"344 420 OFFCURVE",
"344 530 QCURVE SMOOTH",
"344 638 OFFCURVE",
"376 771 OFFCURVE",
"444 844 OFFCURVE",
"552 870 OFFCURVE",
"627 870 QCURVE SMOOTH",
"674 870 OFFCURVE",
"760 865 OFFCURVE",
"794 863 QCURVE SMOOTH",
"834 859 OFFCURVE",
"868 856 QCURVE",
"868 1020 LINE",
"833 1036 OFFCURVE",
"785 1049 QCURVE SMOOTH",
"744 1060 OFFCURVE",
"628 1079 OFFCURVE",
"555 1079 QCURVE SMOOTH",
"460 1079 OFFCURVE",
"292 1019 OFFCURVE",
"167 888 OFFCURVE",
"94 678 OFFCURVE",
"94 528 QCURVE SMOOTH",
"94 367 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01221 11 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 21 22 21 38 21 54 21 70 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 26 23 26 39 26 55 26 71 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 965;
}
);
note = c;
unicode = 0063;
},
{
glyphname = cacute;
layers = (
{
components = (
{
name = c;
},
{
name = acute;
transform = "{1, 0, 0, 1, 215, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
note = cacute;
unicode = 0107;
},
{
glyphname = ccaron;
layers = (
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, 135, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1040;
}
);
note = ccaron;
unicode = 010D;
},
{
glyphname = ccedilla;
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 283, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = ccircumflex;
layers = (
{
components = (
{
name = c;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1011;
}
);
note = ccircumflex;
unicode = 0109;
},
{
glyphname = cdotaccent;
layers = (
{
components = (
{
name = c;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 346, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
note = cdotaccent;
unicode = 010B;
},
{
glyphname = d;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"682 4 OFFCURVE",
"731 26 QCURVE SMOOTH",
"788 52 OFFCURVE",
"833 84 QCURVE",
"847 0 LINE",
"1052 0 LINE",
"1052 1554 LINE",
"814 1554 LINE",
"814 1010 LINE",
"772 1030 OFFCURVE",
"717 1047 QCURVE SMOOTH",
"670 1061 OFFCURVE",
"542 1085 OFFCURVE",
"464 1085 QCURVE SMOOTH",
"379 1085 OFFCURVE",
"244 1024 OFFCURVE",
"151 889 OFFCURVE",
"102 675 OFFCURVE",
"104 523 QCURVE SMOOTH",
"105 370 OFFCURVE",
"152 158 OFFCURVE",
"242 27 OFFCURVE",
"377 -31 OFFCURVE",
"466 -31 QCURVE SMOOTH",
"547 -31 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"410 217 OFFCURVE",
"368 295 OFFCURVE",
"354 419 OFFCURVE",
"354 508 QCURVE SMOOTH",
"354 611 OFFCURVE",
"369 751 OFFCURVE",
"409 837 OFFCURVE",
"479 874 OFFCURVE",
"534 874 QCURVE SMOOTH",
"587 874 OFFCURVE",
"688 862 OFFCURVE",
"727 855 QCURVE SMOOTH",
"773 846 OFFCURVE",
"814 836 QCURVE",
"814 233 LINE",
"777 218 OFFCURVE",
"734 207 QCURVE SMOOTH",
"697 197 OFFCURVE",
"602 182 OFFCURVE",
"550 182 QCURVE SMOOTH",
"487 182 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01217 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01220 16 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 41 22 41 38 41 54 41 70 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 36 24 36 40 36 56 36 72 36 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01215 10 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 25 23 25 39 25 55 25 71 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 0 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1218;
}
);
note = d;
unicode = 0064;
},
{
glyphname = eth;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"165 153 OFFCURVE",
"280 29 OFFCURVE",
"459 -31 OFFCURVE",
"584 -31 QCURVE SMOOTH",
"687 -31 OFFCURVE",
"855 17 OFFCURVE",
"974 124 OFFCURVE",
"1038 293 OFFCURVE",
"1038 414 QCURVE SMOOTH",
"1038 764 LINE SMOOTH",
"1038 844 OFFCURVE",
"1013 1002 OFFCURVE",
"960 1150 OFFCURVE",
"878 1286 OFFCURVE",
"821 1344 QCURVE",
"974 1479 LINE",
"877 1622 LINE",
"681 1451 LINE",
"600 1499 OFFCURVE",
"399 1557 OFFCURVE",
"274 1564 QCURVE",
"250 1391 LINE",
"316 1386 OFFCURVE",
"452 1344 OFFCURVE",
"516 1306 QCURVE",
"358 1168 LINE",
"457 1023 LINE",
"655 1197 LINE",
"721 1128 OFFCURVE",
"801 951 OFFCURVE",
"801 845 QCURVE",
"759 865 OFFCURVE",
"670 895 OFFCURVE",
"580 915 OFFCURVE",
"493 925 OFFCURVE",
"455 925 QCURVE SMOOTH",
"378 925 OFFCURVE",
"251 885 OFFCURVE",
"161 784 OFFCURVE",
"111 610 OFFCURVE",
"111 476 QCURVE SMOOTH",
"111 345 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"382 652 OFFCURVE",
"436 698 OFFCURVE",
"522 710 OFFCURVE",
"584 710 QCURVE SMOOTH",
"626 710 OFFCURVE",
"705 698 OFFCURVE",
"766 683 OFFCURVE",
"802 671 OFFCURVE",
"801 671 QCURVE",
"801 453 LINE SMOOTH",
"801 385 OFFCURVE",
"784 288 OFFCURVE",
"737 225 OFFCURVE",
"652 195 OFFCURVE",
"584 195 QCURVE SMOOTH",
"517 195 OFFCURVE",
"430 232 OFFCURVE",
"379 305 OFFCURVE",
"358 413 OFFCURVE",
"358 485 QCURVE SMOOTH",
"358 563 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01210 15 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1173;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = dcaron;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1228 1036 LINE",
"1261 1103 OFFCURVE",
"1290 1163 QCURVE SMOOTH",
"1302 1188 OFFCURVE",
"1328 1242 OFFCURVE",
"1351 1291 OFFCURVE",
"1371 1333 OFFCURVE",
"1377 1348 QCURVE SMOOTH",
"1412 1421 OFFCURVE",
"1412 1460 QCURVE SMOOTH",
"1412 1490 OFFCURVE",
"1372 1522 OFFCURVE",
"1332 1536 QCURVE SMOOTH",
"1310 1543 OFFCURVE",
"1266 1551 OFFCURVE",
"1247 1554 QCURVE SMOOTH",
"1225 1557 OFFCURVE",
"1205 1559 QCURVE",
"1080 1085 LINE"
);
},
{
closed = 1;
nodes = (
"682 4 OFFCURVE",
"731 26 QCURVE SMOOTH",
"788 52 OFFCURVE",
"833 84 QCURVE",
"847 0 LINE",
"1052 0 LINE",
"1052 1554 LINE",
"814 1554 LINE",
"814 1010 LINE",
"772 1030 OFFCURVE",
"717 1047 QCURVE SMOOTH",
"670 1061 OFFCURVE",
"542 1085 OFFCURVE",
"464 1085 QCURVE SMOOTH",
"379 1085 OFFCURVE",
"244 1024 OFFCURVE",
"151 889 OFFCURVE",
"102 675 OFFCURVE",
"104 523 QCURVE SMOOTH",
"105 370 OFFCURVE",
"152 158 OFFCURVE",
"242 27 OFFCURVE",
"377 -31 OFFCURVE",
"466 -31 QCURVE SMOOTH",
"547 -31 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"410 217 OFFCURVE",
"368 295 OFFCURVE",
"354 419 OFFCURVE",
"354 508 QCURVE SMOOTH",
"354 611 OFFCURVE",
"369 751 OFFCURVE",
"409 837 OFFCURVE",
"479 874 OFFCURVE",
"534 874 QCURVE SMOOTH",
"587 874 OFFCURVE",
"688 862 OFFCURVE",
"727 855 QCURVE SMOOTH",
"773 846 OFFCURVE",
"814 836 QCURVE",
"814 233 LINE",
"777 218 OFFCURVE",
"734 207 QCURVE SMOOTH",
"697 197 OFFCURVE",
"602 182 OFFCURVE",
"550 182 QCURVE SMOOTH",
"487 182 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0128 15 18 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01260 11 24 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01236 13 35 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01239 35 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 60 22 60 38 60 54 60 70 60 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01266 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01255 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 55 24 55 40 55 56 55 72 55 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01234 29 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 44 23 44 39 44 55 44 71 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01239 19 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1333;
}
);
note = dcaron;
unicode = 010F;
},
{
glyphname = dcroat;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"682 4 OFFCURVE",
"731 26 QCURVE SMOOTH",
"788 52 OFFCURVE",
"833 84 QCURVE",
"847 0 LINE",
"1052 0 LINE",
"1052 1204 LINE",
"1197 1204 LINE",
"1197 1384 LINE",
"1052 1384 LINE",
"1052 1554 LINE",
"814 1554 LINE",
"814 1384 LINE",
"529 1384 LINE",
"529 1204 LINE",
"814 1204 LINE",
"814 1010 LINE",
"772 1030 OFFCURVE",
"717 1047 QCURVE SMOOTH",
"670 1061 OFFCURVE",
"542 1085 OFFCURVE",
"464 1085 QCURVE SMOOTH",
"379 1085 OFFCURVE",
"244 1024 OFFCURVE",
"151 889 OFFCURVE",
"102 675 OFFCURVE",
"104 523 QCURVE SMOOTH",
"105 370 OFFCURVE",
"152 158 OFFCURVE",
"242 27 OFFCURVE",
"377 -31 OFFCURVE",
"466 -31 QCURVE SMOOTH",
"547 -31 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"410 217 OFFCURVE",
"368 295 OFFCURVE",
"354 419 OFFCURVE",
"354 508 QCURVE SMOOTH",
"354 611 OFFCURVE",
"369 751 OFFCURVE",
"409 837 OFFCURVE",
"479 874 OFFCURVE",
"534 874 QCURVE SMOOTH",
"587 874 OFFCURVE",
"688 862 OFFCURVE",
"727 855 QCURVE SMOOTH",
"773 846 OFFCURVE",
"814 836 QCURVE",
"814 233 LINE",
"777 218 OFFCURVE",
"734 207 QCURVE SMOOTH",
"697 197 OFFCURVE",
"602 182 OFFCURVE",
"550 182 QCURVE SMOOTH",
"487 182 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01249 11 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01224 17 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01215 17 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01216 17 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01228 17 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 49 22 49 38 49 54 49 70 49 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01219 4 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 44 24 44 40 44 56 44 72 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01215 10 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01233 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 33 23 33 39 33 55 33 71 33 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01228 0 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1197;
}
);
note = dcroat;
unicode = 0111;
},
{
glyphname = ddotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 311, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1218;
}
);
note = uni1E0B;
unicode = 1E0B;
},
{
glyphname = e;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"161 163 OFFCURVE",
"288 28 OFFCURVE",
"472 -31 OFFCURVE",
"590 -31 QCURVE SMOOTH",
"667 -31 OFFCURVE",
"803 -10 OFFCURVE",
"854 3 QCURVE SMOOTH",
"914 18 OFFCURVE",
"965 37 QCURVE",
"965 203 LINE",
"921 195 OFFCURVE",
"867 190 QCURVE SMOOTH",
"821 185 OFFCURVE",
"699 178 OFFCURVE",
"629 178 QCURVE SMOOTH",
"546 178 OFFCURVE",
"435 205 OFFCURVE",
"368 266 OFFCURVE",
"339 363 OFFCURVE",
"338 434 QCURVE",
"999 434 LINE",
"1005 487 OFFCURVE",
"1012 587 OFFCURVE",
"1012 634 QCURVE SMOOTH",
"1012 734 OFFCURVE",
"974 900 OFFCURVE",
"880 1019 OFFCURVE",
"721 1085 OFFCURVE",
"600 1085 QCURVE SMOOTH",
"504 1085 OFFCURVE",
"322 1038 OFFCURVE",
"180 916 OFFCURVE",
"94 704 OFFCURVE",
"94 539 QCURVE SMOOTH",
"94 381 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"336 679 OFFCURVE",
"355 781 OFFCURVE",
"408 850 OFFCURVE",
"503 885 OFFCURVE",
"578 885 QCURVE SMOOTH",
"648 885 OFFCURVE",
"732 857 OFFCURVE",
"778 799 OFFCURVE",
"793 710 OFFCURVE",
"793 650 QCURVE SMOOTH",
"793 612 LINE",
"336 612 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01246 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01235 4 13 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 19 23 19 39 19 55 19 71 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 41 24 41 40 41 56 41 72 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
}
);
note = e;
unicode = 0065;
},
{
glyphname = eacute;
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 270, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = ebreve;
layers = (
{
components = (
{
name = e;
},
{
name = breve;
transform = "{1, 0, 0, 1, 178, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
note = ebreve;
unicode = 0115;
},
{
glyphname = ecaron;
layers = (
{
components = (
{
name = e;
},
{
name = caron;
transform = "{1, 0, 0, 1, 139, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
note = ecaron;
unicode = 011B;
},
{
glyphname = ecircumflex;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 158, -3}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
layers = (
{
components = (
{
name = e;
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 95, 1049}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 519, 1049}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = edotaccent;
layers = (
{
components = (
{
name = e;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 385, -22}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
note = edotaccent;
unicode = 0117;
},
{
glyphname = egrave;
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, 227, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = emacron;
layers = (
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, 178, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
note = emacron;
unicode = 0113;
},
{
glyphname = eogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"161 163 OFFCURVE",
"288 28 OFFCURVE",
"472 -31 OFFCURVE",
"590 -31 QCURVE SMOOTH",
"594 -31 LINE",
"573 -53 OFFCURVE",
"532 -107 OFFCURVE",
"500 -169 OFFCURVE",
"481 -240 OFFCURVE",
"481 -279 QCURVE SMOOTH",
"481 -334 OFFCURVE",
"520 -417 OFFCURVE",
"588 -472 OFFCURVE",
"680 -500 OFFCURVE",
"733 -500 QCURVE SMOOTH",
"762 -500 OFFCURVE",
"812 -494 OFFCURVE",
"831 -490 QCURVE SMOOTH",
"853 -486 OFFCURVE",
"872 -479 QCURVE",
"872 -311 LINE",
"862 -313 OFFCURVE",
"851 -314 QCURVE SMOOTH",
"831 -317 OFFCURVE",
"803 -317 QCURVE SMOOTH",
"752 -317 OFFCURVE",
"702 -267 OFFCURVE",
"702 -225 QCURVE SMOOTH",
"702 -197 OFFCURVE",
"728 -133 OFFCURVE",
"790 -65 OFFCURVE",
"890 4 OFFCURVE",
"965 37 QCURVE",
"965 203 LINE",
"921 195 OFFCURVE",
"867 190 QCURVE SMOOTH",
"821 185 OFFCURVE",
"699 178 OFFCURVE",
"629 178 QCURVE SMOOTH",
"546 178 OFFCURVE",
"435 205 OFFCURVE",
"368 266 OFFCURVE",
"339 363 OFFCURVE",
"338 434 QCURVE",
"999 434 LINE",
"1005 487 OFFCURVE",
"1012 587 OFFCURVE",
"1012 634 QCURVE SMOOTH",
"1012 734 OFFCURVE",
"974 900 OFFCURVE",
"880 1019 OFFCURVE",
"721 1085 OFFCURVE",
"600 1085 QCURVE SMOOTH",
"504 1085 OFFCURVE",
"322 1038 OFFCURVE",
"180 916 OFFCURVE",
"94 704 OFFCURVE",
"94 539 QCURVE SMOOTH",
"94 381 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"336 679 OFFCURVE",
"355 781 OFFCURVE",
"408 850 OFFCURVE",
"503 885 OFFCURVE",
"578 885 QCURVE SMOOTH",
"648 885 OFFCURVE",
"732 857 OFFCURVE",
"778 799 OFFCURVE",
"793 710 OFFCURVE",
"793 650 QCURVE SMOOTH",
"793 612 LINE",
"336 612 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01230 10 48 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01270 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 10 60 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 48 25 48 41 48 57 48 73 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01254 48 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01272 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01240 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01243 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01253 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01259 4 13 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 19 23 19 39 19 55 19 71 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01233 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 33 23 33 39 33 55 33 71 33 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01265 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 65 24 65 40 65 56 65 72 65 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
}
);
note = eogonek;
unicode = 0119;
},
{
glyphname = f;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"475 858 LINE",
"745 858 LINE",
"745 1055 LINE",
"475 1055 LINE",
"475 1241 LINE SMOOTH",
"475 1274 OFFCURVE",
"488 1320 OFFCURVE",
"521 1349 OFFCURVE",
"577 1362 OFFCURVE",
"621 1362 QCURVE SMOOTH",
"657 1362 OFFCURVE",
"725 1360 OFFCURVE",
"751 1358 QCURVE SMOOTH",
"782 1356 OFFCURVE",
"809 1354 QCURVE",
"809 1530 LINE",
"776 1540 OFFCURVE",
"735 1549 QCURVE SMOOTH",
"700 1557 OFFCURVE",
"599 1569 OFFCURVE",
"537 1569 QCURVE SMOOTH",
"454 1569 OFFCURVE",
"339 1524 OFFCURVE",
"269 1438 OFFCURVE",
"238 1312 OFFCURVE",
"238 1231 QCURVE SMOOTH",
"238 1055 LINE",
"90 1055 LINE",
"90 858 LINE",
"238 858 LINE",
"238 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01229 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 5 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 775;
}
);
note = f;
unicode = 0066;
},
{
glyphname = fdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = f;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 190, 450}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 775;
}
);
note = uni1E1F;
unicode = 1E1F;
},
{
glyphname = g;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"303 -456 OFFCURVE",
"365 -469 QCURVE SMOOTH",
"418 -481 OFFCURVE",
"550 -500 OFFCURVE",
"620 -500 QCURVE SMOOTH",
"730 -500 OFFCURVE",
"896 -465 OFFCURVE",
"1007 -384 OFFCURVE",
"1062 -253 OFFCURVE",
"1062 -158 QCURVE SMOOTH",
"1062 1055 LINE",
"882 1055 LINE",
"855 977 LINE",
"810 1005 OFFCURVE",
"755 1028 QCURVE SMOOTH",
"707 1047 OFFCURVE",
"576 1079 OFFCURVE",
"497 1079 QCURVE SMOOTH",
"404 1079 OFFCURVE",
"261 1004 OFFCURVE",
"164 863 OFFCURVE",
"114 660 OFFCURVE",
"114 532 QCURVE SMOOTH",
"114 376 OFFCURVE",
"160 162 OFFCURVE",
"257 30 OFFCURVE",
"408 -27 OFFCURVE",
"513 -27 QCURVE SMOOTH",
"574 -27 OFFCURVE",
"685 -6 OFFCURVE",
"729 7 QCURVE SMOOTH",
"779 22 OFFCURVE",
"824 41 QCURVE",
"824 -143 LINE SMOOTH",
"824 -186 OFFCURVE",
"802 -243 OFFCURVE",
"743 -276 OFFCURVE",
"638 -289 OFFCURVE",
"554 -289 QCURVE SMOOTH",
"485 -289 OFFCURVE",
"372 -282 OFFCURVE",
"332 -277 QCURVE SMOOTH",
"285 -272 OFFCURVE",
"249 -264 QCURVE",
"249 -438 LINE"
);
},
{
closed = 1;
nodes = (
"422 223 OFFCURVE",
"376 304 OFFCURVE",
"364 432 OFFCURVE",
"364 522 QCURVE SMOOTH",
"364 620 OFFCURVE",
"383 752 OFFCURVE",
"427 832 OFFCURVE",
"499 866 OFFCURVE",
"552 866 QCURVE SMOOTH",
"604 866 OFFCURVE",
"702 850 OFFCURVE",
"740 840 QCURVE SMOOTH",
"785 829 OFFCURVE",
"824 815 QCURVE",
"824 211 LINE",
"790 203 OFFCURVE",
"752 198 QCURVE SMOOTH",
"720 193 OFFCURVE",
"639 186 OFFCURVE",
"597 186 QCURVE SMOOTH",
"516 186 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 61 22 61 38 61 54 61 70 61 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01245 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 45 23 45 39 45 55 45 71 45 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01211 16 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1228;
}
);
note = g;
unicode = 0067;
},
{
glyphname = gbreve;
layers = (
{
components = (
{
name = g;
},
{
name = breve;
transform = "{1, 0, 0, 1, 245, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
note = gbreve;
unicode = 011F;
},
{
glyphname = gcircumflex;
layers = (
{
components = (
{
name = g;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 212, 41}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
note = gcircumflex;
unicode = 011D;
},
{
glyphname = gcommaaccent;
layers = (
{
components = (
{
name = g;
},
{
name = commaaccentcomb;
transform = "{-1.14996, 0, 0, -1.14996, 1053, 1271}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
note = gcommaaccent;
unicode = 0123;
},
{
glyphname = gdotaccent;
layers = (
{
components = (
{
name = g;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 437, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
note = gdotaccent;
unicode = 0121;
},
{
glyphname = h;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 829 LINE",
"444 839 OFFCURVE",
"489 847 QCURVE SMOOTH",
"527 854 OFFCURVE",
"620 866 OFFCURVE",
"668 866 QCURVE SMOOTH",
"728 866 OFFCURVE",
"801 846 OFFCURVE",
"840 805 OFFCURVE",
"852 742 OFFCURVE",
"852 700 QCURVE SMOOTH",
"852 0 LINE",
"1090 0 LINE",
"1090 729 LINE SMOOTH",
"1090 834 OFFCURVE",
"1046 969 OFFCURVE",
"965 1048 OFFCURVE",
"848 1079 OFFCURVE",
"776 1079 QCURVE SMOOTH",
"704 1079 OFFCURVE",
"569 1055 OFFCURVE",
"517 1041 QCURVE SMOOTH",
"456 1024 OFFCURVE",
"403 1004 QCURVE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01220 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 20 24 20 40 20 56 20 72 20 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0122 7 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1254;
}
);
note = h;
unicode = 0068;
},
{
glyphname = hbar;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"431 0 LINE",
"431 829 LINE",
"472 839 OFFCURVE",
"517 847 QCURVE SMOOTH",
"555 854 OFFCURVE",
"648 866 OFFCURVE",
"696 866 QCURVE SMOOTH",
"756 866 OFFCURVE",
"829 846 OFFCURVE",
"868 805 OFFCURVE",
"880 742 OFFCURVE",
"880 700 QCURVE SMOOTH",
"880 0 LINE",
"1118 0 LINE",
"1118 729 LINE SMOOTH",
"1118 834 OFFCURVE",
"1074 969 OFFCURVE",
"993 1048 OFFCURVE",
"876 1079 OFFCURVE",
"804 1079 QCURVE SMOOTH",
"732 1079 OFFCURVE",
"597 1055 OFFCURVE",
"545 1041 QCURVE SMOOTH",
"484 1024 OFFCURVE",
"431 1004 QCURVE",
"431 1219 LINE",
"712 1219 LINE",
"712 1376 LINE",
"431 1376 LINE",
"431 1554 LINE",
"194 1554 LINE",
"194 1376 LINE",
"60 1376 LINE",
"60 1219 LINE",
"194 1219 LINE",
"194 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01221 13 22 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0128 1 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0129 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01210 1 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 28 24 28 40 28 56 28 72 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01210 15 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1282;
}
);
note = hbar;
unicode = 0127;
},
{
glyphname = hcircumflex;
lastChange = "2021-07-14 20:20:35 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -120, 410}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1283;
}
);
note = hcircumflex;
unicode = 0125;
},
{
glyphname = i;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"397 1246 OFFCURVE",
"429 1276 OFFCURVE",
"441 1328 OFFCURVE",
"441 1369 QCURVE SMOOTH",
"441 1410 OFFCURVE",
"429 1463 OFFCURVE",
"397 1495 OFFCURVE",
"344 1507 OFFCURVE",
"303 1507 QCURVE SMOOTH",
"262 1507 OFFCURVE",
"209 1495 OFFCURVE",
"176 1463 OFFCURVE",
"163 1410 OFFCURVE",
"163 1369 QCURVE SMOOTH",
"163 1328 OFFCURVE",
"176 1276 OFFCURVE",
"209 1246 OFFCURVE",
"262 1234 OFFCURVE",
"303 1234 QCURVE SMOOTH",
"344 1234 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"422 0 LINE",
"422 1055 LINE",
"184 1055 LINE",
"184 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 15 22 15 38 15 54 15 70 15 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 604;
}
);
note = i;
unicode = 0069;
},
{
glyphname = idotless;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"401 0 LINE",
"401 1055 LINE",
"163 1055 LINE",
"163 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = iacute;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"432 0 LINE",
"432 1055 LINE",
"194 1055 LINE",
"194 0 LINE"
);
},
{
closed = 1;
nodes = (
"266 1187 OFFCURVE",
"335 1232 QCURVE SMOOTH",
"364 1251 OFFCURVE",
"424 1290 OFFCURVE",
"478 1326 OFFCURVE",
"522 1356 OFFCURVE",
"536 1366 QCURVE SMOOTH",
"587 1403 OFFCURVE",
"632 1454 OFFCURVE",
"632 1479 QCURVE SMOOTH",
"632 1496 OFFCURVE",
"612 1534 OFFCURVE",
"593 1557 QCURVE SMOOTH",
"571 1583 OFFCURVE",
"536 1617 OFFCURVE",
"522 1628 QCURVE SMOOTH",
"506 1640 OFFCURVE",
"493 1647 QCURVE",
"85 1264 LINE",
"188 1137 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01213 4 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 4 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 9 23 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 633;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = ibreve;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"492 1197 OFFCURVE",
"572 1272 OFFCURVE",
"612 1377 OFFCURVE",
"612 1442 QCURVE SMOOTH",
"612 1459 OFFCURVE",
"609 1492 OFFCURVE",
"607 1510 QCURVE",
"489 1510 LINE",
"482 1455 OFFCURVE",
"449 1387 OFFCURVE",
"400 1349 OFFCURVE",
"336 1336 OFFCURVE",
"298 1336 QCURVE SMOOTH",
"259 1336 OFFCURVE",
"194 1350 OFFCURVE",
"145 1388 OFFCURVE",
"112 1456 OFFCURVE",
"106 1510 QCURVE",
"-15 1510 LINE",
"-17 1493 OFFCURVE",
"-19 1462 OFFCURVE",
"-19 1447 QCURVE SMOOTH",
"-19 1381 OFFCURVE",
"22 1274 OFFCURVE",
"101 1197 OFFCURVE",
"220 1156 OFFCURVE",
"298 1156 QCURVE SMOOTH",
"375 1156 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"416 0 LINE",
"416 1055 LINE",
"178 1055 LINE",
"178 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01229 13 28 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01228 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01214 4 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 593;
}
);
note = ibreve;
unicode = 012D;
},
{
glyphname = icircumflex;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"518 1107 LINE",
"635 1164 LINE",
"535 1416 LINE SMOOTH",
"518 1458 OFFCURVE",
"474 1511 OFFCURVE",
"419 1540 OFFCURVE",
"349 1551 OFFCURVE",
"305 1551 QCURVE SMOOTH",
"261 1551 OFFCURVE",
"191 1540 OFFCURVE",
"136 1511 OFFCURVE",
"93 1458 OFFCURVE",
"76 1416 QCURVE SMOOTH",
"-25 1164 LINE",
"92 1107 LINE",
"305 1416 LINE"
);
},
{
closed = 1;
nodes = (
"424 0 LINE",
"424 1055 LINE",
"186 1055 LINE",
"186 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01217 13 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01215 16 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 610;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"426 0 LINE",
"426 1055 LINE",
"188 1055 LINE",
"188 0 LINE"
);
},
{
closed = 1;
nodes = (
"-39 1209 OFFCURVE",
"-7 1177 OFFCURVE",
"46 1165 OFFCURVE",
"86 1165 QCURVE SMOOTH",
"128 1165 OFFCURVE",
"182 1177 OFFCURVE",
"212 1209 OFFCURVE",
"225 1262 OFFCURVE",
"225 1303 QCURVE SMOOTH",
"225 1345 OFFCURVE",
"212 1398 OFFCURVE",
"182 1429 OFFCURVE",
"128 1440 OFFCURVE",
"86 1440 QCURVE SMOOTH",
"46 1440 OFFCURVE",
"-7 1429 OFFCURVE",
"-39 1398 OFFCURVE",
"-50 1345 OFFCURVE",
"-50 1303 QCURVE SMOOTH",
"-50 1262 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"392 1209 OFFCURVE",
"424 1177 OFFCURVE",
"477 1165 OFFCURVE",
"517 1165 QCURVE SMOOTH",
"559 1165 OFFCURVE",
"613 1177 OFFCURVE",
"643 1209 OFFCURVE",
"656 1262 OFFCURVE",
"656 1303 QCURVE SMOOTH",
"656 1345 OFFCURVE",
"643 1398 OFFCURVE",
"613 1429 OFFCURVE",
"559 1440 OFFCURVE",
"517 1440 QCURVE SMOOTH",
"477 1440 OFFCURVE",
"424 1429 OFFCURVE",
"392 1398 OFFCURVE",
"381 1345 OFFCURVE",
"381 1303 QCURVE SMOOTH",
"381 1262 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01214 0 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0124 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01224 0 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 24 25 24 41 24 57 24 73 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01234 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 19 24 19 40 19 56 19 72 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 606;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = igrave;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"435 0 LINE",
"435 1055 LINE",
"197 1055 LINE",
"197 0 LINE"
);
},
{
closed = 1;
nodes = (
"531 1274 LINE",
"138 1642 LINE",
"123 1633 OFFCURVE",
"106 1620 QCURVE SMOOTH",
"92 1609 OFFCURVE",
"56 1576 OFFCURVE",
"39 1554 QCURVE SMOOTH",
"20 1531 OFFCURVE",
"1 1495 OFFCURVE",
"1 1478 QCURVE SMOOTH",
"1 1453 OFFCURVE",
"46 1401 OFFCURVE",
"95 1364 QCURVE SMOOTH",
"108 1354 OFFCURVE",
"150 1325 OFFCURVE",
"203 1292 OFFCURVE",
"261 1256 OFFCURVE",
"289 1238 QCURVE SMOOTH",
"355 1197 OFFCURVE",
"431 1151 QCURVE",
"431 1151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01223 15 14 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 14 23 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01222 9 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 616;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = ij;
lastChange = "2021-07-14 20:20:35 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 604, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1234;
}
);
note = ij;
unicode = 0133;
},
{
glyphname = imacron;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"620 1199 LINE",
"620 1395 LINE",
"-5 1395 LINE",
"-5 1199 LINE"
);
},
{
closed = 1;
nodes = (
"427 0 LINE",
"427 1055 LINE",
"189 1055 LINE",
"189 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0125 13 4 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0121 8 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 615;
}
);
note = imacron;
unicode = 012B;
},
{
glyphname = iogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"409 1246 OFFCURVE",
"441 1276 OFFCURVE",
"453 1328 OFFCURVE",
"453 1369 QCURVE SMOOTH",
"453 1410 OFFCURVE",
"441 1463 OFFCURVE",
"409 1495 OFFCURVE",
"356 1507 OFFCURVE",
"315 1507 QCURVE SMOOTH",
"274 1507 OFFCURVE",
"221 1495 OFFCURVE",
"188 1463 OFFCURVE",
"175 1410 OFFCURVE",
"175 1369 QCURVE SMOOTH",
"175 1328 OFFCURVE",
"188 1276 OFFCURVE",
"221 1246 OFFCURVE",
"274 1234 OFFCURVE",
"315 1234 QCURVE SMOOTH",
"356 1234 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"170 0 OFFCURVE",
"115 -63 OFFCURVE",
"70 -140 OFFCURVE",
"40 -229 OFFCURVE",
"40 -279 QCURVE SMOOTH",
"40 -334 OFFCURVE",
"79 -417 OFFCURVE",
"147 -472 OFFCURVE",
"239 -500 OFFCURVE",
"292 -500 QCURVE SMOOTH",
"321 -500 OFFCURVE",
"370 -494 OFFCURVE",
"390 -490 QCURVE SMOOTH",
"412 -486 OFFCURVE",
"432 -479 QCURVE",
"432 -311 LINE",
"422 -313 OFFCURVE",
"411 -314 QCURVE SMOOTH",
"391 -317 OFFCURVE",
"362 -317 QCURVE SMOOTH",
"311 -317 OFFCURVE",
"262 -267 OFFCURVE",
"262 -225 QCURVE SMOOTH",
"262 -174 OFFCURVE",
"340 -60 OFFCURVE",
"434 0 QCURVE",
"434 1055 LINE",
"196 1055 LINE",
"196 23 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01225 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01243 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01235 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01238 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 28 23 28 39 28 55 28 71 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 616;
}
);
note = iogonek;
unicode = 012F;
},
{
glyphname = itilde;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"50 1185 OFFCURVE",
"68 1205 QCURVE SMOOTH",
"82 1222 OFFCURVE",
"127 1251 OFFCURVE",
"156 1253 QCURVE SMOOTH",
"189 1255 OFFCURVE",
"250 1219 OFFCURVE",
"316 1175 OFFCURVE",
"394 1139 OFFCURVE",
"444 1141 QCURVE SMOOTH",
"494 1143 OFFCURVE",
"579 1185 OFFCURVE",
"643 1248 OFFCURVE",
"682 1323 OFFCURVE",
"686 1356 QCURVE",
"577 1425 LINE",
"564 1400 OFFCURVE",
"546 1381 QCURVE SMOOTH",
"531 1364 OFFCURVE",
"488 1335 OFFCURVE",
"460 1333 QCURVE SMOOTH",
"436 1331 OFFCURVE",
"395 1348 OFFCURVE",
"354 1373 OFFCURVE",
"311 1404 OFFCURVE",
"263 1430 OFFCURVE",
"206 1447 OFFCURVE",
"172 1446 QCURVE SMOOTH",
"121 1444 OFFCURVE",
"35 1402 OFFCURVE",
"-28 1338 OFFCURVE",
"-66 1264 OFFCURVE",
"-70 1231 QCURVE",
"39 1161 LINE"
);
},
{
closed = 1;
nodes = (
"427 0 LINE",
"427 1055 LINE",
"189 1055 LINE",
"189 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01235 13 34 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01236 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01212 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 28 24 28 40 28 56 28 72 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 616;
}
);
note = itilde;
unicode = 0129;
},
{
glyphname = j;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"421 1236 OFFCURVE",
"454 1266 OFFCURVE",
"467 1318 OFFCURVE",
"467 1359 QCURVE SMOOTH",
"467 1400 OFFCURVE",
"454 1453 OFFCURVE",
"421 1485 OFFCURVE",
"367 1497 OFFCURVE",
"327 1497 QCURVE SMOOTH",
"286 1497 OFFCURVE",
"233 1485 OFFCURVE",
"201 1453 OFFCURVE",
"189 1400 OFFCURVE",
"189 1359 QCURVE SMOOTH",
"189 1318 OFFCURVE",
"201 1266 OFFCURVE",
"233 1236 OFFCURVE",
"286 1224 OFFCURVE",
"327 1224 QCURVE SMOOTH",
"367 1224 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"-12 -464 OFFCURVE",
"26 -475 QCURVE SMOOTH",
"58 -484 OFFCURVE",
"151 -498 OFFCURVE",
"210 -498 QCURVE SMOOTH",
"255 -498 OFFCURVE",
"341 -479 OFFCURVE",
"408 -428 OFFCURVE",
"448 -337 OFFCURVE",
"448 -266 QCURVE SMOOTH",
"448 1055 LINE",
"210 1055 LINE",
"210 -206 LINE SMOOTH",
"210 -233 OFFCURVE",
"195 -267 OFFCURVE",
"167 -286 OFFCURVE",
"129 -292 OFFCURVE",
"106 -292 QCURVE SMOOTH",
"76 -292 OFFCURVE",
"23 -291 OFFCURVE",
"3 -289 QCURVE SMOOTH",
"-21 -288 OFFCURVE",
"-40 -286 QCURVE",
"-40 -451 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01230 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01233 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01231 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01238 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01220 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 630;
}
);
note = j;
unicode = 006A;
},
{
glyphname = jdotless;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"-40 -459 LINE",
"-12 -470 OFFCURVE",
"26 -479 QCURVE SMOOTH",
"58 -487 OFFCURVE",
"151 -498 OFFCURVE",
"210 -498 QCURVE SMOOTH",
"255 -498 OFFCURVE",
"341 -476 OFFCURVE",
"407 -421 OFFCURVE",
"447 -327 OFFCURVE",
"447 -256 QCURVE SMOOTH",
"447 1055 LINE",
"210 1055 LINE",
"210 -203 LINE SMOOTH",
"210 -230 OFFCURVE",
"195 -264 OFFCURVE",
"167 -283 OFFCURVE",
"128 -289 OFFCURVE",
"105 -289 QCURVE SMOOTH",
"75 -289 OFFCURVE",
"23 -288 OFFCURVE",
"3 -286 QCURVE SMOOTH",
"-20 -285 OFFCURVE",
"-40 -283 QCURVE",
"-40 -283 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01213 13 10 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0120 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 610;
}
);
note = dotlessj;
unicode = 0237;
},
{
glyphname = jcircumflex;
lastChange = "2021-07-14 20:20:33 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -81, -73}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 665;
}
);
note = jcircumflex;
unicode = 0135;
},
{
glyphname = k;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 473 LINE",
"531 473 LINE",
"836 0 LINE",
"1107 0 LINE",
"745 563 LINE",
"1105 1055 LINE",
"834 1055 LINE",
"559 670 LINE",
"403 670 LINE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 8 9 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1147;
}
);
note = k;
unicode = 006B;
},
{
glyphname = kcommaaccent;
lastChange = "2021-07-14 20:20:33 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 372, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1147;
}
);
note = kcommaaccent;
unicode = 0137;
},
{
glyphname = kgreenlandic;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 439 LINE",
"559 439 LINE",
"826 0 LINE",
"1097 0 LINE",
"759 554 LINE",
"1085 1055 LINE",
"812 1055 LINE",
"570 677 LINE",
"403 677 LINE",
"403 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 9 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1147;
}
);
note = kgreenlandic;
unicode = 0138;
},
{
glyphname = l;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 569;
}
);
note = l;
unicode = 006C;
},
{
glyphname = lacute;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"331 1638 OFFCURVE",
"386 1671 QCURVE SMOOTH",
"410 1685 OFFCURVE",
"459 1716 OFFCURVE",
"505 1744 OFFCURVE",
"544 1770 OFFCURVE",
"558 1780 QCURVE SMOOTH",
"609 1816 OFFCURVE",
"655 1867 OFFCURVE",
"655 1892 QCURVE SMOOTH",
"655 1909 OFFCURVE",
"634 1947 OFFCURVE",
"615 1970 QCURVE SMOOTH",
"593 1996 OFFCURVE",
"558 2030 OFFCURVE",
"544 2041 QCURVE SMOOTH",
"528 2053 OFFCURVE",
"515 2060 QCURVE",
"166 1728 LINE",
"269 1601 LINE"
);
},
{
closed = 1;
nodes = (
"430 0 LINE",
"430 1531 LINE",
"193 1531 LINE",
"193 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01221 13 20 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 601;
}
);
note = lacute;
unicode = 013A;
},
{
glyphname = lcaron;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"625 1036 LINE",
"658 1103 OFFCURVE",
"687 1163 QCURVE SMOOTH",
"699 1188 OFFCURVE",
"725 1242 OFFCURVE",
"748 1291 OFFCURVE",
"768 1333 OFFCURVE",
"774 1348 QCURVE SMOOTH",
"809 1421 OFFCURVE",
"809 1460 QCURVE SMOOTH",
"809 1490 OFFCURVE",
"769 1522 OFFCURVE",
"729 1536 QCURVE SMOOTH",
"707 1543 OFFCURVE",
"663 1551 OFFCURVE",
"644 1554 QCURVE SMOOTH",
"622 1557 OFFCURVE",
"602 1559 QCURVE",
"477 1085 LINE"
);
},
{
closed = 1;
nodes = (
"403 0 LINE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0128 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01220 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 750;
}
);
note = lcaron;
unicode = 013E;
},
{
glyphname = lcommaaccent;
lastChange = "2021-07-14 20:20:33 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 73, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 569;
}
);
note = lcommaaccent;
unicode = 013C;
},
{
glyphname = ldot;
layers = (
{
components = (
{
name = l;
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 388, 638}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 799;
}
);
note = ldot;
unicode = 0140;
},
{
glyphname = lslash;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"494 0 LINE",
"494 672 LINE",
"694 807 LINE",
"694 1055 LINE",
"494 922 LINE",
"494 1554 LINE",
"260 1554 LINE",
"260 784 LINE",
"90 676 LINE",
"90 432 LINE",
"260 537 LINE",
"260 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0120 10 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0121 10 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0126 10 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 745;
}
);
note = lslash;
unicode = 0142;
},
{
glyphname = m;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 829 LINE",
"436 841 OFFCURVE",
"476 851 QCURVE SMOOTH",
"510 859 OFFCURVE",
"597 874 OFFCURVE",
"647 874 QCURVE SMOOTH",
"691 874 OFFCURVE",
"748 856 OFFCURVE",
"782 815 OFFCURVE",
"795 750 OFFCURVE",
"795 702 QCURVE SMOOTH",
"795 0 LINE",
"1032 0 LINE",
"1032 727 LINE SMOOTH",
"1032 745 OFFCURVE",
"1030 803 OFFCURVE",
"1027 829 QCURVE",
"1045 835 OFFCURVE",
"1096 851 OFFCURVE",
"1159 865 OFFCURVE",
"1230 874 OFFCURVE",
"1268 874 QCURVE SMOOTH",
"1316 874 OFFCURVE",
"1375 856 OFFCURVE",
"1409 815 OFFCURVE",
"1421 750 OFFCURVE",
"1421 702 QCURVE SMOOTH",
"1421 0 LINE",
"1659 0 LINE",
"1659 748 LINE SMOOTH",
"1659 920 OFFCURVE",
"1524 1085 OFFCURVE",
"1378 1085 QCURVE SMOOTH",
"1312 1085 OFFCURVE",
"1192 1060 OFFCURVE",
"1092 1025 OFFCURVE",
"1012 987 OFFCURVE",
"987 973 QCURVE",
"955 1029 OFFCURVE",
"840 1085 OFFCURVE",
"752 1085 QCURVE SMOOTH",
"679 1085 OFFCURVE",
"542 1051 OFFCURVE",
"488 1031 QCURVE SMOOTH",
"425 1007 OFFCURVE",
"369 977 QCURVE",
"340 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01247 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01235 13 36 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01219 13 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01235 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01248 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 26 24 26 40 26 56 26 72 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1823;
}
);
note = m;
unicode = 006D;
},
{
glyphname = mdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = m;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 714, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1823;
}
);
note = uni1E41;
unicode = 1E41;
},
{
glyphname = n;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 829 LINE",
"436 841 OFFCURVE",
"477 851 QCURVE SMOOTH",
"512 859 OFFCURVE",
"610 874 OFFCURVE",
"670 874 QCURVE SMOOTH",
"727 874 OFFCURVE",
"795 856 OFFCURVE",
"831 819 OFFCURVE",
"842 760 OFFCURVE",
"842 719 QCURVE SMOOTH",
"842 0 LINE",
"1079 0 LINE",
"1079 748 LINE SMOOTH",
"1079 922 OFFCURVE",
"930 1085 OFFCURVE",
"774 1085 QCURVE SMOOTH",
"691 1085 OFFCURVE",
"545 1051 OFFCURVE",
"489 1031 QCURVE SMOOTH",
"424 1007 OFFCURVE",
"369 977 QCURVE",
"340 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 18 24 18 40 18 56 18 72 18 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1243;
}
);
note = n;
unicode = 006E;
},
{
glyphname = nacute;
layers = (
{
components = (
{
name = n;
},
{
name = acute;
transform = "{1, 0, 0, 1, 352, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
note = nacute;
unicode = 0144;
},
{
glyphname = ncaron;
layers = (
{
components = (
{
name = n;
},
{
name = caron;
transform = "{1, 0, 0, 1, 188, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
note = ncaron;
unicode = 0148;
},
{
glyphname = ncommaaccent;
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
note = ncommaaccent;
unicode = 0146;
},
{
glyphname = eng;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 829 LINE",
"436 841 OFFCURVE",
"477 851 QCURVE SMOOTH",
"512 859 OFFCURVE",
"610 874 OFFCURVE",
"670 874 QCURVE SMOOTH",
"727 874 OFFCURVE",
"795 856 OFFCURVE",
"831 819 OFFCURVE",
"842 760 OFFCURVE",
"842 719 QCURVE SMOOTH",
"842 -203 LINE SMOOTH",
"842 -230 OFFCURVE",
"827 -264 OFFCURVE",
"799 -283 OFFCURVE",
"760 -289 OFFCURVE",
"737 -289 QCURVE SMOOTH",
"707 -289 OFFCURVE",
"655 -288 OFFCURVE",
"635 -286 QCURVE SMOOTH",
"612 -285 OFFCURVE",
"592 -283 QCURVE",
"592 -459 LINE",
"620 -470 OFFCURVE",
"658 -479 QCURVE SMOOTH",
"690 -487 OFFCURVE",
"783 -498 OFFCURVE",
"842 -498 QCURVE SMOOTH",
"887 -498 OFFCURVE",
"973 -476 OFFCURVE",
"1039 -421 OFFCURVE",
"1079 -327 OFFCURVE",
"1079 -256 QCURVE SMOOTH",
"1079 748 LINE SMOOTH",
"1079 922 OFFCURVE",
"930 1085 OFFCURVE",
"774 1085 QCURVE SMOOTH",
"691 1085 OFFCURVE",
"545 1051 OFFCURVE",
"489 1031 QCURVE SMOOTH",
"424 1007 OFFCURVE",
"369 977 QCURVE",
"340 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01243 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01244 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01222 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01238 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 38 24 38 40 38 56 38 72 38 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1243;
}
);
note = eng;
unicode = 014B;
},
{
glyphname = ntilde;
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 162, 2}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = o;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"152 185 OFFCURVE",
"275 43 OFFCURVE",
"463 -31 OFFCURVE",
"594 -31 QCURVE SMOOTH",
"725 -31 OFFCURVE",
"914 43 OFFCURVE",
"1036 185 OFFCURVE",
"1094 394 OFFCURVE",
"1094 528 QCURVE SMOOTH",
"1094 662 OFFCURVE",
"1036 869 OFFCURVE",
"914 1011 OFFCURVE",
"725 1085 OFFCURVE",
"594 1085 QCURVE SMOOTH",
"463 1085 OFFCURVE",
"275 1011 OFFCURVE",
"152 869 OFFCURVE",
"94 662 OFFCURVE",
"94 528 QCURVE SMOOTH",
"94 394 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"418 217 OFFCURVE",
"363 308 OFFCURVE",
"344 441 OFFCURVE",
"344 528 QCURVE SMOOTH",
"344 614 OFFCURVE",
"363 747 OFFCURVE",
"418 838 OFFCURVE",
"516 885 OFFCURVE",
"594 885 QCURVE SMOOTH",
"673 885 OFFCURVE",
"771 838 OFFCURVE",
"825 747 OFFCURVE",
"844 614 OFFCURVE",
"844 528 QCURVE SMOOTH",
"844 441 OFFCURVE",
"825 308 OFFCURVE",
"771 217 OFFCURVE",
"673 170 OFFCURVE",
"594 170 QCURVE SMOOTH",
"516 170 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01220 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 20 23 20 39 20 55 20 71 20 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 30 24 30 40 30 56 30 72 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1188;
}
);
note = o;
unicode = 006F;
},
{
glyphname = oacute;
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 248, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = obreve;
layers = (
{
components = (
{
name = o;
},
{
name = breve;
transform = "{1, 0, 0, 1, 188, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
note = obreve;
unicode = 014F;
},
{
glyphname = ocircumflex;
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 160, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = odieresis;
layers = (
{
components = (
{
name = o;
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 117, 1075}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 541, 1075}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = ograve;
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, 258, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ohungarumlaut;
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
note = ohungarumlaut;
unicode = 0151;
},
{
glyphname = omacron;
layers = (
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
note = omacron;
unicode = 014D;
},
{
glyphname = oslash;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"323 -172 LINE",
"408 -7 LINE",
"489 -31 OFFCURVE",
"594 -31 QCURVE SMOOTH",
"725 -31 OFFCURVE",
"914 43 OFFCURVE",
"1036 185 OFFCURVE",
"1094 394 OFFCURVE",
"1094 528 QCURVE SMOOTH",
"1094 689 OFFCURVE",
"1010 923 OFFCURVE",
"920 992 QCURVE",
"1044 1233 LINE",
"885 1233 LINE",
"794 1057 LINE",
"751 1071 OFFCURVE",
"651 1085 OFFCURVE",
"594 1085 QCURVE SMOOTH",
"463 1085 OFFCURVE",
"275 1011 OFFCURVE",
"152 869 OFFCURVE",
"94 662 OFFCURVE",
"94 528 QCURVE SMOOTH",
"94 360 OFFCURVE",
"183 122 OFFCURVE",
"280 53 QCURVE",
"164 -172 LINE"
);
},
{
closed = 1;
nodes = (
"363 311 OFFCURVE",
"344 442 OFFCURVE",
"344 528 QCURVE SMOOTH",
"344 614 OFFCURVE",
"363 747 OFFCURVE",
"418 838 OFFCURVE",
"516 885 OFFCURVE",
"594 885 QCURVE SMOOTH",
"655 885 OFFCURVE",
"699 870 QCURVE",
"389 265 LINE"
);
},
{
closed = 1;
nodes = (
"829 728 OFFCURVE",
"844 606 OFFCURVE",
"844 528 QCURVE SMOOTH",
"844 441 OFFCURVE",
"825 308 OFFCURVE",
"771 217 OFFCURVE",
"673 170 OFFCURVE",
"594 170 QCURVE SMOOTH",
"541 170 OFFCURVE",
"504 180 QCURVE",
"808 773 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01213 26 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01234 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0123 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01245 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 45 25 45 41 45 57 45 73 45 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01217 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01237 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01248 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01212 25 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01229 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 29 24 29 40 29 56 29 72 29 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01237 25 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 40 23 40 39 40 55 40 71 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 25 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1200;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = otilde;
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = oe;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"151 185 OFFCURVE",
"272 43 OFFCURVE",
"459 -31 OFFCURVE",
"590 -31 QCURVE SMOOTH",
"711 -31 OFFCURVE",
"893 50 OFFCURVE",
"952 127 QCURVE",
"983 85 OFFCURVE",
"1066 27 OFFCURVE",
"1166 -10 OFFCURVE",
"1279 -27 OFFCURVE",
"1339 -27 QCURVE SMOOTH",
"1416 -27 OFFCURVE",
"1552 -7 OFFCURVE",
"1603 5 QCURVE SMOOTH",
"1663 19 OFFCURVE",
"1714 37 QCURVE",
"1714 205 LINE",
"1670 197 OFFCURVE",
"1616 192 QCURVE SMOOTH",
"1570 187 OFFCURVE",
"1448 180 OFFCURVE",
"1378 180 QCURVE SMOOTH",
"1295 180 OFFCURVE",
"1185 212 OFFCURVE",
"1119 275 OFFCURVE",
"1091 370 OFFCURVE",
"1090 434 QCURVE",
"1749 434 LINE",
"1755 487 OFFCURVE",
"1762 587 OFFCURVE",
"1762 634 QCURVE SMOOTH",
"1762 734 OFFCURVE",
"1724 900 OFFCURVE",
"1630 1019 OFFCURVE",
"1471 1085 OFFCURVE",
"1350 1085 QCURVE SMOOTH",
"1297 1085 OFFCURVE",
"1192 1068 OFFCURVE",
"1094 1029 OFFCURVE",
"1007 967 OFFCURVE",
"971 922 QCURVE",
"918 1002 OFFCURVE",
"724 1085 OFFCURVE",
"590 1085 QCURVE SMOOTH",
"459 1085 OFFCURVE",
"272 1011 OFFCURVE",
"151 869 OFFCURVE",
"94 662 OFFCURVE",
"94 528 QCURVE SMOOTH",
"94 394 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1087 679 OFFCURVE",
"1105 781 OFFCURVE",
"1158 850 OFFCURVE",
"1252 885 OFFCURVE",
"1327 885 QCURVE SMOOTH",
"1397 885 OFFCURVE",
"1482 857 OFFCURVE",
"1527 799 OFFCURVE",
"1542 711 OFFCURVE",
"1542 651 QCURVE SMOOTH",
"1542 612 LINE",
"1087 612 LINE"
);
},
{
closed = 1;
nodes = (
"413 217 OFFCURVE",
"358 308 OFFCURVE",
"338 441 OFFCURVE",
"338 528 QCURVE SMOOTH",
"338 614 OFFCURVE",
"358 747 OFFCURVE",
"413 838 OFFCURVE",
"512 885 OFFCURVE",
"590 885 QCURVE SMOOTH",
"669 885 OFFCURVE",
"769 838 OFFCURVE",
"825 747 OFFCURVE",
"846 614 OFFCURVE",
"846 528 QCURVE SMOOTH",
"846 441 OFFCURVE",
"825 308 OFFCURVE",
"769 217 OFFCURVE",
"669 170 OFFCURVE",
"590 170 QCURVE SMOOTH",
"512 170 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01278 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01262 12 68 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01218 10 52 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0128 68 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01243 68 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 78 22 78 38 78 54 78 70 78 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01284 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01238 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01246 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01251 4 21 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01257 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 57 24 57 40 57 56 57 72 57 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0128 13 57 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 27 23 27 39 27 55 27 71 27 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01243 38 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1835;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = p;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"446 21 OFFCURVE",
"497 5 QCURVE SMOOTH",
"541 -9 OFFCURVE",
"658 -31 OFFCURVE",
"725 -31 QCURVE SMOOTH",
"818 -31 OFFCURVE",
"960 26 OFFCURVE",
"1057 157 OFFCURVE",
"1106 371 OFFCURVE",
"1106 528 QCURVE SMOOTH",
"1106 676 OFFCURVE",
"1065 887 OFFCURVE",
"982 1022 OFFCURVE",
"858 1085 OFFCURVE",
"774 1085 QCURVE SMOOTH",
"690 1085 OFFCURVE",
"545 1051 OFFCURVE",
"489 1031 QCURVE SMOOTH",
"424 1007 OFFCURVE",
"369 977 QCURVE",
"340 1055 LINE",
"166 1055 LINE",
"166 -485 LINE",
"403 -485 LINE",
"403 41 LINE"
);
},
{
closed = 1;
nodes = (
"441 841 OFFCURVE",
"485 851 QCURVE SMOOTH",
"522 859 OFFCURVE",
"618 874 OFFCURVE",
"670 874 QCURVE SMOOTH",
"727 874 OFFCURVE",
"800 838 OFFCURVE",
"841 757 OFFCURVE",
"856 628 OFFCURVE",
"856 535 QCURVE SMOOTH",
"856 422 OFFCURVE",
"836 283 OFFCURVE",
"787 207 OFFCURVE",
"702 182 OFFCURVE",
"637 182 QCURVE SMOOTH",
"584 182 OFFCURVE",
"499 191 OFFCURVE",
"468 196 QCURVE SMOOTH",
"432 202 OFFCURVE",
"403 211 QCURVE",
"403 829 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0120 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 35 25 35 41 35 57 35 73 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01214 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01224 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 40 24 40 40 40 56 40 72 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1218;
}
);
note = p;
unicode = 0070;
},
{
glyphname = pdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = p;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 411, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1218;
}
);
note = uni1E57;
unicode = 1E57;
},
{
glyphname = thorn;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"420 61 OFFCURVE",
"486 26 OFFCURVE",
"575 -7 OFFCURVE",
"684 -31 OFFCURVE",
"745 -31 QCURVE SMOOTH",
"833 -31 OFFCURVE",
"972 28 OFFCURVE",
"1066 162 OFFCURVE",
"1116 376 OFFCURVE",
"1116 532 QCURVE SMOOTH",
"1116 662 OFFCURVE",
"1083 867 OFFCURVE",
"1001 1010 OFFCURVE",
"862 1085 OFFCURVE",
"756 1085 QCURVE SMOOTH",
"681 1085 OFFCURVE",
"553 1061 OFFCURVE",
"505 1047 QCURVE SMOOTH",
"450 1030 OFFCURVE",
"403 1010 QCURVE",
"403 1554 LINE",
"166 1554 LINE",
"166 -485 LINE",
"403 -485 LINE",
"403 72 LINE"
);
},
{
closed = 1;
nodes = (
"440 846 OFFCURVE",
"480 855 QCURVE SMOOTH",
"515 862 OFFCURVE",
"601 874 OFFCURVE",
"647 874 QCURVE SMOOTH",
"720 874 OFFCURVE",
"807 843 OFFCURVE",
"852 763 OFFCURVE",
"866 626 OFFCURVE",
"866 520 QCURVE SMOOTH",
"866 425 OFFCURVE",
"849 296 OFFCURVE",
"806 217 OFFCURVE",
"730 182 OFFCURVE",
"670 182 QCURVE SMOOTH",
"609 182 OFFCURVE",
"511 199 OFFCURVE",
"476 210 QCURVE SMOOTH",
"435 222 OFFCURVE",
"403 238 QCURVE",
"403 836 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0120 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 35 25 35 41 35 57 35 73 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01214 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0124 1 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 40 24 40 40 40 56 40 72 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0124 9 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01224 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1228;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = q;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"678 -9 OFFCURVE",
"722 5 QCURVE SMOOTH",
"773 21 OFFCURVE",
"816 41 QCURVE",
"816 -485 LINE",
"1054 -485 LINE",
"1054 1055 LINE",
"880 1055 LINE",
"853 977 LINE",
"804 1007 OFFCURVE",
"746 1031 QCURVE SMOOTH",
"696 1051 OFFCURVE",
"563 1085 OFFCURVE",
"486 1085 QCURVE SMOOTH",
"393 1085 OFFCURVE",
"253 1019 OFFCURVE",
"160 883 OFFCURVE",
"114 672 OFFCURVE",
"114 528 QCURVE SMOOTH",
"114 371 OFFCURVE",
"163 157 OFFCURVE",
"260 26 OFFCURVE",
"403 -31 OFFCURVE",
"497 -31 QCURVE SMOOTH",
"563 -31 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"433 207 OFFCURVE",
"383 283 OFFCURVE",
"364 422 OFFCURVE",
"364 535 QCURVE SMOOTH",
"364 633 OFFCURVE",
"380 764 OFFCURVE",
"425 842 OFFCURVE",
"502 874 OFFCURVE",
"564 874 QCURVE SMOOTH",
"614 874 OFFCURVE",
"705 859 OFFCURVE",
"740 851 QCURVE SMOOTH",
"780 841 OFFCURVE",
"816 829 QCURVE",
"816 211 LINE",
"788 202 OFFCURVE",
"752 196 QCURVE SMOOTH",
"721 191 OFFCURVE",
"635 182 OFFCURVE",
"583 182 QCURVE SMOOTH",
"518 182 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 41 22 41 38 41 54 41 70 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01225 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 25 23 25 39 25 55 25 71 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 0 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 36 24 36 40 36 56 36 72 36 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1220;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 768 LINE",
"468 794 OFFCURVE",
"651 815 OFFCURVE",
"776 817 QCURVE",
"778 1063 LINE",
"657 1057 OFFCURVE",
"463 991 OFFCURVE",
"385 940 QCURVE",
"371 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0122 0 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0126 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0122 5 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 816;
}
);
note = r;
unicode = 0072;
},
{
glyphname = racute;
lastChange = "2021-07-14 20:20:36 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acute;
transform = "{1, 0, 0, 1, 89, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 846;
}
);
note = racute;
unicode = 0155;
},
{
glyphname = rcaron;
lastChange = "2021-07-14 20:20:36 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caron;
transform = "{1, 0, 0, 1, -135, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 820;
}
);
note = rcaron;
unicode = 0159;
},
{
glyphname = rcommaaccent;
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 101, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 816;
}
);
note = rcommaaccent;
unicode = 0157;
},
{
glyphname = s;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"168 18 OFFCURVE",
"229 3 QCURVE SMOOTH",
"281 -10 OFFCURVE",
"419 -31 OFFCURVE",
"497 -31 QCURVE SMOOTH",
"638 -31 OFFCURVE",
"810 14 OFFCURVE",
"904 98 OFFCURVE",
"935 220 OFFCURVE",
"935 297 QCURVE SMOOTH",
"935 378 OFFCURVE",
"909 489 OFFCURVE",
"851 561 OFFCURVE",
"758 603 OFFCURVE",
"691 616 QCURVE SMOOTH",
"462 659 LINE SMOOTH",
"423 666 OFFCURVE",
"377 688 OFFCURVE",
"351 718 OFFCURVE",
"343 756 OFFCURVE",
"343 780 QCURVE SMOOTH",
"343 811 OFFCURVE",
"363 852 OFFCURVE",
"413 878 OFFCURVE",
"499 889 OFFCURVE",
"564 889 QCURVE SMOOTH",
"621 889 OFFCURVE",
"732 879 OFFCURVE",
"777 874 QCURVE SMOOTH",
"829 868 OFFCURVE",
"877 860 QCURVE",
"877 1030 LINE",
"834 1045 OFFCURVE",
"782 1057 QCURVE SMOOTH",
"737 1068 OFFCURVE",
"616 1085 OFFCURVE",
"544 1085 QCURVE SMOOTH",
"339 1085 OFFCURVE",
"118 922 OFFCURVE",
"118 756 QCURVE SMOOTH",
"118 679 OFFCURVE",
"145 572 OFFCURVE",
"208 499 OFFCURVE",
"312 455 OFFCURVE",
"388 442 QCURVE SMOOTH",
"609 401 LINE SMOOTH",
"640 396 OFFCURVE",
"677 377 OFFCURVE",
"696 350 OFFCURVE",
"701 317 OFFCURVE",
"701 297 QCURVE SMOOTH",
"701 259 OFFCURVE",
"687 209 OFFCURVE",
"638 180 OFFCURVE",
"542 168 OFFCURVE",
"460 168 QCURVE SMOOTH",
"385 168 OFFCURVE",
"260 178 OFFCURVE",
"214 185 QCURVE SMOOTH",
"160 193 OFFCURVE",
"116 203 QCURVE",
"116 37 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 40 22 40 38 40 54 40 70 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01251 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01256 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 5 23 5 39 5 55 5 71 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 35 24 35 40 35 56 35 72 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1035;
}
);
note = s;
unicode = 0073;
},
{
glyphname = sacute;
layers = (
{
components = (
{
name = s;
},
{
name = acute;
transform = "{1, 0, 0, 1, 195, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
note = sacute;
unicode = 015B;
},
{
glyphname = scaron;
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, 101, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
note = scaron;
unicode = 0161;
},
{
glyphname = scedilla;
layers = (
{
components = (
{
name = s;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 232, -14}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
note = scedilla;
unicode = 015F;
},
{
glyphname = scircumflex;
layers = (
{
components = (
{
name = s;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 105, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
note = scircumflex;
unicode = 015D;
},
{
glyphname = scommaaccent;
layers = (
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 289, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
note = scommaaccent;
unicode = 0219;
},
{
glyphname = sdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 320, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
note = uni1E61;
unicode = 1E61;
},
{
glyphname = germandbls;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"415 0 LINE",
"415 1038 LINE SMOOTH",
"415 1095 OFFCURVE",
"438 1173 OFFCURVE",
"488 1222 OFFCURVE",
"569 1243 OFFCURVE",
"628 1243 QCURVE SMOOTH",
"691 1243 OFFCURVE",
"773 1228 OFFCURVE",
"820 1187 OFFCURVE",
"839 1116 OFFCURVE",
"839 1059 QCURVE SMOOTH",
"839 1008 OFFCURVE",
"806 934 OFFCURVE",
"758 879 OFFCURVE",
"702 841 OFFCURVE",
"679 827 QCURVE SMOOTH",
"668 820 OFFCURVE",
"656 767 OFFCURVE",
"656 735 QCURVE SMOOTH",
"656 703 OFFCURVE",
"668 646 OFFCURVE",
"679 641 QCURVE SMOOTH",
"713 624 OFFCURVE",
"785 590 OFFCURVE",
"845 535 OFFCURVE",
"884 446 OFFCURVE",
"884 375 QCURVE SMOOTH",
"884 323 OFFCURVE",
"856 249 OFFCURVE",
"807 203 OFFCURVE",
"739 181 OFFCURVE",
"699 181 QCURVE SMOOTH",
"661 181 OFFCURVE",
"594 185 OFFCURVE",
"568 188 QCURVE SMOOTH",
"538 192 OFFCURVE",
"513 196 QCURVE",
"509 20 LINE",
"538 8 OFFCURVE",
"575 -1 QCURVE SMOOTH",
"607 -9 OFFCURVE",
"696 -21 OFFCURVE",
"751 -21 QCURVE SMOOTH",
"828 -21 OFFCURVE",
"964 25 OFFCURVE",
"1066 120 OFFCURVE",
"1125 262 OFFCURVE",
"1125 358 QCURVE SMOOTH",
"1125 433 OFFCURVE",
"1097 549 OFFCURVE",
"1053 636 OFFCURVE",
"998 696 OFFCURVE",
"945 734 OFFCURVE",
"899 754 OFFCURVE",
"886 758 QCURVE SMOOTH",
"881 760 OFFCURVE",
"881 772 OFFCURVE",
"886 774 QCURVE SMOOTH",
"901 778 OFFCURVE",
"962 818 OFFCURVE",
"1025 895 OFFCURVE",
"1072 1014 OFFCURVE",
"1072 1098 QCURVE SMOOTH",
"1072 1168 OFFCURVE",
"1029 1297 OFFCURVE",
"927 1396 OFFCURVE",
"757 1456 OFFCURVE",
"630 1456 QCURVE SMOOTH",
"499 1456 OFFCURVE",
"325 1395 OFFCURVE",
"219 1284 OFFCURVE",
"175 1131 OFFCURVE",
"175 1040 QCURVE SMOOTH",
"175 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01272 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01225 12 46 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 46 25 46 41 46 57 46 73 46 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01210 46 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01254 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01262 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 62 25 62 41 62 57 62 73 62 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01276 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01233 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01273 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01238 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 38 23 38 39 38 55 38 71 38 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01267 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 67 24 67 40 67 56 67 72 67 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1220;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = t;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"240 153 OFFCURVE",
"270 60 OFFCURVE",
"337 -1 OFFCURVE",
"444 -31 OFFCURVE",
"522 -31 QCURVE SMOOTH",
"578 -31 OFFCURVE",
"672 -16 OFFCURVE",
"707 -7 QCURVE SMOOTH",
"747 4 OFFCURVE",
"782 18 QCURVE",
"782 176 LINE",
"762 173 OFFCURVE",
"736 171 QCURVE SMOOTH",
"714 169 OFFCURVE",
"651 166 OFFCURVE",
"612 166 QCURVE SMOOTH",
"570 166 OFFCURVE",
"517 177 OFFCURVE",
"488 206 OFFCURVE",
"477 254 OFFCURVE",
"477 291 QCURVE SMOOTH",
"477 858 LINE",
"743 858 LINE",
"743 1055 LINE",
"477 1055 LINE",
"477 1331 LINE",
"240 1278 LINE",
"240 1055 LINE",
"84 1055 LINE",
"84 858 LINE",
"240 858 LINE",
"240 215 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 15 23 15 39 15 55 15 71 15 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 864;
}
);
note = t;
unicode = 0074;
},
{
glyphname = tbar;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"259 153 OFFCURVE",
"289 60 OFFCURVE",
"356 -1 OFFCURVE",
"463 -31 OFFCURVE",
"541 -31 QCURVE SMOOTH",
"597 -31 OFFCURVE",
"691 -16 OFFCURVE",
"726 -7 QCURVE SMOOTH",
"766 4 OFFCURVE",
"801 18 QCURVE",
"801 176 LINE",
"781 173 OFFCURVE",
"755 171 QCURVE SMOOTH",
"733 169 OFFCURVE",
"670 166 OFFCURVE",
"631 166 QCURVE SMOOTH",
"589 166 OFFCURVE",
"536 177 OFFCURVE",
"507 206 OFFCURVE",
"496 254 OFFCURVE",
"496 291 QCURVE SMOOTH",
"496 462 LINE",
"763 462 LINE",
"763 646 LINE",
"496 646 LINE",
"496 868 LINE",
"762 868 LINE",
"762 1055 LINE",
"496 1055 LINE",
"496 1331 LINE",
"259 1278 LINE",
"259 1055 LINE",
"103 1055 LINE",
"103 868 LINE",
"259 868 LINE",
"259 646 LINE",
"103 646 LINE",
"103 462 LINE",
"259 462 LINE",
"259 215 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01217 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0124 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 23 23 23 39 23 55 23 71 23 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 891;
}
);
note = tbar;
unicode = 0167;
},
{
glyphname = tcaron;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"684 1153 LINE",
"717 1220 OFFCURVE",
"746 1280 QCURVE SMOOTH",
"758 1305 OFFCURVE",
"784 1359 OFFCURVE",
"807 1408 OFFCURVE",
"827 1450 OFFCURVE",
"833 1465 QCURVE SMOOTH",
"868 1538 OFFCURVE",
"868 1577 QCURVE SMOOTH",
"868 1607 OFFCURVE",
"828 1639 OFFCURVE",
"788 1653 QCURVE SMOOTH",
"766 1660 OFFCURVE",
"722 1668 OFFCURVE",
"703 1671 QCURVE SMOOTH",
"681 1674 OFFCURVE",
"661 1676 QCURVE",
"536 1202 LINE"
);
},
{
closed = 1;
nodes = (
"238 153 OFFCURVE",
"268 60 OFFCURVE",
"335 -1 OFFCURVE",
"442 -31 OFFCURVE",
"520 -31 QCURVE SMOOTH",
"576 -31 OFFCURVE",
"670 -16 OFFCURVE",
"705 -7 QCURVE SMOOTH",
"745 4 OFFCURVE",
"780 18 QCURVE",
"780 176 LINE",
"760 173 OFFCURVE",
"734 171 QCURVE SMOOTH",
"712 169 OFFCURVE",
"649 166 OFFCURVE",
"610 166 QCURVE SMOOTH",
"568 166 OFFCURVE",
"515 177 OFFCURVE",
"486 206 OFFCURVE",
"475 254 OFFCURVE",
"475 291 QCURVE SMOOTH",
"475 858 LINE",
"741 858 LINE",
"741 1055 LINE",
"475 1055 LINE",
"475 1331 LINE",
"238 1278 LINE",
"238 1055 LINE",
"82 1055 LINE",
"82 858 LINE",
"238 858 LINE",
"238 215 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0128 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01252 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01225 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01245 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0120 9 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 34 23 34 39 34 55 34 71 34 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 860;
}
);
note = tcaron;
unicode = 0165;
},
{
glyphname = tcommaaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
note = tcommaaccent;
unicode = 021B;
},
{
glyphname = tdotaccent;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 167, 224}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
note = uni1E6B;
unicode = 1E6B;
},
{
glyphname = u;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"166 134 OFFCURVE",
"316 -31 OFFCURVE",
"471 -31 QCURVE SMOOTH",
"553 -31 OFFCURVE",
"700 3 OFFCURVE",
"756 23 QCURVE SMOOTH",
"821 47 OFFCURVE",
"877 78 QCURVE",
"905 0 LINE",
"1079 0 LINE",
"1079 1055 LINE",
"842 1055 LINE",
"842 225 LINE",
"809 213 OFFCURVE",
"768 203 QCURVE SMOOTH",
"733 195 OFFCURVE",
"635 182 OFFCURVE",
"575 182 QCURVE SMOOTH",
"518 182 OFFCURVE",
"450 199 OFFCURVE",
"414 236 OFFCURVE",
"403 294 OFFCURVE",
"403 336 QCURVE SMOOTH",
"403 1055 LINE",
"166 1055 LINE",
"166 309 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0127 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 7 23 7 39 7 55 7 71 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1245;
}
);
note = u;
unicode = 0075;
},
{
glyphname = uacute;
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 360, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ubreve;
layers = (
{
components = (
{
name = u;
},
{
name = breve;
transform = "{1, 0, 0, 1, 217, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
note = ubreve;
unicode = 016D;
},
{
glyphname = ucircumflex;
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 188, 10}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
layers = (
{
components = (
{
name = u;
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 152, 1075}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 576, 1075}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = ugrave;
layers = (
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 254, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = uhungarumlaut;
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1274;
}
);
note = uhungarumlaut;
unicode = 0171;
},
{
glyphname = umacron;
layers = (
{
components = (
{
name = u;
},
{
name = macron;
transform = "{1, 0, 0, 1, 209, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
note = umacron;
unicode = 016B;
},
{
glyphname = uogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"166 134 OFFCURVE",
"316 -31 OFFCURVE",
"471 -31 QCURVE SMOOTH",
"553 -31 OFFCURVE",
"700 3 OFFCURVE",
"756 23 QCURVE SMOOTH",
"821 47 OFFCURVE",
"877 78 QCURVE",
"884 58 LINE",
"860 40 OFFCURVE",
"793 -24 OFFCURVE",
"730 -111 OFFCURVE",
"686 -218 OFFCURVE",
"686 -279 QCURVE SMOOTH",
"686 -334 OFFCURVE",
"725 -417 OFFCURVE",
"793 -472 OFFCURVE",
"885 -500 OFFCURVE",
"938 -500 QCURVE SMOOTH",
"967 -500 OFFCURVE",
"1016 -494 OFFCURVE",
"1036 -490 QCURVE SMOOTH",
"1058 -486 OFFCURVE",
"1078 -479 QCURVE",
"1078 -311 LINE",
"1068 -313 OFFCURVE",
"1057 -314 QCURVE SMOOTH",
"1037 -317 OFFCURVE",
"1008 -317 QCURVE SMOOTH",
"957 -317 OFFCURVE",
"908 -267 OFFCURVE",
"908 -225 QCURVE SMOOTH",
"908 -174 OFFCURVE",
"986 -60 OFFCURVE",
"1080 0 QCURVE",
"1079 0 LINE",
"1079 1055 LINE",
"842 1055 LINE",
"842 225 LINE",
"809 213 OFFCURVE",
"768 203 QCURVE SMOOTH",
"733 195 OFFCURVE",
"635 182 OFFCURVE",
"575 182 QCURVE SMOOTH",
"518 182 OFFCURVE",
"450 199 OFFCURVE",
"414 236 OFFCURVE",
"403 294 OFFCURVE",
"403 336 QCURVE SMOOTH",
"403 1055 LINE",
"166 1055 LINE",
"166 309 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 13 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01219 12 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01237 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 37 25 37 41 37 57 37 73 37 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01248 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0127 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 7 23 7 39 7 55 7 71 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 22 23 22 39 22 55 22 71 22 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1246;
}
);
note = uogonek;
unicode = 0173;
},
{
glyphname = uring;
layers = (
{
components = (
{
name = u;
},
{
name = ring;
transform = "{1, 0, 0, 1, 309, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
note = uring;
unicode = 016F;
},
{
glyphname = utilde;
layers = (
{
components = (
{
name = u;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 154, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
note = utilde;
unicode = 0169;
},
{
glyphname = v;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"682 0 LINE",
"1046 1055 LINE",
"788 1055 LINE",
"528 221 LINE",
"524 221 LINE",
"264 1055 LINE",
"6 1055 LINE",
"371 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1052;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"614 0 LINE",
"772 829 LINE",
"788 829 LINE",
"964 0 LINE",
"1276 0 LINE",
"1542 1055 LINE",
"1335 1055 LINE",
"1134 211 LINE",
"1120 211 LINE",
"954 1055 LINE",
"629 1055 LINE",
"463 211 LINE",
"446 211 LINE",
"250 1055 LINE",
"12 1055 LINE",
"287 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1554;
}
);
note = w;
unicode = 0077;
},
{
glyphname = wacute;
layers = (
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 473, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1554;
}
);
note = wacute;
unicode = 1E83;
},
{
glyphname = wcircumflex;
layers = (
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 362, -19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1554;
}
);
note = wcircumflex;
unicode = 0175;
},
{
glyphname = wdieresis;
layers = (
{
components = (
{
name = w;
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 307, 1093}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 731, 1093}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1554;
}
);
note = wdieresis;
unicode = 1E85;
},
{
glyphname = wgrave;
layers = (
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, 442, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1554;
}
);
note = wgrave;
unicode = 1E81;
},
{
glyphname = x;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"262 0 LINE",
"520 354 LINE",
"765 0 LINE",
"1048 0 LINE",
"673 542 LINE",
"1028 1055 LINE",
"770 1055 LINE",
"546 726 LINE",
"319 1055 LINE",
"36 1055 LINE",
"393 537 LINE",
"4 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0123 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0129 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1052;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"127 -465 LINE",
"152 -475 OFFCURVE",
"185 -483 QCURVE SMOOTH",
"214 -490 OFFCURVE",
"297 -500 OFFCURVE",
"352 -500 QCURVE SMOOTH",
"400 -500 OFFCURVE",
"481 -470 OFFCURVE",
"550 -404 OFFCURVE",
"609 -297 OFFCURVE",
"637 -219 QCURVE SMOOTH",
"1089 1055 LINE",
"827 1055 LINE",
"555 209 LINE",
"547 209 LINE",
"276 1055 LINE",
"12 1055 LINE",
"379 0 LINE",
"481 0 LINE",
"416 -178 LINE SMOOTH",
"403 -213 OFFCURVE",
"374 -261 OFFCURVE",
"337 -293 OFFCURVE",
"286 -307 OFFCURVE",
"252 -307 QCURVE SMOOTH",
"190 -307 OFFCURVE",
"159 -304 QCURVE SMOOTH",
"141 -303 OFFCURVE",
"127 -301 QCURVE",
"127 -301 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1089;
}
);
note = y;
unicode = 0079;
},
{
glyphname = yacute;
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 307, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = ycircumflex;
layers = (
{
components = (
{
name = y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 113, 20}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
note = ycircumflex;
unicode = 0177;
},
{
glyphname = ydieresis;
layers = (
{
components = (
{
name = y;
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 84, 1093}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 508, 1093}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = ygrave;
layers = (
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 168, -40}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
note = ygrave;
unicode = 1EF3;
},
{
glyphname = z;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"991 0 LINE",
"991 209 LINE",
"442 209 LINE",
"442 211 LINE",
"979 905 LINE",
"979 1055 LINE",
"137 1055 LINE",
"137 852 LINE",
"651 852 LINE",
"651 850 LINE",
"117 158 LINE",
"117 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0129 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0122 0 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1092;
}
);
note = z;
unicode = 007A;
},
{
glyphname = zacute;
layers = (
{
components = (
{
name = z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 246, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1092;
}
);
note = zacute;
unicode = 017A;
},
{
glyphname = zcaron;
layers = (
{
components = (
{
name = z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 145, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1092;
}
);
note = zcaron;
unicode = 017E;
},
{
glyphname = zdotaccent;
layers = (
{
components = (
{
name = z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 348, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1092;
}
);
note = zdotaccent;
unicode = 017C;
},
{
glyphname = f_f;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"475 860 LINE",
"858 860 LINE",
"858 0 LINE",
"1097 0 LINE",
"1097 860 LINE",
"1362 860 LINE",
"1362 1055 LINE",
"1097 1055 LINE",
"1097 1231 LINE SMOOTH",
"1097 1260 OFFCURVE",
"1105 1308 OFFCURVE",
"1142 1343 OFFCURVE",
"1216 1362 OFFCURVE",
"1282 1362 QCURVE SMOOTH",
"1310 1362 OFFCURVE",
"1389 1356 OFFCURVE",
"1425 1352 QCURVE SMOOTH",
"1467 1348 OFFCURVE",
"1511 1343 QCURVE",
"1511 1516 LINE",
"1471 1531 OFFCURVE",
"1423 1542 QCURVE SMOOTH",
"1381 1552 OFFCURVE",
"1267 1569 OFFCURVE",
"1198 1569 QCURVE SMOOTH",
"1155 1569 OFFCURVE",
"1074 1561 OFFCURVE",
"1003 1542 OFFCURVE",
"943 1507 OFFCURVE",
"920 1480 QCURVE",
"881 1489 OFFCURVE",
"746 1507 OFFCURVE",
"653 1507 QCURVE SMOOTH",
"566 1507 OFFCURVE",
"414 1476 OFFCURVE",
"302 1400 OFFCURVE",
"237 1273 OFFCURVE",
"237 1178 QCURVE SMOOTH",
"237 1055 LINE",
"90 1055 LINE",
"90 860 LINE",
"237 860 LINE",
"237 0 LINE"
);
},
{
closed = 1;
nodes = (
"475 1141 LINE SMOOTH",
"475 1174 OFFCURVE",
"495 1229 OFFCURVE",
"546 1270 OFFCURVE",
"634 1292 OFFCURVE",
"702 1292 QCURVE SMOOTH",
"745 1292 OFFCURVE",
"824 1288 OFFCURVE",
"858 1286 QCURVE",
"858 1272 LINE",
"858 1055 LINE",
"475 1055 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01238 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01244 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01238 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01242 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01217 5 28 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0129 3 49 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1477;
}
);
note = ff;
},
{
glyphname = fi;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"503 0 LINE",
"503 860 LINE",
"915 860 LINE",
"915 0 LINE",
"1153 0 LINE",
"1153 1055 LINE",
"503 1055 LINE",
"503 1215 LINE SMOOTH",
"503 1261 OFFCURVE",
"528 1323 OFFCURVE",
"583 1361 OFFCURVE",
"671 1376 OFFCURVE",
"733 1376 QCURVE SMOOTH",
"782 1376 OFFCURVE",
"891 1370 OFFCURVE",
"936 1367 QCURVE SMOOTH",
"989 1363 OFFCURVE",
"1040 1358 QCURVE",
"1040 1546 LINE",
"991 1558 OFFCURVE",
"935 1568 QCURVE SMOOTH",
"887 1576 OFFCURVE",
"763 1591 OFFCURVE",
"696 1591 QCURVE SMOOTH",
"598 1591 OFFCURVE",
"439 1561 OFFCURVE",
"326 1482 OFFCURVE",
"264 1343 OFFCURVE",
"264 1235 QCURVE SMOOTH",
"264 1055 LINE",
"90 1055 LINE",
"90 860 LINE",
"264 860 LINE",
"264 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01231 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01228 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 3 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1316;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"475 858 LINE",
"899 858 LINE",
"899 0 LINE",
"1136 0 LINE",
"1136 1516 LINE",
"1080 1535 OFFCURVE",
"1013 1551 QCURVE SMOOTH",
"956 1565 OFFCURVE",
"802 1587 OFFCURVE",
"712 1587 QCURVE SMOOTH",
"609 1587 OFFCURVE",
"435 1559 OFFCURVE",
"308 1489 OFFCURVE",
"237 1366 OFFCURVE",
"237 1272 QCURVE SMOOTH",
"237 1055 LINE",
"90 1055 LINE",
"90 858 LINE",
"237 858 LINE",
"237 0 LINE"
);
},
{
closed = 1;
nodes = (
"475 1231 LINE SMOOTH",
"475 1271 OFFCURVE",
"500 1327 OFFCURVE",
"555 1361 OFFCURVE",
"642 1376 OFFCURVE",
"704 1376 QCURVE SMOOTH",
"754 1376 OFFCURVE",
"857 1369 OFFCURVE",
"899 1365 QCURVE",
"899 1055 LINE",
"475 1055 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 5 25 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1302;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"474 665 OFFCURVE",
"506 682 QCURVE SMOOTH",
"542 700 OFFCURVE",
"570 725 QCURVE",
"586 659 LINE",
"731 659 LINE",
"731 1036 LINE SMOOTH",
"731 1099 OFFCURVE",
"725 1191 OFFCURVE",
"711 1258 OFFCURVE",
"689 1306 OFFCURVE",
"674 1325 QCURVE SMOOTH",
"637 1371 OFFCURVE",
"501 1403 OFFCURVE",
"408 1403 QCURVE SMOOTH",
"351 1403 OFFCURVE",
"251 1388 OFFCURVE",
"213 1380 QCURVE SMOOTH",
"168 1370 OFFCURVE",
"131 1358 QCURVE",
"131 1237 LINE",
"166 1241 OFFCURVE",
"204 1245 QCURVE SMOOTH",
"236 1248 OFFCURVE",
"316 1253 OFFCURVE",
"357 1253 QCURVE SMOOTH",
"412 1253 OFFCURVE",
"491 1245 OFFCURVE",
"514 1225 QCURVE SMOOTH",
"530 1211 OFFCURVE",
"547 1167 OFFCURVE",
"547 1135 QCURVE SMOOTH",
"547 1049 LINE",
"517 1059 OFFCURVE",
"481 1068 QCURVE SMOOTH",
"450 1075 OFFCURVE",
"369 1087 OFFCURVE",
"324 1087 QCURVE SMOOTH",
"210 1087 OFFCURVE",
"95 980 OFFCURVE",
"95 860 QCURVE SMOOTH",
"95 747 OFFCURVE",
"221 639 OFFCURVE",
"328 639 QCURVE SMOOTH",
"385 639 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"308 797 OFFCURVE",
"287 816 OFFCURVE",
"279 847 OFFCURVE",
"279 868 QCURVE SMOOTH",
"279 890 OFFCURVE",
"288 920 OFFCURVE",
"312 938 OFFCURVE",
"355 946 OFFCURVE",
"389 946 QCURVE SMOOTH",
"419 946 OFFCURVE",
"475 942 OFFCURVE",
"498 940 QCURVE SMOOTH",
"524 937 OFFCURVE",
"547 934 QCURVE",
"547 817 LINE",
"522 808 OFFCURVE",
"494 802 QCURVE SMOOTH",
"470 797 OFFCURVE",
"406 788 OFFCURVE",
"371 788 QCURVE SMOOTH",
"343 788 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01237 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01240 11 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 61 22 61 38 61 54 61 70 61 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01245 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01229 7 18 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01253 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 53 24 53 40 53 56 53 72 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01211 6 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01240 0 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 804;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"638 696 OFFCURVE",
"728 784 OFFCURVE",
"775 930 OFFCURVE",
"775 1040 QCURVE SMOOTH",
"775 1150 OFFCURVE",
"728 1297 OFFCURVE",
"638 1386 OFFCURVE",
"505 1423 OFFCURVE",
"419 1423 QCURVE SMOOTH",
"333 1423 OFFCURVE",
"199 1386 OFFCURVE",
"107 1297 OFFCURVE",
"60 1150 OFFCURVE",
"60 1040 QCURVE SMOOTH",
"60 930 OFFCURVE",
"107 784 OFFCURVE",
"199 696 OFFCURVE",
"333 659 OFFCURVE",
"419 659 QCURVE SMOOTH",
"505 659 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"308 837 OFFCURVE",
"268 889 OFFCURVE",
"249 977 OFFCURVE",
"249 1042 QCURVE SMOOTH",
"249 1106 OFFCURVE",
"268 1194 OFFCURVE",
"308 1247 OFFCURVE",
"373 1270 OFFCURVE",
"419 1270 QCURVE SMOOTH",
"465 1270 OFFCURVE",
"530 1247 OFFCURVE",
"570 1194 OFFCURVE",
"589 1106 OFFCURVE",
"589 1042 QCURVE SMOOTH",
"589 977 OFFCURVE",
"570 889 OFFCURVE",
"530 837 OFFCURVE",
"465 815 OFFCURVE",
"419 815 QCURVE SMOOTH",
"373 815 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 7 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 835;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = Delta;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1333 0 LINE",
"1333 151 LINE",
"840 1393 LINE",
"676 1393 LINE",
"182 151 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"749 984 LINE",
"758 1014 LINE",
"766 984 LINE",
"1072 226 LINE",
"443 226 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0123 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0126 0 3 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0128 0 3 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01210 0 3 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0126 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1537;
}
);
note = Delta;
unicode = 0394;
},
{
glyphname = Omega;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"739 0 LINE",
"749 -3 LINE",
"749 138 LINE",
"658 213 OFFCURVE",
"532 356 OFFCURVE",
"453 500 OFFCURVE",
"417 647 OFFCURVE",
"417 727 QCURVE SMOOTH",
"417 823 OFFCURVE",
"453 989 OFFCURVE",
"546 1112 OFFCURVE",
"708 1182 OFFCURVE",
"834 1182 QCURVE SMOOTH",
"961 1182 OFFCURVE",
"1127 1112 OFFCURVE",
"1225 989 OFFCURVE",
"1265 823 OFFCURVE",
"1265 727 QCURVE SMOOTH",
"1265 647 OFFCURVE",
"1230 500 OFFCURVE",
"1151 356 OFFCURVE",
"1025 213 OFFCURVE",
"934 138 QCURVE",
"934 -3 LINE",
"943 0 LINE",
"1522 0 LINE",
"1522 224 LINE",
"1283 224 LINE",
"1328 272 OFFCURVE",
"1403 385 OFFCURVE",
"1458 512 OFFCURVE",
"1489 651 OFFCURVE",
"1489 726 QCURVE SMOOTH",
"1489 888 OFFCURVE",
"1403 1137 OFFCURVE",
"1236 1306 OFFCURVE",
"992 1394 OFFCURVE",
"834 1394 QCURVE SMOOTH",
"676 1394 OFFCURVE",
"437 1306 OFFCURVE",
"276 1137 OFFCURVE",
"194 888 OFFCURVE",
"194 726 QCURVE SMOOTH",
"194 651 OFFCURVE",
"225 512 OFFCURVE",
"280 385 OFFCURVE",
"355 272 OFFCURVE",
"400 224 QCURVE",
"160 224 LINE",
"160 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01241 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 5 values pushed */\0126 41 22 41 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 7 values pushed */\01238 41 54 41 70 41 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0121 6 41 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0129 31 25 31 41 31 57 31 73 31 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01216 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01221 31 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01225 6 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01247 6 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01225 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01247 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01249 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01211 5 36 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1706;
}
);
note = Omega;
unicode = 03A9;
},
{
glyphname = pi;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"430 1 LINE",
"430 822 LINE",
"785 822 LINE",
"785 325 LINE SMOOTH",
"785 252 OFFCURVE",
"835 131 OFFCURVE",
"925 44 OFFCURVE",
"1048 -5 OFFCURVE",
"1122 -6 QCURVE SMOOTH",
"1169 -6 OFFCURVE",
"1211 0 QCURVE",
"1211 156 LINE",
"1172 161 OFFCURVE",
"1101 175 OFFCURVE",
"1046 221 OFFCURVE",
"1013 313 OFFCURVE",
"1014 396 QCURVE SMOOTH",
"1014 822 LINE",
"1211 822 LINE",
"1211 1033 LINE",
"37 1033 LINE",
"37 822 LINE",
"212 822 LINE",
"212 1 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0126 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0122 5 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1365;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = zero;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"934 0 OFFCURVE",
"1052 70 OFFCURVE",
"1138 185 OFFCURVE",
"1193 353 OFFCURVE",
"1220 580 OFFCURVE",
"1220 727 QCURVE SMOOTH",
"1220 948 OFFCURVE",
"1159 1232 OFFCURVE",
"1030 1395 OFFCURVE",
"828 1458 OFFCURVE",
"688 1458 QCURVE SMOOTH",
"547 1458 OFFCURVE",
"346 1395 OFFCURVE",
"216 1232 OFFCURVE",
"155 948 OFFCURVE",
"155 727 QCURVE SMOOTH",
"155 580 OFFCURVE",
"182 353 OFFCURVE",
"237 185 OFFCURVE",
"323 70 OFFCURVE",
"441 0 OFFCURVE",
"594 -31 OFFCURVE",
"688 -31 QCURVE SMOOTH",
"782 -31 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"496 254 OFFCURVE",
"435 386 OFFCURVE",
"413 589 OFFCURVE",
"413 727 QCURVE SMOOTH",
"413 866 OFFCURVE",
"435 1059 OFFCURVE",
"496 1179 OFFCURVE",
"603 1233 OFFCURVE",
"688 1233 QCURVE SMOOTH",
"773 1233 OFFCURVE",
"881 1179 OFFCURVE",
"942 1058 OFFCURVE",
"964 865 OFFCURVE",
"964 727 QCURVE SMOOTH",
"964 589 OFFCURVE",
"942 387 OFFCURVE",
"881 255 OFFCURVE",
"773 190 OFFCURVE",
"688 190 QCURVE SMOOTH",
"603 190 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 29 25 29 41 29 57 29 73 29 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01217 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 39 22 39 38 39 54 39 70 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01224 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 24 23 24 39 24 55 24 71 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 34 24 34 40 34 56 34 72 34 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1375;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"587 0 LINE",
"587 1427 LINE",
"153 1427 LINE",
"86 1204 LINE",
"348 1204 LINE",
"348 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 12 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 816;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"987 0 LINE",
"987 223 LINE",
"459 223 LINE",
"459 225 LINE",
"609 364 OFFCURVE",
"812 601 OFFCURVE",
"935 804 OFFCURVE",
"987 978 OFFCURVE",
"987 1055 QCURVE SMOOTH",
"987 1155 OFFCURVE",
"941 1307 OFFCURVE",
"836 1407 OFFCURVE",
"667 1458 OFFCURVE",
"545 1458 QCURVE SMOOTH",
"457 1458 OFFCURVE",
"312 1435 OFFCURVE",
"259 1421 QCURVE SMOOTH",
"197 1404 OFFCURVE",
"148 1384 QCURVE",
"148 1200 LINE",
"197 1209 OFFCURVE",
"250 1216 QCURVE SMOOTH",
"295 1222 OFFCURVE",
"406 1233 OFFCURVE",
"463 1233 QCURVE SMOOTH",
"544 1233 OFFCURVE",
"651 1208 OFFCURVE",
"713 1159 OFFCURVE",
"738 1085 OFFCURVE",
"738 1036 QCURVE SMOOTH",
"738 966 OFFCURVE",
"670 805 OFFCURVE",
"520 596 OFFCURVE",
"279 324 OFFCURVE",
"105 143 QCURVE",
"105 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01226 11 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 10 24 10 40 10 56 10 72 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1151;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"187 14 OFFCURVE",
"251 0 QCURVE SMOOTH",
"306 -13 OFFCURVE",
"448 -33 OFFCURVE",
"523 -33 QCURVE SMOOTH",
"629 -33 OFFCURVE",
"800 9 OFFCURVE",
"921 109 OFFCURVE",
"986 275 OFFCURVE",
"986 399 QCURVE SMOOTH",
"986 477 OFFCURVE",
"954 589 OFFCURVE",
"904 666 OFFCURVE",
"841 712 OFFCURVE",
"778 737 OFFCURVE",
"722 746 OFFCURVE",
"704 748 QCURVE",
"704 750 LINE",
"726 751 OFFCURVE",
"779 764 OFFCURVE",
"834 793 OFFCURVE",
"885 839 OFFCURVE",
"925 909 OFFCURVE",
"949 1005 OFFCURVE",
"949 1069 QCURVE SMOOTH",
"949 1265 OFFCURVE",
"747 1458 OFFCURVE",
"532 1458 QCURVE SMOOTH",
"451 1458 OFFCURVE",
"311 1435 OFFCURVE",
"257 1421 QCURVE SMOOTH",
"195 1404 OFFCURVE",
"142 1384 QCURVE",
"142 1212 LINE",
"190 1220 OFFCURVE",
"239 1226 QCURVE SMOOTH",
"281 1231 OFFCURVE",
"379 1241 OFFCURVE",
"423 1241 QCURVE SMOOTH",
"500 1241 OFFCURVE",
"606 1221 OFFCURVE",
"672 1178 OFFCURVE",
"701 1108 OFFCURVE",
"702 1057 QCURVE SMOOTH",
"703 995 OFFCURVE",
"677 911 OFFCURVE",
"594 860 OFFCURVE",
"439 838 OFFCURVE",
"312 838 QCURVE",
"310 625 LINE",
"434 622 OFFCURVE",
"599 609 OFFCURVE",
"697 566 OFFCURVE",
"737 477 OFFCURVE",
"736 397 QCURVE SMOOTH",
"735 330 OFFCURVE",
"693 249 OFFCURVE",
"615 205 OFFCURVE",
"503 190 OFFCURVE",
"433 190 QCURVE SMOOTH",
"383 190 OFFCURVE",
"277 196 OFFCURVE",
"232 201 QCURVE SMOOTH",
"180 206 OFFCURVE",
"130 213 QCURVE",
"130 33 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01255 11 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01240 10 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 21 25 21 41 21 57 21 73 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 40 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01260 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01216 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 26 24 26 40 26 56 26 72 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 15 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1135;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"733 292 LINE",
"733 0 LINE",
"971 0 LINE",
"971 292 LINE",
"1124 292 LINE",
"1124 505 LINE",
"971 505 LINE",
"971 1427 LINE",
"612 1427 LINE",
"65 450 LINE",
"65 292 LINE"
);
},
{
closed = 1;
nodes = (
"729 1237 LINE",
"735 1237 LINE",
"733 505 LINE",
"330 505 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0127 13 8 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0124 3 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01214 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1224;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"191 16 OFFCURVE",
"249 2 QCURVE SMOOTH",
"299 -11 OFFCURVE",
"435 -31 OFFCURVE",
"518 -31 QCURVE SMOOTH",
"620 -31 OFFCURVE",
"795 9 OFFCURVE",
"922 112 OFFCURVE",
"995 288 OFFCURVE",
"995 424 QCURVE SMOOTH",
"995 565 OFFCURVE",
"945 748 OFFCURVE",
"844 854 OFFCURVE",
"693 895 OFFCURVE",
"591 895 QCURVE SMOOTH",
"559 895 OFFCURVE",
"499 891 OFFCURVE",
"476 889 QCURVE SMOOTH",
"449 886 OFFCURVE",
"425 883 QCURVE",
"425 1204 LINE",
"948 1204 LINE",
"948 1430 LINE",
"188 1430 LINE",
"188 649 LINE",
"235 657 OFFCURVE",
"290 663 QCURVE SMOOTH",
"337 668 OFFCURVE",
"457 678 OFFCURVE",
"522 678 QCURVE SMOOTH",
"590 678 OFFCURVE",
"678 654 OFFCURVE",
"729 598 OFFCURVE",
"749 508 OFFCURVE",
"749 442 QCURVE SMOOTH",
"749 375 OFFCURVE",
"715 280 OFFCURVE",
"641 219 OFFCURVE",
"524 190 OFFCURVE",
"440 190 QCURVE SMOOTH",
"389 190 OFFCURVE",
"285 196 OFFCURVE",
"242 200 QCURVE SMOOTH",
"192 204 OFFCURVE",
"145 211 QCURVE",
"145 35 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01225 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01240 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01230 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"155 284 OFFCURVE",
"219 121 OFFCURVE",
"338 17 OFFCURVE",
"506 -31 OFFCURVE",
"610 -31 QCURVE SMOOTH",
"723 -31 OFFCURVE",
"899 20 OFFCURVE",
"1020 133 OFFCURVE",
"1083 315 OFFCURVE",
"1083 446 QCURVE SMOOTH",
"1083 580 OFFCURVE",
"1033 760 OFFCURVE",
"943 869 OFFCURVE",
"816 915 OFFCURVE",
"739 915 QCURVE SMOOTH",
"700 915 OFFCURVE",
"614 905 OFFCURVE",
"524 886 OFFCURVE",
"434 856 OFFCURVE",
"393 836 QCURVE",
"393 969 LINE SMOOTH",
"393 1056 OFFCURVE",
"426 1161 OFFCURVE",
"501 1216 OFFCURVE",
"621 1233 OFFCURVE",
"708 1233 QCURVE SMOOTH",
"762 1233 OFFCURVE",
"861 1225 OFFCURVE",
"899 1220 QCURVE SMOOTH",
"944 1215 OFFCURVE",
"983 1208 QCURVE",
"983 1386 LINE",
"943 1405 OFFCURVE",
"888 1421 QCURVE SMOOTH",
"841 1434 OFFCURVE",
"708 1456 OFFCURVE",
"622 1456 QCURVE SMOOTH",
"490 1456 OFFCURVE",
"311 1384 OFFCURVE",
"202 1252 OFFCURVE",
"155 1065 OFFCURVE",
"155 950 QCURVE SMOOTH",
"155 399 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"392 662 OFFCURVE",
"428 674 OFFCURVE",
"489 688 OFFCURVE",
"568 700 OFFCURVE",
"610 700 QCURVE SMOOTH",
"671 700 OFFCURVE",
"757 682 OFFCURVE",
"811 629 OFFCURVE",
"835 533 OFFCURVE",
"835 455 QCURVE SMOOTH",
"835 383 OFFCURVE",
"815 283 OFFCURVE",
"764 219 OFFCURVE",
"677 190 OFFCURVE",
"610 190 QCURVE SMOOTH",
"542 190 OFFCURVE",
"457 220 OFFCURVE",
"410 283 OFFCURVE",
"393 381 OFFCURVE",
"393 449 QCURVE SMOOTH",
"393 662 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 53 25 53 41 53 57 53 73 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01227 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 13 24 13 40 13 56 13 72 13 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01222 58 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01248 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 48 23 48 39 48 55 48 71 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1187;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"1003 1270 LINE",
"1003 1427 LINE",
"65 1427 LINE",
"65 1204 LINE",
"720 1204 LINE",
"720 1200 LINE",
"198 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0123 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0121 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1073;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"219 103 OFFCURVE",
"346 7 OFFCURVE",
"521 -29 OFFCURVE",
"626 -29 QCURVE SMOOTH",
"731 -29 OFFCURVE",
"907 7 OFFCURVE",
"1034 103 OFFCURVE",
"1105 272 OFFCURVE",
"1105 406 QCURVE SMOOTH",
"1105 470 OFFCURVE",
"1080 569 OFFCURVE",
"1041 643 OFFCURVE",
"994 693 OFFCURVE",
"948 725 OFFCURVE",
"909 739 OFFCURVE",
"899 741 QCURVE",
"899 743 LINE",
"919 749 OFFCURVE",
"978 781 OFFCURVE",
"1034 847 OFFCURVE",
"1073 956 OFFCURVE",
"1073 1038 QCURVE SMOOTH",
"1073 1129 OFFCURVE",
"1032 1283 OFFCURVE",
"932 1394 OFFCURVE",
"760 1456 OFFCURVE",
"630 1456 QCURVE SMOOTH",
"499 1456 OFFCURVE",
"327 1394 OFFCURVE",
"225 1283 OFFCURVE",
"184 1129 OFFCURVE",
"184 1038 QCURVE SMOOTH",
"184 956 OFFCURVE",
"224 846 OFFCURVE",
"280 779 OFFCURVE",
"339 747 OFFCURVE",
"358 743 QCURVE",
"358 741 LINE",
"348 739 OFFCURVE",
"309 725 OFFCURVE",
"262 693 OFFCURVE",
"214 643 OFFCURVE",
"174 569 OFFCURVE",
"149 470 OFFCURVE",
"149 406 QCURVE SMOOTH",
"149 272 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"489 850 OFFCURVE",
"438 900 OFFCURVE",
"415 981 OFFCURVE",
"415 1038 QCURVE SMOOTH",
"415 1095 OFFCURVE",
"438 1173 OFFCURVE",
"489 1222 OFFCURVE",
"570 1243 OFFCURVE",
"628 1243 QCURVE SMOOTH",
"686 1243 OFFCURVE",
"767 1222 OFFCURVE",
"817 1173 OFFCURVE",
"839 1095 OFFCURVE",
"839 1038 QCURVE SMOOTH",
"839 981 OFFCURVE",
"817 900 OFFCURVE",
"767 850 OFFCURVE",
"686 827 OFFCURVE",
"628 827 QCURVE SMOOTH",
"570 827 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"422 568 OFFCURVE",
"481 621 OFFCURVE",
"569 641 OFFCURVE",
"628 641 QCURVE SMOOTH",
"687 641 OFFCURVE",
"776 621 OFFCURVE",
"835 568 OFFCURVE",
"864 477 OFFCURVE",
"864 406 QCURVE SMOOTH",
"864 334 OFFCURVE",
"835 248 OFFCURVE",
"776 202 OFFCURVE",
"687 188 OFFCURVE",
"628 188 QCURVE SMOOTH",
"569 188 OFFCURVE",
"481 202 OFFCURVE",
"422 248 OFFCURVE",
"393 334 OFFCURVE",
"393 406 QCURVE SMOOTH",
"393 477 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01266 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01236 12 76 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 66 22 66 38 66 54 66 70 66 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0128 0 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01213 0 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 76 25 76 41 76 57 76 73 76 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01223 76 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01229 76 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 2 values pushed */\01251 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 51 25 51 41 51 57 51 73 51 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01287 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01246 4 81 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0128 81 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01229 81 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01271 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 71 23 71 39 71 55 71 71 71 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1254;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"256 10 OFFCURVE",
"313 -2 QCURVE SMOOTH",
"362 -13 OFFCURVE",
"486 -31 OFFCURVE",
"551 -31 QCURVE SMOOTH",
"681 -31 OFFCURVE",
"868 12 OFFCURVE",
"988 103 OFFCURVE",
"1045 248 OFFCURVE",
"1045 350 QCURVE SMOOTH",
"1045 799 LINE SMOOTH",
"1045 929 OFFCURVE",
"1032 1127 OFFCURVE",
"995 1273 OFFCURVE",
"931 1372 OFFCURVE",
"829 1431 OFFCURVE",
"686 1456 OFFCURVE",
"588 1456 QCURVE SMOOTH",
"475 1456 OFFCURVE",
"299 1413 OFFCURVE",
"178 1303 OFFCURVE",
"115 1117 OFFCURVE",
"115 973 QCURVE SMOOTH",
"115 839 OFFCURVE",
"165 657 OFFCURVE",
"255 546 OFFCURVE",
"382 498 OFFCURVE",
"459 498 QCURVE SMOOTH",
"498 498 OFFCURVE",
"584 505 OFFCURVE",
"674 522 OFFCURVE",
"764 548 OFFCURVE",
"805 567 QCURVE",
"805 389 LINE SMOOTH",
"805 332 OFFCURVE",
"769 257 OFFCURVE",
"692 213 OFFCURVE",
"570 195 OFFCURVE",
"484 195 QCURVE SMOOTH",
"430 195 OFFCURVE",
"329 201 OFFCURVE",
"290 206 QCURVE SMOOTH",
"244 210 OFFCURVE",
"205 217 QCURVE",
"205 27 LINE"
);
},
{
closed = 1;
nodes = (
"440 733 OFFCURVE",
"384 789 OFFCURVE",
"359 891 OFFCURVE",
"359 973 QCURVE SMOOTH",
"359 1054 OFFCURVE",
"382 1155 OFFCURVE",
"436 1212 OFFCURVE",
"523 1233 OFFCURVE",
"588 1233 QCURVE SMOOTH",
"652 1233 OFFCURVE",
"735 1211 OFFCURVE",
"785 1155 OFFCURVE",
"805 1058 OFFCURVE",
"805 983 QCURVE SMOOTH",
"805 741 LINE",
"806 741 OFFCURVE",
"770 732 OFFCURVE",
"709 722 OFFCURVE",
"630 713 OFFCURVE",
"588 713 QCURVE SMOOTH",
"526 713 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 61 22 61 38 61 54 61 70 61 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01245 3 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01211 16 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1200;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = onesuperior;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"446 672 LINE",
"446 1554 LINE",
"106 1554 LINE",
"65 1386 LINE",
"259 1386 LINE",
"259 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 14 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0122 7 1 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 574;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = twosuperior;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"651 672 LINE",
"651 840 LINE",
"342 840 LINE",
"342 842 LINE",
"396 885 OFFCURVE",
"505 989 OFFCURVE",
"592 1106 OFFCURVE",
"647 1237 OFFCURVE",
"647 1309 QCURVE SMOOTH",
"647 1373 OFFCURVE",
"606 1469 OFFCURVE",
"532 1534 OFFCURVE",
"426 1567 OFFCURVE",
"362 1567 QCURVE SMOOTH",
"296 1567 OFFCURVE",
"197 1553 OFFCURVE",
"162 1545 QCURVE SMOOTH",
"122 1535 OFFCURVE",
"92 1524 QCURVE",
"92 1393 LINE",
"121 1396 OFFCURVE",
"154 1400 QCURVE SMOOTH",
"182 1402 OFFCURVE",
"251 1407 OFFCURVE",
"286 1407 QCURVE SMOOTH",
"456 1407 OFFCURVE",
"456 1274 QCURVE SMOOTH",
"456 1232 OFFCURVE",
"407 1136 OFFCURVE",
"310 1019 OFFCURVE",
"163 878 OFFCURVE",
"65 791 QCURVE",
"65 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01223 16 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01230 7 31 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01218 7 7 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 711;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = threesuperior;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"99 685 OFFCURVE",
"139 677 QCURVE SMOOTH",
"174 670 OFFCURVE",
"266 659 OFFCURVE",
"320 659 QCURVE SMOOTH",
"391 659 OFFCURVE",
"506 685 OFFCURVE",
"587 746 OFFCURVE",
"631 848 OFFCURVE",
"631 924 QCURVE SMOOTH",
"631 979 OFFCURVE",
"606 1051 OFFCURVE",
"567 1096 OFFCURVE",
"521 1120 OFFCURVE",
"500 1128 QCURVE",
"500 1133 LINE",
"518 1137 OFFCURVE",
"556 1163 OFFCURVE",
"587 1207 OFFCURVE",
"607 1272 OFFCURVE",
"607 1317 QCURVE SMOOTH",
"607 1389 OFFCURVE",
"564 1485 OFFCURVE",
"485 1543 OFFCURVE",
"376 1567 OFFCURVE",
"310 1567 QCURVE SMOOTH",
"260 1567 OFFCURVE",
"173 1553 OFFCURVE",
"140 1545 QCURVE SMOOTH",
"101 1535 OFFCURVE",
"68 1524 QCURVE",
"68 1399 LINE",
"99 1402 OFFCURVE",
"133 1406 QCURVE SMOOTH",
"162 1408 OFFCURVE",
"235 1413 OFFCURVE",
"273 1413 QCURVE SMOOTH",
"351 1413 OFFCURVE",
"429 1363 OFFCURVE",
"429 1303 QCURVE SMOOTH",
"429 1274 OFFCURVE",
"408 1232 OFFCURVE",
"358 1204 OFFCURVE",
"275 1191 OFFCURVE",
"212 1190 QCURVE",
"212 1049 LINE",
"280 1046 OFFCURVE",
"369 1034 OFFCURVE",
"422 1008 OFFCURVE",
"443 966 OFFCURVE",
"443 934 QCURVE SMOOTH",
"443 905 OFFCURVE",
"428 861 OFFCURVE",
"386 833 OFFCURVE",
"313 819 OFFCURVE",
"255 819 QCURVE SMOOTH",
"225 819 OFFCURVE",
"158 822 OFFCURVE",
"130 824 QCURVE SMOOTH",
"97 826 OFFCURVE",
"66 829 QCURVE",
"66 696 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01251 14 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01246 10 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 7 56 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01235 7 24 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01216 7 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01246 15 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 676;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = fraction;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"251 0 LINE",
"894 1554 LINE",
"653 1554 LINE",
"10 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 924;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = onehalf;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"442 0 LINE",
"1147 1554 LINE",
"961 1554 LINE",
"256 0 LINE"
);
},
{
closed = 1;
nodes = (
"1548 0 LINE",
"1548 168 LINE",
"1239 168 LINE",
"1239 170 LINE",
"1293 214 OFFCURVE",
"1402 317 OFFCURVE",
"1489 434 OFFCURVE",
"1544 565 OFFCURVE",
"1544 637 QCURVE SMOOTH",
"1544 701 OFFCURVE",
"1503 797 OFFCURVE",
"1429 862 OFFCURVE",
"1323 895 OFFCURVE",
"1259 895 QCURVE SMOOTH",
"1193 895 OFFCURVE",
"1094 881 OFFCURVE",
"1059 873 QCURVE SMOOTH",
"1019 863 OFFCURVE",
"989 852 QCURVE",
"989 721 LINE",
"1019 724 OFFCURVE",
"1052 728 QCURVE SMOOTH",
"1080 730 OFFCURVE",
"1149 735 OFFCURVE",
"1184 735 QCURVE SMOOTH",
"1354 735 OFFCURVE",
"1354 602 QCURVE SMOOTH",
"1354 561 OFFCURVE",
"1305 464 OFFCURVE",
"1208 347 OFFCURVE",
"1061 206 OFFCURVE",
"962 119 QCURVE",
"962 0 LINE"
);
},
{
closed = 1;
nodes = (
"373 672 LINE",
"373 1554 LINE",
"33 1554 LINE",
"-8 1386 LINE",
"186 1386 LINE",
"186 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 9 25 9 41 9 57 9 73 9 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 37 34 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0123 37 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01235 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01239 7 38 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01222 7 11 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01233 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1559;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"428 0 LINE",
"1132 1554 LINE",
"946 1554 LINE",
"241 0 LINE"
);
},
{
closed = 1;
nodes = (
"1188 156 LINE",
"1188 0 LINE",
"1375 0 LINE",
"1375 156 LINE",
"1489 156 LINE",
"1489 312 LINE",
"1375 312 LINE",
"1375 883 LINE",
"1082 883 LINE",
"787 279 LINE",
"787 156 LINE"
);
},
{
closed = 1;
nodes = (
"1182 741 LINE",
"1188 741 LINE",
"1188 312 LINE",
"988 312 LINE"
);
},
{
closed = 1;
nodes = (
"381 672 LINE",
"381 1554 LINE",
"41 1554 LINE",
"0 1386 LINE",
"194 1386 LINE",
"194 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0121 19 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0123 19 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01221 7 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 7 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0127 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1499;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"584 0 LINE",
"1289 1554 LINE",
"1102 1554 LINE",
"398 0 LINE"
);
},
{
closed = 1;
nodes = (
"1321 156 LINE",
"1321 0 LINE",
"1508 0 LINE",
"1508 156 LINE",
"1622 156 LINE",
"1622 312 LINE",
"1508 312 LINE",
"1508 883 LINE",
"1215 883 LINE",
"920 279 LINE",
"920 156 LINE"
);
},
{
closed = 1;
nodes = (
"1315 741 LINE",
"1321 741 LINE",
"1321 312 LINE",
"1121 312 LINE"
);
},
{
closed = 1;
nodes = (
"73 685 OFFCURVE",
"113 677 QCURVE SMOOTH",
"148 670 OFFCURVE",
"240 659 OFFCURVE",
"294 659 QCURVE SMOOTH",
"365 659 OFFCURVE",
"480 685 OFFCURVE",
"561 746 OFFCURVE",
"605 848 OFFCURVE",
"605 924 QCURVE SMOOTH",
"605 979 OFFCURVE",
"580 1051 OFFCURVE",
"541 1096 OFFCURVE",
"495 1120 OFFCURVE",
"474 1128 QCURVE",
"474 1133 LINE",
"492 1137 OFFCURVE",
"530 1163 OFFCURVE",
"561 1207 OFFCURVE",
"581 1272 OFFCURVE",
"581 1317 QCURVE SMOOTH",
"581 1389 OFFCURVE",
"538 1485 OFFCURVE",
"459 1543 OFFCURVE",
"350 1567 OFFCURVE",
"284 1567 QCURVE SMOOTH",
"234 1567 OFFCURVE",
"147 1553 OFFCURVE",
"114 1545 QCURVE SMOOTH",
"75 1535 OFFCURVE",
"42 1524 QCURVE",
"42 1399 LINE",
"73 1402 OFFCURVE",
"107 1406 QCURVE SMOOTH",
"136 1408 OFFCURVE",
"209 1413 OFFCURVE",
"247 1413 QCURVE SMOOTH",
"325 1413 OFFCURVE",
"403 1363 OFFCURVE",
"403 1303 QCURVE SMOOTH",
"403 1274 OFFCURVE",
"382 1232 OFFCURVE",
"332 1204 OFFCURVE",
"249 1191 OFFCURVE",
"186 1190 QCURVE",
"186 1049 LINE",
"254 1046 OFFCURVE",
"343 1034 OFFCURVE",
"396 1008 OFFCURVE",
"417 966 OFFCURVE",
"417 934 QCURVE SMOOTH",
"417 905 OFFCURVE",
"402 861 OFFCURVE",
"360 833 OFFCURVE",
"287 819 OFFCURVE",
"229 819 QCURVE SMOOTH",
"199 819 OFFCURVE",
"132 822 OFFCURVE",
"104 824 QCURVE SMOOTH",
"71 826 OFFCURVE",
"40 829 QCURVE",
"40 696 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01211 14 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01270 14 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 40 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01217 40 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01218 40 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01259 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 70 22 70 38 70 54 70 70 70 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01265 29 70 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01282 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01254 7 43 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01235 7 34 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01224 7 75 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 7 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 43 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0127 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01265 34 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1632;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = period;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"116 34 OFFCURVE",
"151 -1 OFFCURVE",
"210 -14 OFFCURVE",
"255 -14 QCURVE SMOOTH",
"301 -14 OFFCURVE",
"361 -1 OFFCURVE",
"395 34 OFFCURVE",
"409 93 OFFCURVE",
"409 139 QCURVE SMOOTH",
"409 186 OFFCURVE",
"395 245 OFFCURVE",
"361 279 OFFCURVE",
"301 291 OFFCURVE",
"255 291 QCURVE SMOOTH",
"210 291 OFFCURVE",
"151 279 OFFCURVE",
"116 245 OFFCURVE",
"103 186 OFFCURVE",
"103 139 QCURVE SMOOTH",
"103 93 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01210 15 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 10 22 10 38 10 54 10 70 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0125 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 5 23 5 39 5 55 5 71 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 512;
}
);
note = period;
unicode = 002E;
},
{
glyphname = comma;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"158 -11 OFFCURVE",
"218 -19 QCURVE",
"217 -58 OFFCURVE",
"197 -144 OFFCURVE",
"165 -228 OFFCURVE",
"125 -304 OFFCURVE",
"103 -334 QCURVE",
"193 -399 LINE",
"222 -381 OFFCURVE",
"298 -285 OFFCURVE",
"365 -156 OFFCURVE",
"411 -5 OFFCURVE",
"411 70 QCURVE SMOOTH",
"411 120 OFFCURVE",
"401 198 OFFCURVE",
"369 252 OFFCURVE",
"308 281 OFFCURVE",
"257 281 QCURVE SMOOTH",
"212 281 OFFCURVE",
"154 267 OFFCURVE",
"119 232 OFFCURVE",
"105 172 OFFCURVE",
"105 127 QCURVE SMOOTH",
"105 54 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01210 16 21 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 21 25 21 41 21 57 21 73 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 512;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = colon;
layers = (
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 0, 680}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 2, 680}";
},
{
name = comma;
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = ellipsis;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1054 27 OFFCURVE",
"1085 -4 OFFCURVE",
"1136 -16 OFFCURVE",
"1175 -16 QCURVE SMOOTH",
"1215 -16 OFFCURVE",
"1267 -4 OFFCURVE",
"1298 27 OFFCURVE",
"1310 79 OFFCURVE",
"1310 119 QCURVE SMOOTH",
"1310 159 OFFCURVE",
"1298 210 OFFCURVE",
"1267 240 OFFCURVE",
"1215 252 OFFCURVE",
"1175 252 QCURVE SMOOTH",
"1136 252 OFFCURVE",
"1085 240 OFFCURVE",
"1054 210 OFFCURVE",
"1042 159 OFFCURVE",
"1042 119 QCURVE SMOOTH",
"1042 79 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"587 27 OFFCURVE",
"618 -4 OFFCURVE",
"669 -16 OFFCURVE",
"708 -16 QCURVE SMOOTH",
"748 -16 OFFCURVE",
"800 -4 OFFCURVE",
"831 27 OFFCURVE",
"843 79 OFFCURVE",
"843 119 QCURVE SMOOTH",
"843 159 OFFCURVE",
"831 210 OFFCURVE",
"800 240 OFFCURVE",
"748 252 OFFCURVE",
"708 252 QCURVE SMOOTH",
"669 252 OFFCURVE",
"618 240 OFFCURVE",
"587 210 OFFCURVE",
"575 159 OFFCURVE",
"575 119 QCURVE SMOOTH",
"575 79 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"114 27 OFFCURVE",
"145 -4 OFFCURVE",
"196 -16 OFFCURVE",
"235 -16 QCURVE SMOOTH",
"275 -16 OFFCURVE",
"327 -4 OFFCURVE",
"358 27 OFFCURVE",
"370 79 OFFCURVE",
"370 119 QCURVE SMOOTH",
"370 159 OFFCURVE",
"358 210 OFFCURVE",
"327 240 OFFCURVE",
"275 252 OFFCURVE",
"235 252 QCURVE SMOOTH",
"196 252 OFFCURVE",
"145 240 OFFCURVE",
"114 210 OFFCURVE",
"102 159 OFFCURVE",
"102 119 QCURVE SMOOTH",
"102 79 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01250 15 40 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01230 15 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 15 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 0 25 0 41 0 57 0 73 0 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 20 25 20 41 20 57 20 73 20 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 50 22 50 38 50 54 50 70 50 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01235 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01255 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0125 6 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 5 23 5 39 5 55 5 71 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1412;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = exclam;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"412 436 LINE",
"412 1427 LINE",
"172 1427 LINE",
"172 436 LINE"
);
},
{
closed = 1;
nodes = (
"152 34 OFFCURVE",
"187 -1 OFFCURVE",
"246 -14 OFFCURVE",
"291 -14 QCURVE SMOOTH",
"337 -14 OFFCURVE",
"397 -1 OFFCURVE",
"431 34 OFFCURVE",
"445 93 OFFCURVE",
"445 139 QCURVE SMOOTH",
"445 186 OFFCURVE",
"431 245 OFFCURVE",
"397 279 OFFCURVE",
"337 291 OFFCURVE",
"291 291 QCURVE SMOOTH",
"246 291 OFFCURVE",
"187 279 OFFCURVE",
"152 245 OFFCURVE",
"139 186 OFFCURVE",
"139 139 QCURVE SMOOTH",
"139 93 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01214 15 4 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 14 22 14 38 14 54 14 70 14 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0120 4 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0129 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 9 23 9 39 9 55 9 71 9 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 513;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
layers = (
{
components = (
{
name = exclam;
transform = "{-0.99994, 0, 0, -0.99994, 584, 1424}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 584;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"583 422 LINE",
"583 600 LINE",
"647 613 OFFCURVE",
"771 665 OFFCURVE",
"869 760 OFFCURVE",
"929 909 OFFCURVE",
"929 1020 QCURVE SMOOTH",
"929 1149 OFFCURVE",
"857 1316 OFFCURVE",
"737 1412 OFFCURVE",
"583 1450 OFFCURVE",
"501 1450 QCURVE SMOOTH",
"415 1450 OFFCURVE",
"273 1431 OFFCURVE",
"171 1408 OFFCURVE",
"115 1389 OFFCURVE",
"116 1389 QCURVE",
"116 1208 LINE",
"163 1216 OFFCURVE",
"211 1222 QCURVE SMOOTH",
"253 1227 OFFCURVE",
"349 1237 OFFCURVE",
"394 1237 QCURVE SMOOTH",
"466 1237 OFFCURVE",
"574 1219 OFFCURVE",
"648 1170 OFFCURVE",
"685 1084 OFFCURVE",
"685 1016 QCURVE SMOOTH",
"685 946 OFFCURVE",
"643 856 OFFCURVE",
"559 801 OFFCURVE",
"431 775 OFFCURVE",
"345 768 QCURVE",
"345 422 LINE"
);
},
{
closed = 1;
nodes = (
"325 34 OFFCURVE",
"360 -1 OFFCURVE",
"419 -14 OFFCURVE",
"464 -14 QCURVE SMOOTH",
"510 -14 OFFCURVE",
"570 -1 OFFCURVE",
"604 34 OFFCURVE",
"618 93 OFFCURVE",
"618 139 QCURVE SMOOTH",
"618 186 OFFCURVE",
"604 245 OFFCURVE",
"570 279 OFFCURVE",
"510 291 OFFCURVE",
"464 291 QCURVE SMOOTH",
"419 291 OFFCURVE",
"360 279 OFFCURVE",
"325 245 OFFCURVE",
"312 186 OFFCURVE",
"312 139 QCURVE SMOOTH",
"312 93 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01226 12 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01244 15 34 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 44 22 44 38 44 54 44 70 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0120 34 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01231 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01249 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 10 24 10 40 10 56 10 72 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 39 23 39 39 39 55 39 71 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1026;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"570 1157 OFFCURVE",
"604 1191 OFFCURVE",
"618 1250 OFFCURVE",
"618 1297 QCURVE SMOOTH",
"618 1343 OFFCURVE",
"604 1402 OFFCURVE",
"570 1437 OFFCURVE",
"510 1450 OFFCURVE",
"464 1450 QCURVE SMOOTH",
"419 1450 OFFCURVE",
"360 1437 OFFCURVE",
"325 1402 OFFCURVE",
"312 1343 OFFCURVE",
"312 1297 QCURVE SMOOTH",
"312 1250 OFFCURVE",
"325 1191 OFFCURVE",
"360 1157 OFFCURVE",
"419 1145 OFFCURVE",
"464 1145 QCURVE SMOOTH",
"510 1145 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"115 47 OFFCURVE",
"171 28 OFFCURVE",
"273 5 OFFCURVE",
"415 -14 OFFCURVE",
"501 -14 QCURVE SMOOTH",
"583 -14 OFFCURVE",
"737 24 OFFCURVE",
"857 120 OFFCURVE",
"929 287 OFFCURVE",
"929 416 QCURVE SMOOTH",
"929 527 OFFCURVE",
"869 676 OFFCURVE",
"771 771 OFFCURVE",
"647 823 OFFCURVE",
"583 836 QCURVE",
"583 1014 LINE",
"345 1014 LINE",
"345 668 LINE",
"431 661 OFFCURVE",
"559 635 OFFCURVE",
"643 580 OFFCURVE",
"685 490 OFFCURVE",
"685 420 QCURVE SMOOTH",
"685 352 OFFCURVE",
"648 266 OFFCURVE",
"574 217 OFFCURVE",
"466 199 OFFCURVE",
"394 199 QCURVE SMOOTH",
"349 199 OFFCURVE",
"253 208 OFFCURVE",
"211 213 QCURVE SMOOTH",
"163 219 OFFCURVE",
"116 228 QCURVE",
"116 47 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01243 12 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 15 22 15 38 15 54 15 70 15 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 30 25 30 41 30 57 30 73 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01235 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01238 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01248 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 7 values pushed */\01240 0 56 0 72 0 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\0128 0 24 0 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 22 23 22 39 22 55 22 71 22 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1031;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 0, 553}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 510;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = bullet;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"481 364 OFFCURVE",
"533 415 OFFCURVE",
"553 502 OFFCURVE",
"553 569 QCURVE SMOOTH",
"553 637 OFFCURVE",
"533 724 OFFCURVE",
"481 775 OFFCURVE",
"393 795 OFFCURVE",
"326 795 QCURVE SMOOTH",
"261 795 OFFCURVE",
"174 775 OFFCURVE",
"123 724 OFFCURVE",
"102 637 OFFCURVE",
"102 569 QCURVE SMOOTH",
"102 502 OFFCURVE",
"123 415 OFFCURVE",
"174 364 OFFCURVE",
"261 344 OFFCURVE",
"326 344 QCURVE SMOOTH",
"393 344 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 689;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"428 979 LINE",
"592 739 LINE",
"758 860 LINE",
"577 1085 LINE",
"860 1165 LINE",
"797 1362 LINE",
"526 1260 LINE",
"537 1554 LINE",
"334 1554 LINE",
"342 1268 LINE",
"68 1366 LINE",
"6 1174 LINE",
"283 1094 LINE",
"102 862 LINE",
"268 741 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 866;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"381 0 LINE",
"467 376 LINE",
"741 376 LINE",
"655 0 LINE",
"865 0 LINE",
"951 376 LINE",
"1203 376 LINE",
"1203 560 LINE",
"993 560 LINE",
"1064 869 LINE",
"1307 869 LINE",
"1307 1053 LINE",
"1107 1053 LINE",
"1193 1428 LINE",
"983 1428 LINE",
"897 1053 LINE",
"623 1053 LINE",
"709 1428 LINE",
"499 1428 LINE",
"413 1053 LINE",
"164 1053 LINE",
"164 869 LINE",
"370 869 LINE",
"299 560 LINE",
"60 560 LINE",
"60 376 LINE",
"257 376 LINE",
"171 0 LINE"
);
},
{
closed = 1;
nodes = (
"580 869 LINE",
"854 869 LINE",
"783 560 LINE",
"509 560 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0124 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1319;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"251 0 LINE",
"894 1554 LINE",
"653 1554 LINE",
"10 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 924;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = backslash;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"915 0 LINE",
"272 1554 LINE",
"30 1554 LINE",
"673 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 925;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = parenleft;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"608 -266 LINE",
"544 -151 OFFCURVE",
"494 0 QCURVE SMOOTH",
"473 64 OFFCURVE",
"432 221 OFFCURVE",
"400 404 OFFCURVE",
"381 612 OFFCURVE",
"381 727 QCURVE SMOOTH",
"381 842 OFFCURVE",
"400 1050 OFFCURVE",
"432 1233 OFFCURVE",
"473 1390 OFFCURVE",
"494 1455 QCURVE SMOOTH",
"544 1606 OFFCURVE",
"608 1722 QCURVE",
"422 1722 LINE",
"341 1637 OFFCURVE",
"278 1498 QCURVE SMOOTH",
"251 1439 OFFCURVE",
"200 1285 OFFCURVE",
"159 1093 OFFCURVE",
"135 862 OFFCURVE",
"135 725 QCURVE SMOOTH",
"135 589 OFFCURVE",
"159 359 OFFCURVE",
"200 169 OFFCURVE",
"251 17 OFFCURVE",
"278 -42 QCURVE SMOOTH",
"341 -180 OFFCURVE",
"422 -266 QCURVE",
"422 -266 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01222 12 7 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 22 22 22 38 22 54 22 70 22 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01214 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 648;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"226 -266 LINE",
"306 -180 OFFCURVE",
"368 -42 QCURVE SMOOTH",
"395 17 OFFCURVE",
"446 169 OFFCURVE",
"486 359 OFFCURVE",
"511 589 OFFCURVE",
"511 725 QCURVE SMOOTH",
"511 862 OFFCURVE",
"486 1093 OFFCURVE",
"446 1285 OFFCURVE",
"395 1439 OFFCURVE",
"368 1498 QCURVE SMOOTH",
"306 1637 OFFCURVE",
"226 1722 QCURVE",
"40 1722 LINE",
"103 1606 OFFCURVE",
"153 1455 QCURVE SMOOTH",
"174 1390 OFFCURVE",
"215 1233 OFFCURVE",
"247 1050 OFFCURVE",
"267 842 OFFCURVE",
"267 727 QCURVE SMOOTH",
"267 612 OFFCURVE",
"247 404 OFFCURVE",
"215 221 OFFCURVE",
"174 64 OFFCURVE",
"153 0 QCURVE SMOOTH",
"103 -151 OFFCURVE",
"40 -266 QCURVE",
"40 -266 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01222 12 7 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 7 25 7 41 7 57 7 73 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01214 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 646;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"256 -65 OFFCURVE",
"282 -181 OFFCURVE",
"340 -258 OFFCURVE",
"436 -297 OFFCURVE",
"506 -297 QCURVE SMOOTH",
"566 -297 OFFCURVE",
"658 -289 OFFCURVE",
"690 -284 QCURVE SMOOTH",
"728 -278 OFFCURVE",
"756 -270 QCURVE",
"756 -100 LINE",
"664 -100 OFFCURVE",
"556 -90 OFFCURVE",
"500 -52 OFFCURVE",
"485 21 OFFCURVE",
"485 84 QCURVE SMOOTH",
"485 582 LINE SMOOTH",
"485 644 OFFCURVE",
"439 728 OFFCURVE",
"380 779 OFFCURVE",
"324 803 OFFCURVE",
"315 805 QCURVE",
"325 808 OFFCURVE",
"381 833 OFFCURVE",
"439 885 OFFCURVE",
"485 968 OFFCURVE",
"485 1030 QCURVE SMOOTH",
"485 1528 LINE SMOOTH",
"485 1590 OFFCURVE",
"500 1663 OFFCURVE",
"556 1701 OFFCURVE",
"664 1712 OFFCURVE",
"756 1712 QCURVE",
"756 1882 LINE",
"728 1889 OFFCURVE",
"690 1894 QCURVE SMOOTH",
"658 1899 OFFCURVE",
"566 1907 OFFCURVE",
"506 1907 QCURVE SMOOTH",
"436 1907 OFFCURVE",
"340 1868 OFFCURVE",
"282 1791 OFFCURVE",
"256 1676 OFFCURVE",
"256 1599 QCURVE SMOOTH",
"256 1165 LINE SMOOTH",
"256 1090 OFFCURVE",
"235 999 OFFCURVE",
"191 946 OFFCURVE",
"126 920 OFFCURVE",
"82 911 QCURVE",
"82 700 LINE",
"126 691 OFFCURVE",
"191 665 OFFCURVE",
"235 611 OFFCURVE",
"256 519 OFFCURVE",
"256 444 QCURVE SMOOTH",
"256 12 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01239 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01234 0 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01245 8 51 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01217 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 772;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"44 -278 OFFCURVE",
"82 -284 QCURVE SMOOTH",
"114 -289 OFFCURVE",
"206 -297 OFFCURVE",
"266 -297 QCURVE SMOOTH",
"336 -297 OFFCURVE",
"431 -258 OFFCURVE",
"490 -181 OFFCURVE",
"516 -65 OFFCURVE",
"516 12 QCURVE SMOOTH",
"516 444 LINE SMOOTH",
"516 519 OFFCURVE",
"537 611 OFFCURVE",
"581 665 OFFCURVE",
"646 691 OFFCURVE",
"690 700 QCURVE",
"690 911 LINE",
"646 920 OFFCURVE",
"581 946 OFFCURVE",
"537 999 OFFCURVE",
"516 1090 OFFCURVE",
"516 1165 QCURVE SMOOTH",
"516 1599 LINE SMOOTH",
"516 1676 OFFCURVE",
"490 1791 OFFCURVE",
"431 1868 OFFCURVE",
"336 1907 OFFCURVE",
"266 1907 QCURVE SMOOTH",
"206 1907 OFFCURVE",
"114 1899 OFFCURVE",
"82 1894 QCURVE SMOOTH",
"44 1889 OFFCURVE",
"16 1882 QCURVE",
"16 1712 LINE",
"108 1712 OFFCURVE",
"216 1701 OFFCURVE",
"271 1663 OFFCURVE",
"286 1590 OFFCURVE",
"286 1528 QCURVE SMOOTH",
"286 1030 LINE SMOOTH",
"286 968 OFFCURVE",
"332 885 OFFCURVE",
"391 833 OFFCURVE",
"446 808 OFFCURVE",
"456 805 QCURVE",
"447 803 OFFCURVE",
"392 779 OFFCURVE",
"332 728 OFFCURVE",
"286 644 OFFCURVE",
"286 582 QCURVE SMOOTH",
"286 84 LINE SMOOTH",
"286 21 OFFCURVE",
"271 -52 OFFCURVE",
"216 -90 OFFCURVE",
"108 -100 OFFCURVE",
"16 -100 QCURVE",
"16 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01228 51 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01211 51 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 772;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"680 -330 LINE",
"680 -104 LINE",
"416 -104 LINE",
"416 1718 LINE",
"680 1718 LINE",
"680 1944 LINE",
"182 1944 LINE",
"182 -330 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 680;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"0 -330 LINE",
"498 -330 LINE",
"498 1944 LINE",
"0 1944 LINE",
"0 1718 LINE",
"262 1718 LINE",
"262 -104 LINE",
"0 -104 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0125 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0120 3 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0124 3 1 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 680;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"734 475 LINE",
"734 702 LINE",
"60 702 LINE",
"60 475 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 794;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = endash;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1080 475 LINE",
"1080 702 LINE",
"60 702 LINE",
"60 475 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1140;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"2106 475 LINE",
"2106 702 LINE",
"60 702 LINE",
"60 475 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 2166;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = underscore;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"-10 -248 LINE",
"985 -248 LINE",
"985 -78 LINE",
"-10 -78 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0120 7 1 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 975;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = quotesinglbase;
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, -2, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 508;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 505, -7}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 38, -7}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1026;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = quotedblleft;
layers = (
{
components = (
{
name = comma;
transform = "{-0.99994, 0, 0, -0.99994, 515, 1300}";
},
{
name = comma;
transform = "{-0.99994, 0, 0, -0.99994, 982, 1300}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1026;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 38, 1343}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 505, 1343}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1026;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
layers = (
{
components = (
{
name = comma;
transform = "{-0.99994, 0, 0, -0.99994, 505, 1300}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 508;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, -2, 1348}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 508;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = guillemetleft;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, -35, 0}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 542, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1197;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemetright;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
components = (
{
name = guilsinglleft;
transform = "{-0.99994, 0, 0, 1, 655, 0}";
},
{
name = guilsinglleft;
transform = "{-0.99994, 0, 0, 1, 1233, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1197;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"570 86 LINE",
"570 358 LINE",
"297 532 LINE",
"297 557 LINE",
"570 731 LINE",
"570 1004 LINE",
"113 688 LINE",
"113 401 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 14 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 6 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 684;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"570 688 LINE",
"113 1004 LINE",
"113 731 LINE",
"386 557 LINE",
"386 532 LINE",
"113 358 LINE",
"113 86 LINE",
"570 401 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0127 15 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0125 0 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 684;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"722 1147 LINE",
"745 1630 LINE",
"507 1630 LINE",
"530 1147 LINE"
);
},
{
closed = 1;
nodes = (
"329 1147 LINE",
"352 1630 LINE",
"114 1630 LINE",
"137 1147 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 9 2 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 860;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = quotesingle;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"352 1147 LINE",
"375 1630 LINE",
"137 1630 LINE",
"160 1147 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 9 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 513;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = space;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
note = space;
unicode = 0020;
},
{
glyphname = nbspace;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 410;
}
);
note = nonbreakingspace;
unicode = 00A0;
},
{
glyphname = CR;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1178;
}
);
note = CR;
unicode = 000D;
},
{
glyphname = .notdef;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"788 46 OFFCURVE",
"827 20 OFFCURVE",
"855 7 OFFCURVE",
"874 4 OFFCURVE",
"881 6 QCURVE SMOOTH",
"902 14 OFFCURVE",
"931 73 OFFCURVE",
"940 135 QCURVE SMOOTH",
"1001 512 LINE SMOOTH",
"1004 537 OFFCURVE",
"1004 558 QCURVE SMOOTH",
"1004 580 OFFCURVE",
"995 628 OFFCURVE",
"981 664 QCURVE SMOOTH",
"678 1432 LINE",
"436 1554 LINE",
"297 1501 LINE",
"166 1448 LINE",
"74 1188 LINE",
"373 422 LINE SMOOTH",
"382 398 OFFCURVE",
"401 363 OFFCURVE",
"422 335 OFFCURVE",
"445 311 OFFCURVE",
"459 299 QCURVE SMOOTH",
"760 68 LINE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 1217 LINE",
"231 1378 LINE",
"334 1417 LINE",
"430 1456 LINE",
"584 1374 LINE",
"522 1227 LINE",
"326 1149 LINE"
);
},
{
closed = 1;
nodes = (
"316 1229 OFFCURVE",
"343 1229 QCURVE SMOOTH",
"374 1229 OFFCURVE",
"408 1243 QCURVE SMOOTH",
"430 1252 OFFCURVE",
"466 1279 OFFCURVE",
"488 1310 OFFCURVE",
"495 1342 OFFCURVE",
"489 1356 QCURVE SMOOTH",
"482 1373 OFFCURVE",
"444 1392 OFFCURVE",
"418 1392 QCURVE SMOOTH",
"388 1392 OFFCURVE",
"354 1378 QCURVE SMOOTH",
"331 1370 OFFCURVE",
"295 1343 OFFCURVE",
"271 1313 OFFCURVE",
"263 1281 OFFCURVE",
"268 1268 QCURVE SMOOTH",
"276 1249 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"641 1276 LINE",
"899 610 LINE",
"893 601 OFFCURVE",
"886 591 QCURVE SMOOTH",
"880 583 OFFCURVE",
"862 562 OFFCURVE",
"852 551 QCURVE",
"598 1182 LINE"
);
},
{
closed = 1;
nodes = (
"451 912 OFFCURVE",
"387 1075 QCURVE",
"453 1104 LINE",
"524 1130 LINE",
"556 1047 OFFCURVE",
"619 889 OFFCURVE",
"681 732 OFFCURVE",
"744 574 OFFCURVE",
"776 492 QCURVE",
"768 486 OFFCURVE",
"757 481 QCURVE SMOOTH",
"748 476 OFFCURVE",
"723 466 OFFCURVE",
"709 461 QCURVE",
"675 445 OFFCURVE",
"648 438 OFFCURVE",
"643 438 QCURVE",
"578 601 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"269 936 OFFCURVE",
"203 1104 QCURVE",
"295 1063 LINE",
"543 432 LINE",
"517 432 OFFCURVE",
"484 434 OFFCURVE",
"475 436 QCURVE SMOOTH",
"464 438 OFFCURVE",
"459 440 QCURVE",
"394 609 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"573 334 LINE SMOOTH",
"607 334 OFFCURVE",
"694 347 OFFCURVE",
"745 367 QCURVE SMOOTH",
"799 387 OFFCURVE",
"874 438 OFFCURVE",
"897 463 QCURVE",
"889 412 OFFCURVE",
"882 368 QCURVE SMOOTH",
"879 349 OFFCURVE",
"873 311 OFFCURVE",
"867 277 OFFCURVE",
"862 249 OFFCURVE",
"860 242 QCURVE",
"860 244 LINE",
"854 222 OFFCURVE",
"836 196 OFFCURVE",
"811 186 QCURVE",
"813 186 LINE",
"794 180 OFFCURVE",
"765 186 OFFCURVE",
"745 199 QCURVE SMOOTH",
"748 197 LINE",
"567 334 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 4 values pushed */\01240 7 50 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01259 50 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1092;
}
);
note = .notdef;
},
{
glyphname = .null;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 0;
}
);
note = .null;
},
{
glyphname = cent;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"450 -205 LINE",
"686 -205 LINE",
"686 -19 LINE",
"734 -12 OFFCURVE",
"805 7 OFFCURVE",
"829 16 QCURVE SMOOTH",
"857 27 OFFCURVE",
"877 37 QCURVE",
"877 203 LINE",
"848 197 OFFCURVE",
"812 193 QCURVE SMOOTH",
"781 189 OFFCURVE",
"698 184 OFFCURVE",
"649 184 QCURVE SMOOTH",
"571 184 OFFCURVE",
"457 209 OFFCURVE",
"381 284 OFFCURVE",
"344 420 OFFCURVE",
"344 530 QCURVE SMOOTH",
"344 638 OFFCURVE",
"376 771 OFFCURVE",
"444 844 OFFCURVE",
"552 870 OFFCURVE",
"627 870 QCURVE SMOOTH",
"674 870 OFFCURVE",
"760 865 OFFCURVE",
"794 863 QCURVE SMOOTH",
"834 859 OFFCURVE",
"868 856 QCURVE",
"868 1020 LINE",
"847 1030 OFFCURVE",
"820 1039 QCURVE SMOOTH",
"797 1047 OFFCURVE",
"729 1063 OFFCURVE",
"686 1070 QCURVE",
"686 1270 LINE",
"450 1270 LINE",
"450 1069 LINE",
"373 1055 OFFCURVE",
"243 979 OFFCURVE",
"148 847 OFFCURVE",
"94 657 OFFCURVE",
"94 528 QCURVE SMOOTH",
"94 391 OFFCURVE",
"148 197 OFFCURVE",
"243 67 OFFCURVE",
"373 -5 OFFCURVE",
"450 -18 QCURVE",
"450 -18 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01245 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01229 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 29 22 29 38 29 54 29 70 29 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 965;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = currency;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"221 -113 LINE",
"406 73 LINE",
"509 20 OFFCURVE",
"663 20 QCURVE SMOOTH",
"819 20 OFFCURVE",
"923 73 QCURVE",
"1110 -113 LINE",
"1286 63 LINE",
"1091 257 LINE",
"1134 361 OFFCURVE",
"1134 510 QCURVE SMOOTH",
"1134 656 OFFCURVE",
"1091 758 QCURVE",
"1286 952 LINE",
"1110 1128 LINE",
"922 941 LINE",
"818 993 OFFCURVE",
"663 993 QCURVE SMOOTH",
"585 993 OFFCURVE",
"459 967 OFFCURVE",
"408 942 QCURVE",
"221 1128 LINE",
"45 952 LINE",
"239 759 LINE",
"217 707 OFFCURVE",
"196 582 OFFCURVE",
"196 510 QCURVE SMOOTH",
"196 361 OFFCURVE",
"239 257 QCURVE",
"45 63 LINE"
);
},
{
closed = 1;
nodes = (
"459 683 OFFCURVE",
"508 755 OFFCURVE",
"594 793 OFFCURVE",
"663 793 QCURVE SMOOTH",
"732 793 OFFCURVE",
"819 755 OFFCURVE",
"867 683 OFFCURVE",
"884 577 OFFCURVE",
"884 510 QCURVE SMOOTH",
"884 441 OFFCURVE",
"867 334 OFFCURVE",
"819 261 OFFCURVE",
"732 223 OFFCURVE",
"663 223 QCURVE SMOOTH",
"594 223 OFFCURVE",
"508 261 OFFCURVE",
"459 334 OFFCURVE",
"442 441 OFFCURVE",
"442 510 QCURVE SMOOTH",
"442 577 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 40 25 40 41 40 57 40 73 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 30 22 30 38 30 54 30 70 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01235 5 25 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01211 1 45 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1331;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = dollar;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"146 20 OFFCURVE",
"192 7 QCURVE SMOOTH",
"230 -4 OFFCURVE",
"357 -26 OFFCURVE",
"451 -29 QCURVE",
"451 -205 LINE",
"686 -205 LINE",
"686 -22 LINE",
"784 -10 OFFCURVE",
"910 52 OFFCURVE",
"982 155 OFFCURVE",
"1010 301 OFFCURVE",
"1010 398 QCURVE SMOOTH",
"1010 471 OFFCURVE",
"998 583 OFFCURVE",
"972 666 OFFCURVE",
"929 726 OFFCURVE",
"869 771 OFFCURVE",
"788 804 OFFCURVE",
"736 819 QCURVE SMOOTH",
"465 897 LINE SMOOTH",
"425 909 OFFCURVE",
"378 937 OFFCURVE",
"353 975 OFFCURVE",
"346 1025 OFFCURVE",
"346 1057 QCURVE SMOOTH",
"346 1115 OFFCURVE",
"372 1185 OFFCURVE",
"438 1223 OFFCURVE",
"552 1235 OFFCURVE",
"641 1235 QCURVE SMOOTH",
"698 1235 OFFCURVE",
"805 1228 OFFCURVE",
"848 1223 QCURVE SMOOTH",
"898 1218 OFFCURVE",
"943 1212 QCURVE",
"943 1397 LINE",
"913 1407 OFFCURVE",
"873 1417 QCURVE SMOOTH",
"839 1425 OFFCURVE",
"744 1443 OFFCURVE",
"686 1449 QCURVE",
"686 1632 LINE",
"451 1632 LINE",
"451 1449 LINE",
"372 1438 OFFCURVE",
"245 1378 OFFCURVE",
"156 1279 OFFCURVE",
"108 1139 OFFCURVE",
"108 1047 QCURVE SMOOTH",
"108 957 OFFCURVE",
"135 824 OFFCURVE",
"194 730 OFFCURVE",
"290 669 OFFCURVE",
"359 651 QCURVE SMOOTH",
"650 575 LINE SMOOTH",
"692 564 OFFCURVE",
"740 529 OFFCURVE",
"766 481 OFFCURVE",
"773 420 OFFCURVE",
"773 383 QCURVE SMOOTH",
"773 336 OFFCURVE",
"756 264 OFFCURVE",
"696 215 OFFCURVE",
"582 190 OFFCURVE",
"485 190 QCURVE SMOOTH",
"412 190 OFFCURVE",
"281 196 OFFCURVE",
"230 201 QCURVE SMOOTH",
"171 206 OFFCURVE",
"120 213 QCURVE",
"120 37 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01229 13 26 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01245 13 21 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01258 13 10 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\01254 45 70 45 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 7 values pushed */\0126 45 22 45 38 45 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01263 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01266 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = euro;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"233 466 LINE",
"259 317 OFFCURVE",
"368 125 OFFCURVE",
"513 13 OFFCURVE",
"685 -31 OFFCURVE",
"774 -31 QCURVE SMOOTH",
"874 -31 OFFCURVE",
"1026 -10 OFFCURVE",
"1078 3 QCURVE SMOOTH",
"1139 18 OFFCURVE",
"1182 37 QCURVE",
"1182 219 LINE",
"1146 211 OFFCURVE",
"1101 206 QCURVE SMOOTH",
"1062 201 OFFCURVE",
"955 193 OFFCURVE",
"889 193 QCURVE SMOOTH",
"817 193 OFFCURVE",
"690 208 OFFCURVE",
"587 263 OFFCURVE",
"511 372 OFFCURVE",
"490 466 QCURVE",
"1032 466 LINE",
"1032 641 LINE",
"469 641 LINE",
"467 661 OFFCURVE",
"467 704 OFFCURVE",
"467 727 QCURVE SMOOTH",
"467 778 OFFCURVE",
"470 825 QCURVE",
"1032 825 LINE",
"1032 999 LINE",
"496 999 LINE",
"518 1080 OFFCURVE",
"593 1173 OFFCURVE",
"692 1220 OFFCURVE",
"815 1233 OFFCURVE",
"885 1233 QCURVE SMOOTH",
"940 1233 OFFCURVE",
"1044 1224 OFFCURVE",
"1084 1219 QCURVE SMOOTH",
"1131 1213 OFFCURVE",
"1172 1206 QCURVE",
"1172 1386 LINE",
"1137 1405 OFFCURVE",
"1083 1421 QCURVE SMOOTH",
"1037 1434 OFFCURVE",
"895 1456 OFFCURVE",
"795 1456 QCURVE SMOOTH",
"740 1456 OFFCURVE",
"626 1439 OFFCURVE",
"516 1398 OFFCURVE",
"414 1330 OFFCURVE",
"328 1228 OFFCURVE",
"260 1090 OFFCURVE",
"240 999 QCURVE",
"72 999 LINE",
"72 825 LINE",
"216 825 LINE",
"213 777 OFFCURVE",
"213 725 QCURVE SMOOTH",
"213 703 OFFCURVE",
"214 661 OFFCURVE",
"215 641 QCURVE",
"72 641 LINE",
"72 466 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01237 11 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 37 22 37 38 37 54 37 70 37 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01259 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01241 4 42 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0129 7 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01224 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 5 values pushed */\01240 24 56 24 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\0128 24 24 24 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01272 24 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01248 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 48 23 48 39 48 55 48 71 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1237;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = florin;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"369 -340 LINE",
"466 856 LINE",
"736 854 LINE",
"750 1051 LINE",
"480 1053 LINE",
"494 1239 LINE SMOOTH",
"497 1272 OFFCURVE",
"513 1318 OFFCURVE",
"548 1347 OFFCURVE",
"605 1359 OFFCURVE",
"649 1359 QCURVE SMOOTH",
"685 1358 OFFCURVE",
"753 1356 OFFCURVE",
"779 1354 QCURVE SMOOTH",
"810 1352 OFFCURVE",
"837 1349 QCURVE",
"850 1525 LINE",
"818 1536 OFFCURVE",
"777 1545 QCURVE SMOOTH",
"742 1553 OFFCURVE",
"643 1566 OFFCURVE",
"581 1567 QCURVE SMOOTH",
"498 1568 OFFCURVE",
"380 1524 OFFCURVE",
"303 1438 OFFCURVE",
"263 1312 OFFCURVE",
"257 1231 QCURVE SMOOTH",
"243 1055 LINE",
"95 1057 LINE",
"81 860 LINE",
"229 858 LINE",
"132 -339 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 5 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 775;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = sterling;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1116 0 LINE",
"1116 219 LINE",
"414 219 LINE",
"414 229 LINE",
"446 248 OFFCURVE",
"484 319 OFFCURVE",
"503 406 OFFCURVE",
"508 502 OFFCURVE",
"508 547 QCURVE SMOOTH",
"508 623 LINE",
"946 623 LINE",
"946 823 LINE",
"508 823 LINE",
"508 1024 LINE SMOOTH",
"508 1091 OFFCURVE",
"524 1172 OFFCURVE",
"579 1216 OFFCURVE",
"683 1229 OFFCURVE",
"770 1229 QCURVE SMOOTH",
"849 1229 OFFCURVE",
"977 1223 OFFCURVE",
"1022 1219 QCURVE SMOOTH",
"1075 1215 OFFCURVE",
"1116 1210 QCURVE",
"1116 1386 LINE",
"1070 1402 OFFCURVE",
"1012 1415 QCURVE SMOOTH",
"962 1426 OFFCURVE",
"826 1444 OFFCURVE",
"741 1444 QCURVE SMOOTH",
"637 1444 OFFCURVE",
"487 1418 OFFCURVE",
"382 1367 OFFCURVE",
"318 1293 OFFCURVE",
"282 1198 OFFCURVE",
"270 1084 OFFCURVE",
"270 1018 QCURVE SMOOTH",
"270 823 LINE",
"100 823 LINE",
"100 623 LINE",
"270 623 LINE",
"270 467 LINE SMOOTH",
"270 411 OFFCURVE",
"253 325 OFFCURVE",
"219 259 OFFCURVE",
"166 211 OFFCURVE",
"129 193 QCURVE",
"129 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01244 15 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0126 0 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01238 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01246 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 25 24 25 40 25 56 25 72 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1189;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = yen;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"481 182 LINE",
"481 0 LINE",
"721 0 LINE",
"721 182 LINE",
"1020 182 LINE",
"1020 350 LINE",
"721 350 LINE",
"721 489 LINE",
"1020 489 LINE",
"1020 657 LINE",
"754 657 LINE",
"1184 1427 LINE",
"918 1427 LINE",
"600 829 LINE",
"596 829 LINE",
"276 1427 LINE",
"10 1427 LINE",
"446 657 LINE",
"174 657 LINE",
"174 489 LINE",
"481 489 LINE",
"481 350 LINE",
"174 350 LINE",
"174 182 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01216 12 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0129 1 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 7 2 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0129 20 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1194;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = plus;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"623 188 LINE",
"623 565 LINE",
"967 565 LINE",
"967 764 LINE",
"621 764 LINE",
"621 1141 LINE",
"399 1141 LINE",
"399 764 LINE",
"51 764 LINE",
"51 561 LINE",
"401 561 LINE",
"401 188 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 10 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0127 1 8 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1018;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"752 537 LINE",
"752 764 LINE",
"60 764 LINE",
"60 537 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 812;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = multiply;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"496 518 LINE",
"813 193 LINE",
"959 336 LINE",
"639 666 LINE",
"953 989 LINE",
"815 1128 LINE",
"504 807 LINE",
"191 1130 LINE",
"45 987 LINE",
"361 659 LINE",
"47 334 LINE",
"185 197 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0123 9 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1004;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = divide;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"663 863 OFFCURVE",
"697 897 OFFCURVE",
"710 955 OFFCURVE",
"710 999 QCURVE SMOOTH",
"710 1043 OFFCURVE",
"697 1100 OFFCURVE",
"663 1134 OFFCURVE",
"606 1147 OFFCURVE",
"562 1147 QCURVE SMOOTH",
"517 1147 OFFCURVE",
"460 1134 OFFCURVE",
"426 1100 OFFCURVE",
"413 1043 OFFCURVE",
"413 999 QCURVE SMOOTH",
"413 955 OFFCURVE",
"426 897 OFFCURVE",
"460 863 OFFCURVE",
"517 850 OFFCURVE",
"562 850 QCURVE SMOOTH",
"606 850 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1064 539 LINE",
"1064 733 LINE",
"60 733 LINE",
"60 539 LINE"
);
},
{
closed = 1;
nodes = (
"426 172 OFFCURVE",
"460 138 OFFCURVE",
"517 125 OFFCURVE",
"562 125 QCURVE SMOOTH",
"606 125 OFFCURVE",
"663 138 OFFCURVE",
"697 172 OFFCURVE",
"710 228 OFFCURVE",
"710 272 QCURVE SMOOTH",
"710 317 OFFCURVE",
"697 375 OFFCURVE",
"663 409 OFFCURVE",
"606 422 OFFCURVE",
"562 422 QCURVE SMOOTH",
"517 422 OFFCURVE",
"460 409 OFFCURVE",
"426 375 OFFCURVE",
"413 317 OFFCURVE",
"413 272 QCURVE SMOOTH",
"413 228 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 15 22 15 38 15 54 15 70 15 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01229 9 39 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01221 8 22 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1124;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"971 729 LINE",
"971 934 LINE",
"60 934 LINE",
"60 729 LINE"
);
},
{
closed = 1;
nodes = (
"971 307 LINE",
"971 514 LINE",
"60 514 LINE",
"60 307 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 5 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0121 5 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1031;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"369 0 LINE",
"498 307 LINE",
"992 307 LINE",
"992 506 LINE",
"581 506 LINE",
"678 737 LINE",
"992 737 LINE",
"992 934 LINE",
"761 934 LINE",
"890 1241 LINE",
"691 1241 LINE",
"562 934 LINE",
"70 934 LINE",
"70 737 LINE",
"480 737 LINE",
"383 506 LINE",
"70 506 LINE",
"70 307 LINE",
"299 307 LINE",
"171 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 1 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0127 8 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1062;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = greater;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"897 762 LINE",
"82 1126 LINE",
"82 858 LINE",
"702 606 LINE",
"702 590 LINE",
"82 338 LINE",
"82 68 LINE",
"897 426 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0125 0 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 969;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"887 59 LINE",
"887 330 LINE",
"266 582 LINE",
"266 598 LINE",
"887 850 LINE",
"887 1118 LINE",
"72 754 LINE",
"72 418 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 16 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 6 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 969;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"915 903 LINE",
"100 1282 LINE",
"100 1014 LINE",
"717 758 LINE",
"717 750 LINE",
"100 479 LINE",
"100 225 LINE",
"915 596 LINE"
);
},
{
closed = 1;
nodes = (
"903 221 LINE",
"100 221 LINE",
"100 0 LINE",
"903 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1005;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"905 225 LINE",
"905 479 LINE",
"289 750 LINE",
"289 758 LINE",
"905 1014 LINE",
"905 1282 LINE",
"90 903 LINE",
"90 596 LINE"
);
},
{
closed = 1;
nodes = (
"905 0 LINE",
"905 221 LINE",
"102 221 LINE",
"102 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 16 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1005;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"626 270 LINE",
"626 616 LINE",
"970 616 LINE",
"970 817 LINE",
"624 817 LINE",
"624 1194 LINE",
"403 1194 LINE",
"403 817 LINE",
"55 817 LINE",
"55 614 LINE",
"405 614 LINE",
"405 270 LINE"
);
},
{
closed = 1;
nodes = (
"970 0 LINE",
"970 193 LINE",
"55 193 LINE",
"55 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 10 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 5 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1025;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
layers = (
{
components = (
{
name = asciitilde;
transform = "{1, 0, 0, 0.95001, 0, 286}";
},
{
name = asciitilde;
transform = "{1, 0, 0, 0.95001, 0, -133}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1382;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"202 362 LINE",
"230 441 OFFCURVE",
"320 517 OFFCURVE",
"386 520 QCURVE SMOOTH",
"429 523 OFFCURVE",
"520 494 OFFCURVE",
"615 447 OFFCURVE",
"716 391 OFFCURVE",
"823 345 OFFCURVE",
"937 318 OFFCURVE",
"998 322 QCURVE SMOOTH",
"1073 326 OFFCURVE",
"1191 379 OFFCURVE",
"1274 469 OFFCURVE",
"1319 592 OFFCURVE",
"1322 666 QCURVE",
"1181 707 LINE",
"1161 667 OFFCURVE",
"1123 609 OFFCURVE",
"1080 570 OFFCURVE",
"1029 550 OFFCURVE",
"996 549 QCURVE SMOOTH",
"963 547 OFFCURVE",
"872 577 OFFCURVE",
"768 625 OFFCURVE",
"654 681 OFFCURVE",
"540 728 OFFCURVE",
"431 757 OFFCURVE",
"384 754 QCURVE SMOOTH",
"309 750 OFFCURVE",
"191 695 OFFCURVE",
"109 602 OFFCURVE",
"63 477 OFFCURVE",
"60 403 QCURVE",
"60 403 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01212 3 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 3 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1382;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = logicalnot;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"843 653 LINE",
"843 315 LINE",
"1081 315 LINE",
"1081 866 LINE",
"40 866 LINE",
"40 653 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0122 13 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1146;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"281 647 LINE",
"477 1237 LINE",
"489 1237 LINE",
"690 647 LINE",
"950 647 LINE",
"655 1427 LINE",
"315 1427 LINE",
"20 647 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0124 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 970;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"748 308 OFFCURVE",
"815 345 OFFCURVE",
"865 391 OFFCURVE",
"899 435 OFFCURVE",
"916 473 OFFCURVE",
"918 483 QCURVE",
"922 483 LINE",
"923 473 OFFCURVE",
"940 436 OFFCURVE",
"974 392 OFFCURVE",
"1026 347 OFFCURVE",
"1102 310 OFFCURVE",
"1203 287 OFFCURVE",
"1267 287 QCURVE SMOOTH",
"1401 287 OFFCURVE",
"1573 355 OFFCURVE",
"1673 478 OFFCURVE",
"1712 651 OFFCURVE",
"1712 756 QCURVE SMOOTH",
"1712 861 OFFCURVE",
"1665 1033 OFFCURVE",
"1559 1156 OFFCURVE",
"1390 1223 OFFCURVE",
"1267 1223 QCURVE SMOOTH",
"1216 1223 OFFCURVE",
"1132 1199 OFFCURVE",
"1065 1162 OFFCURVE",
"1015 1116 OFFCURVE",
"981 1072 OFFCURVE",
"963 1034 OFFCURVE",
"962 1024 QCURVE",
"958 1024 LINE",
"956 1034 OFFCURVE",
"940 1071 OFFCURVE",
"906 1115 OFFCURVE",
"854 1160 OFFCURVE",
"778 1197 OFFCURVE",
"677 1220 OFFCURVE",
"613 1220 QCURVE SMOOTH",
"479 1220 OFFCURVE",
"307 1152 OFFCURVE",
"207 1029 OFFCURVE",
"168 856 OFFCURVE",
"168 751 QCURVE SMOOTH",
"168 646 OFFCURVE",
"215 474 OFFCURVE",
"321 351 OFFCURVE",
"490 284 OFFCURVE",
"613 284 QCURVE SMOOTH",
"664 284 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1066 910 OFFCURVE",
"1111 980 OFFCURVE",
"1196 1019 OFFCURVE",
"1267 1019 QCURVE SMOOTH",
"1327 1019 OFFCURVE",
"1411 980 OFFCURVE",
"1462 910 OFFCURVE",
"1485 813 OFFCURVE",
"1485 754 QCURVE SMOOTH",
"1485 695 OFFCURVE",
"1471 600 OFFCURVE",
"1425 534 OFFCURVE",
"1339 498 OFFCURVE",
"1267 498 QCURVE SMOOTH",
"1219 498 OFFCURVE",
"1151 529 OFFCURVE",
"1103 578 OFFCURVE",
"1074 638 OFFCURVE",
"1057 695 OFFCURVE",
"1052 742 OFFCURVE",
"1052 754 QCURVE SMOOTH",
"1052 813 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"469 534 OFFCURVE",
"418 600 OFFCURVE",
"395 694 OFFCURVE",
"395 753 QCURVE SMOOTH",
"395 812 OFFCURVE",
"409 910 OFFCURVE",
"455 980 OFFCURVE",
"541 1019 OFFCURVE",
"613 1019 QCURVE SMOOTH",
"660 1019 OFFCURVE",
"729 986 OFFCURVE",
"777 935 OFFCURVE",
"806 872 OFFCURVE",
"823 813 OFFCURVE",
"828 765 OFFCURVE",
"828 753 QCURVE SMOOTH",
"828 694 OFFCURVE",
"814 600 OFFCURVE",
"769 534 OFFCURVE",
"684 498 OFFCURVE",
"613 498 QCURVE SMOOTH",
"553 498 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01277 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\012143 77 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01280 77 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01232 77 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01262 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\012143 62 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01232 62 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01280 62 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01218 77 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 2 values pushed */\01230 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01243 77 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01250 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01289 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01272 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01225 5 67 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01284 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01243 0 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1881;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = integral;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"65 -482 LINE",
"95 -490 OFFCURVE",
"163 -500 OFFCURVE",
"182 -500 QCURVE SMOOTH",
"261 -500 OFFCURVE",
"373 -470 OFFCURVE",
"447 -418 OFFCURVE",
"490 -347 OFFCURVE",
"512 -265 OFFCURVE",
"517 -176 OFFCURVE",
"517 -132 QCURVE SMOOTH",
"517 1141 LINE",
"514 1159 OFFCURVE",
"514 1174 QCURVE SMOOTH",
"514 1224 OFFCURVE",
"562 1282 OFFCURVE",
"636 1312 OFFCURVE",
"725 1321 OFFCURVE",
"766 1321 QCURVE",
"766 1472 LINE",
"737 1478 OFFCURVE",
"679 1483 OFFCURVE",
"656 1483 QCURVE SMOOTH",
"574 1483 OFFCURVE",
"460 1453 OFFCURVE",
"383 1401 OFFCURVE",
"339 1330 OFFCURVE",
"317 1248 OFFCURVE",
"311 1159 OFFCURVE",
"311 1115 QCURVE SMOOTH",
"311 -158 LINE SMOOTH",
"311 -221 OFFCURVE",
"274 -290 OFFCURVE",
"209 -322 OFFCURVE",
"119 -327 OFFCURVE",
"65 -327 QCURVE",
"65 -327 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01225 10 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01213 7 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 852;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = product;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"565 -328 LINE",
"565 1169 LINE",
"1109 1169 LINE",
"1109 -328 LINE",
"1347 -328 LINE",
"1347 1169 LINE",
"1482 1169 LINE",
"1482 1380 LINE",
"192 1380 LINE",
"192 1169 LINE",
"327 1169 LINE",
"327 -328 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0126 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0129 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0122 5 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1706;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"63 -328 LINE",
"1094 -328 LINE",
"1094 -140 LINE",
"373 -140 LINE",
"835 511 LINE",
"373 1161 LINE",
"1094 1161 LINE",
"1094 1349 LINE",
"63 1349 LINE",
"63 1214 LINE",
"569 511 LINE",
"63 -193 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0128 4 9 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0123 4 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1196;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = radical;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"283 647 LINE",
"638 -196 LINE",
"828 -196 LINE",
"1370 1482 LINE",
"1132 1482 LINE",
"729 116 LINE",
"455 857 LINE",
"61 857 LINE",
"61 647 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 5 7 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1361;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = micro;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"421 3 OFFCURVE",
"511 -20 OFFCURVE",
"571 -20 QCURVE SMOOTH",
"628 -20 OFFCURVE",
"727 11 OFFCURVE",
"803 51 OFFCURVE",
"853 88 OFFCURVE",
"861 95 QCURVE",
"879 32 OFFCURVE",
"960 -31 OFFCURVE",
"1032 -31 QCURVE SMOOTH",
"1072 -31 OFFCURVE",
"1150 -17 OFFCURVE",
"1180 -9 QCURVE SMOOTH",
"1215 1 OFFCURVE",
"1247 14 QCURVE",
"1247 158 LINE",
"1237 156 OFFCURVE",
"1220 155 QCURVE SMOOTH",
"1191 152 OFFCURVE",
"1128 152 QCURVE SMOOTH",
"1111 152 OFFCURVE",
"1087 162 OFFCURVE",
"1072 187 OFFCURVE",
"1065 229 OFFCURVE",
"1065 262 QCURVE SMOOTH",
"1065 1055 LINE",
"831 1055 LINE",
"831 227 LINE",
"801 214 OFFCURVE",
"764 203 QCURVE SMOOTH",
"732 194 OFFCURVE",
"645 180 OFFCURVE",
"594 180 QCURVE SMOOTH",
"524 180 OFFCURVE",
"442 213 OFFCURVE",
"399 283 OFFCURVE",
"387 390 OFFCURVE",
"387 465 QCURVE SMOOTH",
"387 1055 LINE",
"166 1055 LINE",
"166 -485 LINE",
"387 -485 LINE",
"387 24 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0120 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01217 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01235 14 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01240 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 9 23 9 39 9 55 9 71 9 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 22 23 22 39 22 55 22 71 22 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01235 32 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01243 32 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1298;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = partialdiff;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"154 169 OFFCURVE",
"272 48 OFFCURVE",
"456 -15 OFFCURVE",
"584 -15 QCURVE SMOOTH",
"674 -15 OFFCURVE",
"804 19 OFFCURVE",
"900 84 OFFCURVE",
"971 178 OFFCURVE",
"1001 237 QCURVE SMOOTH",
"1046 325 OFFCURVE",
"1084 545 OFFCURVE",
"1084 674 QCURVE SMOOTH",
"1084 730 OFFCURVE",
"1070 874 OFFCURVE",
"1025 1024 OFFCURVE",
"943 1168 OFFCURVE",
"805 1280 OFFCURVE",
"604 1349 OFFCURVE",
"464 1349 QCURVE SMOOTH",
"444 1349 OFFCURVE",
"387 1346 OFFCURVE",
"323 1340 OFFCURVE",
"257 1332 OFFCURVE",
"230 1328 QCURVE",
"230 1108 LINE",
"248 1114 OFFCURVE",
"312 1127 OFFCURVE",
"381 1139 OFFCURVE",
"445 1147 OFFCURVE",
"464 1147 QCURVE SMOOTH",
"567 1147 OFFCURVE",
"717 1087 OFFCURVE",
"817 990 OFFCURVE",
"872 865 OFFCURVE",
"880 801 QCURVE",
"866 819 OFFCURVE",
"816 864 OFFCURVE",
"738 903 OFFCURVE",
"632 930 OFFCURVE",
"563 930 QCURVE SMOOTH",
"443 930 OFFCURVE",
"268 868 OFFCURVE",
"153 749 OFFCURVE",
"97 574 OFFCURVE",
"97 461 QCURVE SMOOTH",
"97 347 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"340 615 OFFCURVE",
"386 690 OFFCURVE",
"480 735 OFFCURVE",
"562 735 QCURVE SMOOTH",
"645 735 OFFCURVE",
"757 695 OFFCURVE",
"824 623 OFFCURVE",
"853 522 OFFCURVE",
"853 461 QCURVE SMOOTH",
"853 444 OFFCURVE",
"850 388 OFFCURVE",
"835 323 OFFCURVE",
"803 258 OFFCURVE",
"746 205 OFFCURVE",
"658 171 OFFCURVE",
"595 171 QCURVE SMOOTH",
"509 171 OFFCURVE",
"405 221 OFFCURVE",
"347 302 OFFCURVE",
"328 406 OFFCURVE",
"328 461 QCURVE SMOOTH",
"328 516 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 58 25 58 41 58 57 58 73 58 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01233 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01210 58 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01246 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 46 22 46 38 46 54 46 70 46 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 0 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01269 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01226 5 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 63 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01210 63 5 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01251 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 51 23 51 39 51 55 51 71 51 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1194;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = percent;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"405 0 LINE",
"1357 1554 LINE",
"1134 1554 LINE",
"184 0 LINE"
);
},
{
closed = 1;
nodes = (
"578 873 OFFCURVE",
"662 956 OFFCURVE",
"708 1093 OFFCURVE",
"708 1196 QCURVE SMOOTH",
"708 1300 OFFCURVE",
"662 1438 OFFCURVE",
"578 1520 OFFCURVE",
"459 1554 OFFCURVE",
"386 1554 QCURVE SMOOTH",
"312 1554 OFFCURVE",
"194 1520 OFFCURVE",
"110 1438 OFFCURVE",
"65 1300 OFFCURVE",
"65 1196 QCURVE SMOOTH",
"65 1093 OFFCURVE",
"110 956 OFFCURVE",
"194 873 OFFCURVE",
"312 838 OFFCURVE",
"386 838 QCURVE SMOOTH",
"459 838 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"306 1037 OFFCURVE",
"274 1076 OFFCURVE",
"259 1143 OFFCURVE",
"259 1196 QCURVE SMOOTH",
"259 1249 OFFCURVE",
"274 1316 OFFCURVE",
"306 1355 OFFCURVE",
"354 1370 OFFCURVE",
"386 1370 QCURVE SMOOTH",
"420 1370 OFFCURVE",
"468 1355 OFFCURVE",
"499 1316 OFFCURVE",
"513 1249 OFFCURVE",
"513 1196 QCURVE SMOOTH",
"513 1143 OFFCURVE",
"499 1076 OFFCURVE",
"468 1037 OFFCURVE",
"420 1022 OFFCURVE",
"386 1022 QCURVE SMOOTH",
"354 1022 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"868 86 OFFCURVE",
"952 3 OFFCURVE",
"1071 -31 OFFCURVE",
"1144 -31 QCURVE SMOOTH",
"1218 -31 OFFCURVE",
"1338 3 OFFCURVE",
"1422 86 OFFCURVE",
"1468 224 OFFCURVE",
"1468 328 QCURVE SMOOTH",
"1468 431 OFFCURVE",
"1422 568 OFFCURVE",
"1338 651 OFFCURVE",
"1218 686 OFFCURVE",
"1144 686 QCURVE SMOOTH",
"1071 686 OFFCURVE",
"952 651 OFFCURVE",
"868 568 OFFCURVE",
"822 431 OFFCURVE",
"822 328 QCURVE SMOOTH",
"822 224 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1031 448 OFFCURVE",
"1062 487 OFFCURVE",
"1110 502 OFFCURVE",
"1144 502 QCURVE SMOOTH",
"1178 502 OFFCURVE",
"1226 487 OFFCURVE",
"1257 448 OFFCURVE",
"1271 381 OFFCURVE",
"1271 328 QCURVE SMOOTH",
"1271 275 OFFCURVE",
"1257 207 OFFCURVE",
"1226 168 OFFCURVE",
"1178 154 OFFCURVE",
"1144 154 QCURVE SMOOTH",
"1110 154 OFFCURVE",
"1062 168 OFFCURVE",
"1031 207 OFFCURVE",
"1017 275 OFFCURVE",
"1017 328 QCURVE SMOOTH",
"1017 381 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01239 16 9 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01219 16 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01264 16 44 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01254 16 74 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 74 25 74 41 74 57 74 73 74 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0121 74 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 7 values pushed */\0126 39 22 39 38 39 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\01254 39 70 39 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0123 9 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 19 22 19 38 19 54 19 70 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 44 25 44 41 44 57 44 73 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01285 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01259 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01214 4 34 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01249 4 79 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01224 4 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01269 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 69 23 69 39 69 55 69 71 69 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0123 59 69 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1526;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"406 0 LINE",
"1358 1554 LINE",
"1135 1554 LINE",
"185 0 LINE"
);
},
{
closed = 1;
nodes = (
"579 873 OFFCURVE",
"663 956 OFFCURVE",
"709 1093 OFFCURVE",
"709 1196 QCURVE SMOOTH",
"709 1300 OFFCURVE",
"663 1438 OFFCURVE",
"579 1520 OFFCURVE",
"460 1554 OFFCURVE",
"387 1554 QCURVE SMOOTH",
"313 1554 OFFCURVE",
"194 1520 OFFCURVE",
"110 1438 OFFCURVE",
"65 1300 OFFCURVE",
"65 1196 QCURVE SMOOTH",
"65 1093 OFFCURVE",
"110 956 OFFCURVE",
"194 873 OFFCURVE",
"313 838 OFFCURVE",
"387 838 QCURVE SMOOTH",
"460 838 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"307 1037 OFFCURVE",
"275 1076 OFFCURVE",
"260 1143 OFFCURVE",
"260 1196 QCURVE SMOOTH",
"260 1249 OFFCURVE",
"275 1316 OFFCURVE",
"307 1355 OFFCURVE",
"355 1370 OFFCURVE",
"387 1370 QCURVE SMOOTH",
"421 1370 OFFCURVE",
"469 1355 OFFCURVE",
"500 1316 OFFCURVE",
"514 1249 OFFCURVE",
"514 1196 QCURVE SMOOTH",
"514 1143 OFFCURVE",
"500 1076 OFFCURVE",
"469 1037 OFFCURVE",
"421 1022 OFFCURVE",
"387 1022 QCURVE SMOOTH",
"355 1022 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1617 86 OFFCURVE",
"1701 3 OFFCURVE",
"1819 -31 OFFCURVE",
"1892 -31 QCURVE SMOOTH",
"1966 -31 OFFCURVE",
"2086 3 OFFCURVE",
"2170 86 OFFCURVE",
"2216 224 OFFCURVE",
"2216 328 QCURVE SMOOTH",
"2216 431 OFFCURVE",
"2170 568 OFFCURVE",
"2086 651 OFFCURVE",
"1966 686 OFFCURVE",
"1892 686 QCURVE SMOOTH",
"1819 686 OFFCURVE",
"1701 651 OFFCURVE",
"1617 568 OFFCURVE",
"1571 431 OFFCURVE",
"1571 328 QCURVE SMOOTH",
"1571 224 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"869 86 OFFCURVE",
"953 3 OFFCURVE",
"1072 -31 OFFCURVE",
"1145 -31 QCURVE SMOOTH",
"1218 -31 OFFCURVE",
"1338 3 OFFCURVE",
"1422 86 OFFCURVE",
"1468 224 OFFCURVE",
"1468 328 QCURVE SMOOTH",
"1468 431 OFFCURVE",
"1422 568 OFFCURVE",
"1338 651 OFFCURVE",
"1218 686 OFFCURVE",
"1145 686 QCURVE SMOOTH",
"1072 686 OFFCURVE",
"953 651 OFFCURVE",
"869 568 OFFCURVE",
"823 431 OFFCURVE",
"823 328 QCURVE SMOOTH",
"823 224 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1779 448 OFFCURVE",
"1810 487 OFFCURVE",
"1858 502 OFFCURVE",
"1892 502 QCURVE SMOOTH",
"1926 502 OFFCURVE",
"1974 487 OFFCURVE",
"2005 448 OFFCURVE",
"2019 381 OFFCURVE",
"2019 328 QCURVE SMOOTH",
"2019 275 OFFCURVE",
"2005 207 OFFCURVE",
"1974 168 OFFCURVE",
"1926 154 OFFCURVE",
"1892 154 QCURVE SMOOTH",
"1858 154 OFFCURVE",
"1810 168 OFFCURVE",
"1779 207 OFFCURVE",
"1765 275 OFFCURVE",
"1765 328 QCURVE SMOOTH",
"1765 381 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"1032 448 OFFCURVE",
"1063 487 OFFCURVE",
"1111 502 OFFCURVE",
"1145 502 QCURVE SMOOTH",
"1179 502 OFFCURVE",
"1227 487 OFFCURVE",
"1258 448 OFFCURVE",
"1272 381 OFFCURVE",
"1272 328 QCURVE SMOOTH",
"1272 275 OFFCURVE",
"1258 207 OFFCURVE",
"1227 168 OFFCURVE",
"1179 154 OFFCURVE",
"1145 154 QCURVE SMOOTH",
"1111 154 OFFCURVE",
"1063 168 OFFCURVE",
"1032 207 OFFCURVE",
"1018 275 OFFCURVE",
"1018 328 QCURVE SMOOTH",
"1018 381 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01239 16 9 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01219 16 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\012104 16 64 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01274 16 114 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01284 16 44 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01254 16 94 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 114 25 114 41 114 57 114 73 114 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0121 114 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 39 22 39 38 39 54 39 70 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0123 9 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 19 22 19 38 19 54 19 70 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 44 25 44 41 44 57 44 73 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 94 25 94 41 94 57 94 73 94 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\01254 104 70 104 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 7 values pushed */\0126 104 22 104 38 104 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012125 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01259 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01279 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01214 4 34 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01249 4 99 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01224 4 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01289 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 89 23 89 39 89 55 89 71 89 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0123 59 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012119 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 2257;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = lozenge;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"658 0 LINE",
"1108 681 LINE",
"658 1360 LINE",
"538 1360 LINE",
"88 680 LINE",
"538 0 LINE"
);
},
{
closed = 1;
nodes = (
"298 680 LINE",
"598 1145 LINE",
"898 681 LINE",
"598 215 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1196;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = at;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"219 245 OFFCURVE",
"408 54 OFFCURVE",
"691 -31 OFFCURVE",
"882 -31 QCURVE SMOOTH",
"1025 -31 OFFCURVE",
"1236 -5 OFFCURVE",
"1307 11 QCURVE SMOOTH",
"1390 29 OFFCURVE",
"1447 53 QCURVE",
"1447 221 LINE",
"1398 203 OFFCURVE",
"1320 190 QCURVE SMOOTH",
"1253 179 OFFCURVE",
"1039 160 OFFCURVE",
"882 160 QCURVE SMOOTH",
"721 160 OFFCURVE",
"506 231 OFFCURVE",
"376 380 OFFCURVE",
"321 611 OFFCURVE",
"321 772 QCURVE SMOOTH",
"321 926 OFFCURVE",
"379 1150 OFFCURVE",
"511 1295 OFFCURVE",
"725 1364 OFFCURVE",
"882 1364 QCURVE SMOOTH",
"1003 1364 OFFCURVE",
"1174 1333 OFFCURVE",
"1289 1270 OFFCURVE",
"1356 1173 OFFCURVE",
"1391 1042 OFFCURVE",
"1400 875 OFFCURVE",
"1400 772 QCURVE SMOOTH",
"1400 688 OFFCURVE",
"1382 580 OFFCURVE",
"1338 518 OFFCURVE",
"1265 494 OFFCURVE",
"1210 494 QCURVE",
"1210 1174 LINE",
"1044 1174 LINE",
"1019 1112 LINE",
"983 1133 OFFCURVE",
"941 1150 QCURVE SMOOTH",
"905 1164 OFFCURVE",
"811 1188 OFFCURVE",
"759 1188 QCURVE SMOOTH",
"616 1188 OFFCURVE",
"472 977 OFFCURVE",
"472 756 QCURVE SMOOTH",
"472 535 OFFCURVE",
"616 324 OFFCURVE",
"759 324 QCURVE SMOOTH",
"797 324 OFFCURVE",
"868 343 OFFCURVE",
"933 372 OFFCURVE",
"990 405 OFFCURVE",
"1015 420 QCURVE",
"1042 344 LINE",
"1062 337 OFFCURVE",
"1088 333 QCURVE SMOOTH",
"1110 329 OFFCURVE",
"1170 323 OFFCURVE",
"1208 323 QCURVE SMOOTH",
"1216 323 OFFCURVE",
"1230 324 OFFCURVE",
"1238 324 QCURVE SMOOTH",
"1312 325 OFFCURVE",
"1442 376 OFFCURVE",
"1539 484 OFFCURVE",
"1595 655 OFFCURVE",
"1595 776 QCURVE SMOOTH",
"1595 921 OFFCURVE",
"1568 1149 OFFCURVE",
"1504 1322 OFFCURVE",
"1397 1443 OFFCURVE",
"1239 1519 OFFCURVE",
"1023 1554 OFFCURVE",
"882 1554 QCURVE SMOOTH",
"702 1554 OFFCURVE",
"420 1472 OFFCURVE",
"227 1287 OFFCURVE",
"126 990 OFFCURVE",
"126 776 QCURVE SMOOTH",
"126 553 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"747 523 OFFCURVE",
"706 579 OFFCURVE",
"683 678 OFFCURVE",
"683 756 QCURVE SMOOTH",
"683 828 OFFCURVE",
"707 924 OFFCURVE",
"748 982 OFFCURVE",
"803 1006 OFFCURVE",
"835 1006 QCURVE SMOOTH",
"867 1006 OFFCURVE",
"925 995 OFFCURVE",
"948 988 QCURVE SMOOTH",
"974 980 OFFCURVE",
"999 971 QCURVE",
"999 528 LINE",
"975 520 OFFCURVE",
"949 515 QCURVE SMOOTH",
"926 510 OFFCURVE",
"868 502 OFFCURVE",
"837 502 QCURVE SMOOTH",
"803 502 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01262 16 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01245 10 88 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01212 16 50 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01299 10 34 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 50 25 50 41 50 57 50 73 50 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 62 22 62 38 62 54 62 70 62 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01272 50 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 99 22 99 38 99 54 99 70 99 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012105 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01278 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 8 57 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01245 7 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01243 42 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01267 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 67 23 67 39 67 55 67 71 67 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01294 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1660;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"151 107 OFFCURVE",
"264 12 OFFCURVE",
"443 -29 OFFCURVE",
"569 -29 QCURVE SMOOTH",
"675 -29 OFFCURVE",
"871 36 OFFCURVE",
"955 111 QCURVE",
"1059 0 LINE",
"1343 0 LINE",
"1076 291 LINE",
"1089 331 OFFCURVE",
"1111 423 OFFCURVE",
"1128 514 OFFCURVE",
"1139 597 OFFCURVE",
"1141 629 QCURVE",
"950 629 LINE",
"947 606 OFFCURVE",
"932 515 OFFCURVE",
"918 464 QCURVE",
"680 727 LINE",
"767 784 OFFCURVE",
"874 866 OFFCURVE",
"933 947 OFFCURVE",
"952 1042 OFFCURVE",
"952 1112 QCURVE SMOOTH",
"952 1180 OFFCURVE",
"919 1305 OFFCURVE",
"831 1400 OFFCURVE",
"678 1456 OFFCURVE",
"557 1456 QCURVE SMOOTH",
"433 1456 OFFCURVE",
"284 1400 OFFCURVE",
"204 1308 OFFCURVE",
"178 1189 OFFCURVE",
"178 1126 QCURVE SMOOTH",
"178 1076 OFFCURVE",
"194 991 OFFCURVE",
"235 907 OFFCURVE",
"302 815 OFFCURVE",
"353 758 QCURVE",
"275 704 OFFCURVE",
"176 611 OFFCURVE",
"119 520 OFFCURVE",
"98 425 OFFCURVE",
"98 371 QCURVE SMOOTH",
"98 260 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"460 976 OFFCURVE",
"421 1034 OFFCURVE",
"399 1087 OFFCURVE",
"399 1110 QCURVE SMOOTH",
"399 1152 OFFCURVE",
"413 1211 OFFCURVE",
"450 1250 OFFCURVE",
"514 1268 OFFCURVE",
"563 1268 QCURVE SMOOTH",
"613 1268 OFFCURVE",
"678 1252 OFFCURVE",
"716 1214 OFFCURVE",
"731 1154 OFFCURVE",
"731 1110 QCURVE SMOOTH",
"731 1078 OFFCURVE",
"718 1028 OFFCURVE",
"678 978 OFFCURVE",
"603 920 OFFCURVE",
"542 880 QCURVE",
"512 913 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"345 447 OFFCURVE",
"378 501 OFFCURVE",
"442 563 OFFCURVE",
"497 604 QCURVE",
"814 263 LINE",
"787 239 OFFCURVE",
"726 207 OFFCURVE",
"663 189 OFFCURVE",
"602 182 OFFCURVE",
"575 182 QCURVE SMOOTH",
"504 182 OFFCURVE",
"411 204 OFFCURVE",
"357 249 OFFCURVE",
"336 318 OFFCURVE",
"336 365 QCURVE SMOOTH",
"336 395 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01251 15 61 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 51 22 51 38 51 54 51 70 51 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 27 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\012214 15 230 15 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01226 41 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01236 41 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1263;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"770 0 LINE",
"770 1253 LINE",
"947 1253 LINE",
"947 0 LINE",
"1157 0 LINE",
"1157 1427 LINE",
"1083 1435 OFFCURVE",
"1011 1442 QCURVE SMOOTH",
"948 1448 OFFCURVE",
"808 1458 OFFCURVE",
"750 1458 QCURVE SMOOTH",
"584 1458 OFFCURVE",
"374 1393 OFFCURVE",
"254 1278 OFFCURVE",
"210 1120 OFFCURVE",
"210 1026 QCURVE SMOOTH",
"210 908 OFFCURVE",
"256 751 OFFCURVE",
"344 656 OFFCURVE",
"475 616 OFFCURVE",
"560 616 QCURVE",
"560 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1368;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = section;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"169 -337 OFFCURVE",
"223 -352 QCURVE SMOOTH",
"269 -366 OFFCURVE",
"397 -387 OFFCURVE",
"475 -387 QCURVE SMOOTH",
"616 -387 OFFCURVE",
"803 -339 OFFCURVE",
"914 -252 OFFCURVE",
"960 -131 OFFCURVE",
"960 -59 QCURVE SMOOTH",
"960 47 OFFCURVE",
"912 176 OFFCURVE",
"852 211 QCURVE",
"889 261 OFFCURVE",
"918 321 QCURVE SMOOTH",
"943 372 OFFCURVE",
"985 511 OFFCURVE",
"985 592 QCURVE SMOOTH",
"985 648 OFFCURVE",
"962 737 OFFCURVE",
"909 803 OFFCURVE",
"821 848 OFFCURVE",
"756 860 QCURVE SMOOTH",
"465 913 LINE SMOOTH",
"426 920 OFFCURVE",
"380 941 OFFCURVE",
"354 967 OFFCURVE",
"346 998 OFFCURVE",
"346 1016 QCURVE SMOOTH",
"346 1048 OFFCURVE",
"364 1093 OFFCURVE",
"410 1122 OFFCURVE",
"486 1135 OFFCURVE",
"545 1135 QCURVE SMOOTH",
"601 1135 OFFCURVE",
"720 1127 OFFCURVE",
"769 1122 QCURVE SMOOTH",
"826 1117 OFFCURVE",
"881 1110 QCURVE",
"881 1282 LINE",
"832 1297 OFFCURVE",
"774 1308 QCURVE SMOOTH",
"724 1318 OFFCURVE",
"594 1335 OFFCURVE",
"522 1335 QCURVE SMOOTH",
"428 1335 OFFCURVE",
"279 1295 OFFCURVE",
"176 1214 OFFCURVE",
"121 1091 OFFCURVE",
"121 1008 QCURVE SMOOTH",
"121 907 OFFCURVE",
"167 782 OFFCURVE",
"223 743 QCURVE",
"187 694 OFFCURVE",
"159 635 QCURVE SMOOTH",
"135 584 OFFCURVE",
"96 449 OFFCURVE",
"96 371 QCURVE SMOOTH",
"96 324 OFFCURVE",
"119 236 OFFCURVE",
"174 163 OFFCURVE",
"264 110 OFFCURVE",
"332 98 QCURVE SMOOTH",
"637 45 LINE SMOOTH",
"668 40 OFFCURVE",
"704 21 OFFCURVE",
"722 -5 OFFCURVE",
"727 -38 OFFCURVE",
"727 -59 QCURVE SMOOTH",
"727 -88 OFFCURVE",
"698 -135 OFFCURVE",
"631 -167 OFFCURVE",
"520 -184 OFFCURVE",
"438 -184 QCURVE SMOOTH",
"365 -184 OFFCURVE",
"250 -173 OFFCURVE",
"210 -166 QCURVE SMOOTH",
"162 -158 OFFCURVE",
"127 -147 QCURVE",
"127 -317 LINE"
);
},
{
closed = 1;
nodes = (
"402 311 OFFCURVE",
"356 339 OFFCURVE",
"332 376 OFFCURVE",
"324 419 OFFCURVE",
"324 440 QCURVE SMOOTH",
"324 478 OFFCURVE",
"345 565 OFFCURVE",
"359 603 QCURVE SMOOTH",
"375 647 OFFCURVE",
"395 690 QCURVE",
"631 653 LINE SMOOTH",
"676 646 OFFCURVE",
"726 622 OFFCURVE",
"748 590 OFFCURVE",
"752 550 OFFCURVE",
"752 528 QCURVE SMOOTH",
"752 483 OFFCURVE",
"727 391 OFFCURVE",
"712 353 QCURVE SMOOTH",
"694 309 OFFCURVE",
"672 268 QCURVE",
"440 305 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01250 13 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01261 13 85 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 85 25 85 41 85 57 85 73 85 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01269 85 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01210 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 50 22 50 38 50 54 50 70 50 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01296 29 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012103 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 5 74 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01234 1 45 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1055;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1119 319 OFFCURVE",
"1307 507 OFFCURVE",
"1415 758 OFFCURVE",
"1415 901 QCURVE SMOOTH",
"1415 1045 OFFCURVE",
"1307 1296 OFFCURVE",
"1119 1483 OFFCURVE",
"868 1591 OFFCURVE",
"725 1591 QCURVE SMOOTH",
"582 1591 OFFCURVE",
"331 1483 OFFCURVE",
"143 1296 OFFCURVE",
"35 1045 OFFCURVE",
"35 901 QCURVE SMOOTH",
"35 758 OFFCURVE",
"143 507 OFFCURVE",
"331 319 OFFCURVE",
"582 211 OFFCURVE",
"725 211 QCURVE SMOOTH",
"868 211 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"435 474 OFFCURVE",
"297 612 OFFCURVE",
"217 797 OFFCURVE",
"217 901 QCURVE SMOOTH",
"217 1006 OFFCURVE",
"297 1192 OFFCURVE",
"435 1331 OFFCURVE",
"620 1411 OFFCURVE",
"725 1411 QCURVE SMOOTH",
"830 1411 OFFCURVE",
"1016 1331 OFFCURVE",
"1155 1192 OFFCURVE",
"1235 1006 OFFCURVE",
"1235 901 QCURVE SMOOTH",
"1235 797 OFFCURVE",
"1155 612 OFFCURVE",
"1016 474 OFFCURVE",
"830 393 OFFCURVE",
"725 393 QCURVE SMOOTH",
"620 393 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"871 544 OFFCURVE",
"899 552 QCURVE SMOOTH",
"932 562 OFFCURVE",
"956 575 QCURVE",
"956 707 LINE",
"937 701 OFFCURVE",
"910 697 QCURVE SMOOTH",
"887 693 OFFCURVE",
"819 688 OFFCURVE",
"774 688 QCURVE SMOOTH",
"726 688 OFFCURVE",
"659 709 OFFCURVE",
"617 759 OFFCURVE",
"598 843 OFFCURVE",
"598 905 QCURVE SMOOTH",
"598 966 OFFCURVE",
"617 1047 OFFCURVE",
"659 1096 OFFCURVE",
"726 1116 OFFCURVE",
"774 1116 QCURVE SMOOTH",
"819 1116 OFFCURVE",
"884 1110 OFFCURVE",
"906 1107 QCURVE SMOOTH",
"932 1103 OFFCURVE",
"948 1098 QCURVE",
"948 1229 LINE",
"926 1241 OFFCURVE",
"895 1251 QCURVE SMOOTH",
"869 1259 OFFCURVE",
"789 1274 OFFCURVE",
"735 1274 QCURVE SMOOTH",
"667 1274 OFFCURVE",
"551 1239 OFFCURVE",
"466 1153 OFFCURVE",
"418 1009 OFFCURVE",
"418 901 QCURVE SMOOTH",
"418 795 OFFCURVE",
"466 652 OFFCURVE",
"551 566 OFFCURVE",
"667 530 OFFCURVE",
"735 530 QCURVE SMOOTH",
"789 530 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01235 14 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01266 14 45 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 14 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01256 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 66 22 66 38 66 54 66 70 66 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01276 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01283 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 4 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01271 7 40 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01250 7 61 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1450;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = registered;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1119 315 OFFCURVE",
"1307 503 OFFCURVE",
"1415 754 OFFCURVE",
"1415 897 QCURVE SMOOTH",
"1415 1040 OFFCURVE",
"1307 1291 OFFCURVE",
"1119 1479 OFFCURVE",
"868 1587 OFFCURVE",
"725 1587 QCURVE SMOOTH",
"582 1587 OFFCURVE",
"331 1479 OFFCURVE",
"143 1291 OFFCURVE",
"35 1040 OFFCURVE",
"35 897 QCURVE SMOOTH",
"35 754 OFFCURVE",
"143 503 OFFCURVE",
"331 315 OFFCURVE",
"582 207 OFFCURVE",
"725 207 QCURVE SMOOTH",
"868 207 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"435 469 OFFCURVE",
"297 607 OFFCURVE",
"217 792 OFFCURVE",
"217 897 QCURVE SMOOTH",
"217 1002 OFFCURVE",
"297 1188 OFFCURVE",
"435 1327 OFFCURVE",
"620 1407 OFFCURVE",
"725 1407 QCURVE SMOOTH",
"830 1407 OFFCURVE",
"1016 1327 OFFCURVE",
"1155 1188 OFFCURVE",
"1235 1002 OFFCURVE",
"1235 897 QCURVE SMOOTH",
"1235 792 OFFCURVE",
"1155 607 OFFCURVE",
"1016 469 OFFCURVE",
"830 389 OFFCURVE",
"725 389 QCURVE SMOOTH",
"620 389 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"635 545 LINE",
"635 784 LINE",
"725 784 LINE",
"860 545 LINE",
"1053 545 LINE",
"901 815 LINE",
"934 823 OFFCURVE",
"960 848 QCURVE SMOOTH",
"983 869 OFFCURVE",
"1020 950 OFFCURVE",
"1020 1020 QCURVE SMOOTH",
"1020 1101 OFFCURVE",
"978 1197 OFFCURVE",
"913 1246 OFFCURVE",
"835 1260 OFFCURVE",
"799 1260 QCURVE SMOOTH",
"465 1260 LINE",
"465 545 LINE"
);
},
{
closed = 1;
nodes = (
"635 1124 LINE",
"758 1124 LINE SMOOTH",
"810 1124 OFFCURVE",
"852 1079 OFFCURVE",
"852 1016 QCURVE SMOOTH",
"852 984 OFFCURVE",
"842 942 OFFCURVE",
"821 917 OFFCURVE",
"788 907 OFFCURVE",
"764 907 QCURVE SMOOTH",
"635 907 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01235 14 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01246 14 63 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01267 14 40 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 14 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 63 25 63 41 63 57 63 73 63 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01251 63 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01252 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01270 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 4 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01241 7 66 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01258 7 54 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01251 54 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1450;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = trademark;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1109 776 LINE",
"1109 1274 LINE",
"1121 1274 LINE",
"1123 1262 OFFCURVE",
"1125 1251 QCURVE SMOOTH",
"1127 1241 OFFCURVE",
"1131 1216 OFFCURVE",
"1135 1204 QCURVE SMOOTH",
"1203 952 LINE",
"1414 952 LINE",
"1481 1214 LINE SMOOTH",
"1490 1248 OFFCURVE",
"1493 1267 QCURVE SMOOTH",
"1495 1278 OFFCURVE",
"1496 1286 QCURVE",
"1508 1286 LINE",
"1508 776 LINE",
"1680 776 LINE",
"1680 1427 LINE",
"1385 1427 LINE",
"1336 1221 LINE SMOOTH",
"1329 1195 OFFCURVE",
"1321 1147 OFFCURVE",
"1319 1129 QCURVE SMOOTH",
"1316 1108 OFFCURVE",
"1314 1090 QCURVE",
"1302 1090 LINE",
"1229 1427 LINE",
"937 1427 LINE",
"937 776 LINE"
);
},
{
closed = 1;
nodes = (
"596 776 LINE",
"596 1260 LINE",
"825 1260 LINE",
"825 1427 LINE",
"192 1427 LINE",
"192 1260 LINE",
"420 1260 LINE",
"420 776 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01235 14 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01227 14 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01211 14 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 7 19 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1872;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = degree;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"692 886 OFFCURVE",
"770 965 OFFCURVE",
"813 1092 OFFCURVE",
"813 1185 QCURVE SMOOTH",
"813 1285 OFFCURVE",
"770 1418 OFFCURVE",
"692 1497 OFFCURVE",
"584 1529 OFFCURVE",
"518 1529 QCURVE SMOOTH",
"451 1529 OFFCURVE",
"338 1497 OFFCURVE",
"257 1418 OFFCURVE",
"212 1285 OFFCURVE",
"212 1185 QCURVE SMOOTH",
"212 1092 OFFCURVE",
"257 965 OFFCURVE",
"338 886 OFFCURVE",
"451 852 OFFCURVE",
"518 852 QCURVE SMOOTH",
"584 852 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"440 1034 OFFCURVE",
"406 1072 OFFCURVE",
"387 1135 OFFCURVE",
"387 1185 QCURVE SMOOTH",
"387 1237 OFFCURVE",
"406 1306 OFFCURVE",
"440 1347 OFFCURVE",
"489 1363 OFFCURVE",
"518 1363 QCURVE SMOOTH",
"545 1363 OFFCURVE",
"590 1347 OFFCURVE",
"621 1306 OFFCURVE",
"639 1237 OFFCURVE",
"639 1185 QCURVE SMOOTH",
"639 1135 OFFCURVE",
"621 1072 OFFCURVE",
"590 1034 OFFCURVE",
"545 1020 OFFCURVE",
"518 1020 QCURVE SMOOTH",
"489 1020 OFFCURVE"
);
}
);
width = 1026;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = bar;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"456 -487 LINE",
"456 1589 LINE",
"227 1589 LINE",
"227 -487 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 684;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"456 594 LINE",
"456 1427 LINE",
"227 1427 LINE",
"227 594 LINE"
);
},
{
closed = 1;
nodes = (
"227 -487 LINE",
"456 -487 LINE",
"456 348 LINE",
"227 348 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 684;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = dagger;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"628 -162 LINE",
"628 817 LINE",
"968 817 LINE",
"968 1014 LINE",
"628 1014 LINE",
"628 1430 LINE",
"390 1427 LINE",
"390 1014 LINE",
"50 1014 LINE",
"50 817 LINE",
"390 817 LINE",
"390 -160 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 8 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1018;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"401 256 LINE",
"401 -160 LINE",
"639 -162 LINE",
"639 256 LINE",
"979 256 LINE",
"979 453 LINE",
"639 453 LINE",
"639 815 LINE",
"979 815 LINE",
"979 1012 LINE",
"639 1012 LINE",
"639 1430 LINE",
"401 1427 LINE",
"401 1012 LINE",
"61 1012 LINE",
"61 815 LINE",
"401 815 LINE",
"401 453 LINE",
"61 453 LINE",
"61 256 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01212 13 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01213 8 14 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 2 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1040;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = commaaccentcomb;
lastChange = "2021-07-14 20:20:29 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"93 -445 LINE",
"215 -500 LINE",
"237 -464 OFFCURVE",
"260 -426 QCURVE SMOOTH",
"279 -394 OFFCURVE",
"322 -315 OFFCURVE",
"339 -279 QCURVE SMOOTH",
"354 -246 OFFCURVE",
"370 -197 OFFCURVE",
"370 -179 QCURVE SMOOTH",
"370 -153 OFFCURVE",
"334 -122 OFFCURVE",
"295 -109 QCURVE SMOOTH",
"273 -102 OFFCURVE",
"235 -95 OFFCURVE",
"221 -93 QCURVE SMOOTH",
"204 -91 OFFCURVE",
"190 -91 QCURVE",
"190 -91 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0128 15 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 438;
}
);
note = commaaccent;
unicode = 0326;
},
{
glyphname = dieresis;
layers = (
{
components = (
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, -30, 1093}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 393, 1093}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 868;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = dotaccent;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"291 1216 OFFCURVE",
"322 1246 OFFCURVE",
"334 1298 OFFCURVE",
"334 1339 QCURVE SMOOTH",
"334 1380 OFFCURVE",
"322 1433 OFFCURVE",
"291 1465 OFFCURVE",
"239 1477 OFFCURVE",
"199 1477 QCURVE SMOOTH",
"158 1477 OFFCURVE",
"105 1465 OFFCURVE",
"73 1433 OFFCURVE",
"61 1380 OFFCURVE",
"61 1339 QCURVE SMOOTH",
"61 1298 OFFCURVE",
"73 1246 OFFCURVE",
"105 1216 OFFCURVE",
"158 1204 OFFCURVE",
"199 1204 QCURVE SMOOTH",
"239 1204 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 395;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = grave;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"592 1274 LINE",
"199 1642 LINE",
"184 1633 OFFCURVE",
"167 1620 QCURVE SMOOTH",
"153 1609 OFFCURVE",
"117 1576 OFFCURVE",
"100 1554 QCURVE SMOOTH",
"81 1531 OFFCURVE",
"62 1495 OFFCURVE",
"62 1478 QCURVE SMOOTH",
"62 1453 OFFCURVE",
"107 1401 OFFCURVE",
"156 1364 QCURVE SMOOTH",
"169 1354 OFFCURVE",
"211 1325 OFFCURVE",
"264 1292 OFFCURVE",
"322 1256 OFFCURVE",
"350 1238 QCURVE SMOOTH",
"416 1197 OFFCURVE",
"492 1151 QCURVE",
"492 1151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01219 15 10 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01218 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 653;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = acute;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"242 1201 OFFCURVE",
"311 1246 QCURVE SMOOTH",
"340 1265 OFFCURVE",
"400 1304 OFFCURVE",
"454 1340 OFFCURVE",
"498 1370 OFFCURVE",
"512 1380 QCURVE SMOOTH",
"563 1417 OFFCURVE",
"608 1468 OFFCURVE",
"608 1493 QCURVE SMOOTH",
"608 1510 OFFCURVE",
"588 1548 OFFCURVE",
"569 1571 QCURVE SMOOTH",
"547 1597 OFFCURVE",
"512 1631 OFFCURVE",
"498 1642 QCURVE SMOOTH",
"482 1654 OFFCURVE",
"469 1661 QCURVE",
"61 1278 LINE",
"164 1151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0129 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 9 19 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 672;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"264 1213 OFFCURVE",
"314 1274 QCURVE SMOOTH",
"335 1300 OFFCURVE",
"379 1353 OFFCURVE",
"418 1401 OFFCURVE",
"449 1441 OFFCURVE",
"459 1454 QCURVE SMOOTH",
"491 1492 OFFCURVE",
"522 1547 OFFCURVE",
"522 1569 QCURVE SMOOTH",
"522 1592 OFFCURVE",
"489 1631 OFFCURVE",
"457 1651 QCURVE SMOOTH",
"428 1669 OFFCURVE",
"380 1692 OFFCURVE",
"363 1698 QCURVE SMOOTH",
"343 1705 OFFCURVE",
"326 1708 QCURVE",
"61 1237 LINE",
"207 1145 LINE"
);
},
{
closed = 1;
nodes = (
"738 1202 OFFCURVE",
"782 1252 QCURVE SMOOTH",
"801 1273 OFFCURVE",
"840 1318 OFFCURVE",
"875 1360 OFFCURVE",
"905 1396 OFFCURVE",
"915 1409 QCURVE SMOOTH",
"948 1448 OFFCURVE",
"978 1504 OFFCURVE",
"978 1525 QCURVE SMOOTH",
"978 1548 OFFCURVE",
"945 1586 OFFCURVE",
"913 1606 QCURVE SMOOTH",
"884 1624 OFFCURVE",
"836 1647 OFFCURVE",
"819 1653 QCURVE SMOOTH",
"799 1660 OFFCURVE",
"782 1663 QCURVE",
"543 1239 LINE",
"688 1147 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 19 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1040;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = circumflex;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1437 LINE",
"704 1110 LINE",
"817 1184 LINE",
"664 1460 LINE SMOOTH",
"642 1500 OFFCURVE",
"597 1552 OFFCURVE",
"544 1583 OFFCURVE",
"478 1595 OFFCURVE",
"434 1595 QCURVE SMOOTH",
"390 1595 OFFCURVE",
"324 1583 OFFCURVE",
"271 1552 OFFCURVE",
"227 1500 OFFCURVE",
"205 1460 QCURVE SMOOTH",
"51 1184 LINE",
"164 1110 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0126 9 13 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = caron;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"544 1186 OFFCURVE",
"597 1217 OFFCURVE",
"642 1269 OFFCURVE",
"664 1309 QCURVE SMOOTH",
"817 1585 LINE",
"704 1659 LINE",
"434 1331 LINE",
"164 1659 LINE",
"51 1585 LINE",
"205 1309 LINE SMOOTH",
"227 1269 OFFCURVE",
"271 1217 OFFCURVE",
"324 1186 OFFCURVE",
"390 1174 OFFCURVE",
"434 1174 QCURVE SMOOTH",
"478 1174 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0127 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = breve;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"621 1219 OFFCURVE",
"706 1299 OFFCURVE",
"748 1411 OFFCURVE",
"748 1480 QCURVE SMOOTH",
"748 1504 OFFCURVE",
"745 1530 QCURVE",
"627 1530 LINE",
"612 1475 OFFCURVE",
"574 1407 OFFCURVE",
"521 1369 OFFCURVE",
"452 1356 OFFCURVE",
"406 1356 QCURVE SMOOTH",
"360 1356 OFFCURVE",
"289 1370 OFFCURVE",
"236 1408 OFFCURVE",
"198 1476 OFFCURVE",
"184 1530 QCURVE",
"63 1530 LINE",
"62 1519 OFFCURVE",
"61 1497 OFFCURVE",
"61 1486 QCURVE SMOOTH",
"61 1416 OFFCURVE",
"103 1301 OFFCURVE",
"188 1220 OFFCURVE",
"318 1176 OFFCURVE",
"406 1176 QCURVE SMOOTH",
"493 1176 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01214 4 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 811;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = ring;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"461 1185 OFFCURVE",
"528 1239 OFFCURVE",
"565 1333 OFFCURVE",
"565 1407 QCURVE SMOOTH",
"565 1482 OFFCURVE",
"526 1577 OFFCURVE",
"458 1631 OFFCURVE",
"366 1651 OFFCURVE",
"313 1651 QCURVE SMOOTH",
"260 1651 OFFCURVE",
"168 1631 OFFCURVE",
"100 1577 OFFCURVE",
"61 1482 OFFCURVE",
"61 1407 QCURVE SMOOTH",
"61 1333 OFFCURVE",
"99 1239 OFFCURVE",
"166 1185 OFFCURVE",
"259 1165 OFFCURVE",
"313 1165 QCURVE SMOOTH",
"368 1165 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"253 1306 OFFCURVE",
"232 1332 OFFCURVE",
"223 1375 OFFCURVE",
"223 1407 QCURVE SMOOTH",
"223 1440 OFFCURVE",
"232 1483 OFFCURVE",
"253 1508 OFFCURVE",
"288 1518 OFFCURVE",
"313 1518 QCURVE SMOOTH",
"339 1518 OFFCURVE",
"375 1508 OFFCURVE",
"397 1483 OFFCURVE",
"406 1440 OFFCURVE",
"406 1407 QCURVE SMOOTH",
"406 1375 OFFCURVE",
"397 1332 OFFCURVE",
"375 1306 OFFCURVE",
"339 1296 OFFCURVE",
"313 1296 QCURVE SMOOTH",
"288 1296 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 7 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 627;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = tilde;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"182 1218 OFFCURVE",
"200 1238 QCURVE SMOOTH",
"216 1255 OFFCURVE",
"264 1284 OFFCURVE",
"297 1286 QCURVE SMOOTH",
"330 1287 OFFCURVE",
"404 1251 OFFCURVE",
"487 1207 OFFCURVE",
"581 1172 OFFCURVE",
"635 1174 QCURVE SMOOTH",
"689 1176 OFFCURVE",
"775 1219 OFFCURVE",
"836 1282 OFFCURVE",
"873 1356 OFFCURVE",
"877 1389 QCURVE",
"768 1458 LINE",
"754 1432 OFFCURVE",
"736 1413 QCURVE SMOOTH",
"720 1396 OFFCURVE",
"673 1368 OFFCURVE",
"641 1366 QCURVE SMOOTH",
"615 1365 OFFCURVE",
"565 1382 OFFCURVE",
"515 1407 OFFCURVE",
"462 1438 OFFCURVE",
"404 1463 OFFCURVE",
"340 1480 OFFCURVE",
"303 1479 QCURVE SMOOTH",
"248 1477 OFFCURVE",
"162 1434 OFFCURVE",
"100 1371 OFFCURVE",
"65 1297 OFFCURVE",
"61 1264 QCURVE",
"170 1194 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01212 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 28 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 938;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"766 1219 LINE",
"766 1415 LINE",
"61 1415 LINE",
"61 1219 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 8 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 827;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = cedilla;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"147 -205 LINE",
"166 -203 OFFCURVE",
"185 -200 QCURVE SMOOTH",
"202 -198 OFFCURVE",
"239 -195 OFFCURVE",
"256 -195 QCURVE SMOOTH",
"365 -195 OFFCURVE",
"356 -266 QCURVE",
"348 -304 OFFCURVE",
"295 -328 OFFCURVE",
"244 -328 QCURVE SMOOTH",
"209 -328 OFFCURVE",
"154 -324 OFFCURVE",
"135 -321 QCURVE SMOOTH",
"112 -317 OFFCURVE",
"96 -313 QCURVE",
"61 -446 LINE",
"91 -457 OFFCURVE",
"124 -466 QCURVE SMOOTH",
"152 -474 OFFCURVE",
"223 -485 OFFCURVE",
"260 -485 QCURVE SMOOTH",
"327 -485 OFFCURVE",
"425 -465 OFFCURVE",
"493 -419 OFFCURVE",
"534 -346 OFFCURVE",
"545 -293 QCURVE SMOOTH",
"547 -279 OFFCURVE",
"550 -255 OFFCURVE",
"550 -244 QCURVE SMOOTH",
"550 -204 OFFCURVE",
"523 -144 OFFCURVE",
"477 -106 OFFCURVE",
"415 -89 OFFCURVE",
"379 -92 QCURVE",
"406 0 LINE",
"201 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 15 19 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0121 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 16 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01235 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01236 8 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0121 30 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 25 23 25 39 25 55 25 71 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 612;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = ogonek;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"100 -417 OFFCURVE",
"168 -472 OFFCURVE",
"260 -500 OFFCURVE",
"313 -500 QCURVE SMOOTH",
"342 -500 OFFCURVE",
"391 -494 OFFCURVE",
"411 -490 QCURVE SMOOTH",
"433 -486 OFFCURVE",
"453 -479 QCURVE",
"453 -311 LINE",
"443 -313 OFFCURVE",
"432 -314 QCURVE SMOOTH",
"412 -317 OFFCURVE",
"383 -317 QCURVE SMOOTH",
"332 -317 OFFCURVE",
"283 -267 OFFCURVE",
"283 -225 QCURVE SMOOTH",
"283 -174 OFFCURVE",
"361 -60 OFFCURVE",
"455 0 QCURVE",
"291 82 LINE",
"226 37 OFFCURVE",
"176 -19 QCURVE SMOOTH",
"154 -43 OFFCURVE",
"113 -100 OFFCURVE",
"81 -166 OFFCURVE",
"61 -239 OFFCURVE",
"61 -279 QCURVE SMOOTH",
"61 -334 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01211 10 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 11 22 11 38 11 54 11 70 11 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01214 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 14 23 14 39 14 55 14 71 14 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 516;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = dieresis.cap;
layers = (
{
components = (
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, -30, 1407}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 388, 1407}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 868;
}
);
note = dieresis.cap;
},
{
glyphname = dotaccent.cap;
layers = (
{
components = (
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, -30, 1384}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 395;
}
);
note = dotaccent.cap;
},
{
glyphname = grave.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"195 1985 LINE",
"183 1978 OFFCURVE",
"168 1967 QCURVE SMOOTH",
"155 1957 OFFCURVE",
"122 1925 OFFCURVE",
"102 1901 QCURVE SMOOTH",
"82 1877 OFFCURVE",
"62 1837 OFFCURVE",
"62 1818 QCURVE SMOOTH",
"62 1774 OFFCURVE",
"129 1729 QCURVE SMOOTH",
"150 1715 OFFCURVE",
"207 1682 OFFCURVE",
"271 1647 OFFCURVE",
"340 1611 OFFCURVE",
"372 1595 QCURVE SMOOTH",
"448 1556 OFFCURVE",
"530 1516 QCURVE",
"618 1632 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01218 9 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01217 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 680;
}
);
note = grave.cap;
},
{
glyphname = acute.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"232 1576 OFFCURVE",
"308 1615 QCURVE SMOOTH",
"340 1631 OFFCURVE",
"408 1667 OFFCURVE",
"473 1702 OFFCURVE",
"530 1735 OFFCURVE",
"551 1749 QCURVE SMOOTH",
"618 1794 OFFCURVE",
"618 1838 QCURVE SMOOTH",
"618 1857 OFFCURVE",
"598 1897 OFFCURVE",
"578 1921 QCURVE SMOOTH",
"558 1946 OFFCURVE",
"525 1978 OFFCURVE",
"512 1988 QCURVE SMOOTH",
"497 1999 OFFCURVE",
"485 2005 QCURVE",
"61 1653 LINE",
"150 1536 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 680;
}
);
note = acute.cap;
},
{
glyphname = hungarumlaut.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"243 1574 OFFCURVE",
"307 1631 QCURVE SMOOTH",
"334 1655 OFFCURVE",
"391 1708 OFFCURVE",
"445 1759 OFFCURVE",
"493 1806 OFFCURVE",
"510 1825 QCURVE SMOOTH",
"552 1874 OFFCURVE",
"552 1910 QCURVE SMOOTH",
"552 1933 OFFCURVE",
"521 1975 OFFCURVE",
"489 1997 QCURVE SMOOTH",
"463 2015 OFFCURVE",
"423 2038 OFFCURVE",
"409 2044 QCURVE SMOOTH",
"392 2051 OFFCURVE",
"379 2054 QCURVE",
"61 1606 LINE",
"174 1513 LINE"
);
},
{
closed = 1;
nodes = (
"680 1565 OFFCURVE",
"735 1614 QCURVE SMOOTH",
"759 1635 OFFCURVE",
"808 1680 OFFCURVE",
"856 1726 OFFCURVE",
"900 1769 OFFCURVE",
"918 1788 QCURVE SMOOTH",
"941 1814 OFFCURVE",
"964 1856 OFFCURVE",
"964 1875 QCURVE SMOOTH",
"964 1913 OFFCURVE",
"905 1954 QCURVE SMOOTH",
"879 1972 OFFCURVE",
"839 1995 OFFCURVE",
"825 2001 QCURVE SMOOTH",
"808 2008 OFFCURVE",
"795 2011 QCURVE",
"516 1602 LINE",
"621 1516 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1026;
}
);
note = hungarumlaut.cap;
},
{
glyphname = circumflex.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"604 1518 LINE",
"721 1575 LINE",
"621 1827 LINE SMOOTH",
"604 1869 OFFCURVE",
"560 1922 OFFCURVE",
"505 1951 OFFCURVE",
"435 1962 OFFCURVE",
"391 1962 QCURVE SMOOTH",
"347 1962 OFFCURVE",
"277 1951 OFFCURVE",
"222 1922 OFFCURVE",
"179 1869 OFFCURVE",
"162 1827 QCURVE SMOOTH",
"61 1575 LINE",
"178 1518 LINE",
"391 1827 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0127 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 782;
}
);
note = circumflex.cap;
},
{
glyphname = caron.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"505 1528 OFFCURVE",
"560 1558 OFFCURVE",
"604 1611 OFFCURVE",
"621 1653 QCURVE SMOOTH",
"721 1905 LINE",
"604 1962 LINE",
"391 1653 LINE",
"178 1962 LINE",
"61 1905 LINE",
"162 1653 LINE SMOOTH",
"179 1611 OFFCURVE",
"222 1558 OFFCURVE",
"277 1528 OFFCURVE",
"347 1518 OFFCURVE",
"391 1518 QCURVE SMOOTH",
"435 1518 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0127 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 782;
}
);
note = caron.cap;
},
{
glyphname = breve.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"518 1592 OFFCURVE",
"603 1672 OFFCURVE",
"645 1784 OFFCURVE",
"645 1853 QCURVE SMOOTH",
"645 1877 OFFCURVE",
"642 1903 QCURVE",
"524 1903 LINE",
"509 1848 OFFCURVE",
"471 1780 OFFCURVE",
"418 1742 OFFCURVE",
"349 1729 OFFCURVE",
"303 1729 QCURVE SMOOTH",
"257 1729 OFFCURVE",
"186 1743 OFFCURVE",
"133 1781 OFFCURVE",
"95 1849 OFFCURVE",
"81 1903 QCURVE",
"-40 1903 LINE",
"-41 1892 OFFCURVE",
"-42 1870 OFFCURVE",
"-42 1859 QCURVE SMOOTH",
"-42 1789 OFFCURVE",
"0 1674 OFFCURVE",
"85 1593 OFFCURVE",
"215 1549 OFFCURVE",
"303 1549 QCURVE SMOOTH",
"390 1549 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01222 5 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 5 values pushed */\012218 5 234 5 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 27 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 153 5 169 5 185 5 201 5 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01214 4 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 512;
}
);
note = breve.cap;
},
{
glyphname = ring.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"461 1185 OFFCURVE",
"528 1239 OFFCURVE",
"565 1333 OFFCURVE",
"565 1407 QCURVE SMOOTH",
"565 1482 OFFCURVE",
"526 1577 OFFCURVE",
"458 1631 OFFCURVE",
"366 1651 OFFCURVE",
"313 1651 QCURVE SMOOTH",
"260 1651 OFFCURVE",
"168 1631 OFFCURVE",
"100 1577 OFFCURVE",
"61 1482 OFFCURVE",
"61 1407 QCURVE SMOOTH",
"61 1333 OFFCURVE",
"99 1239 OFFCURVE",
"166 1185 OFFCURVE",
"259 1165 OFFCURVE",
"313 1165 QCURVE SMOOTH",
"368 1165 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"253 1306 OFFCURVE",
"232 1332 OFFCURVE",
"223 1375 OFFCURVE",
"223 1407 QCURVE SMOOTH",
"223 1440 OFFCURVE",
"232 1483 OFFCURVE",
"253 1508 OFFCURVE",
"288 1518 OFFCURVE",
"313 1518 QCURVE SMOOTH",
"339 1518 OFFCURVE",
"375 1508 OFFCURVE",
"397 1483 OFFCURVE",
"406 1440 OFFCURVE",
"406 1407 QCURVE SMOOTH",
"406 1375 OFFCURVE",
"397 1332 OFFCURVE",
"375 1306 OFFCURVE",
"339 1296 OFFCURVE",
"313 1296 QCURVE SMOOTH",
"288 1296 OFFCURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 7 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 627;
}
);
note = ring.cap;
},
{
glyphname = tilde.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"182 1564 OFFCURVE",
"200 1584 QCURVE SMOOTH",
"216 1601 OFFCURVE",
"264 1630 OFFCURVE",
"297 1632 QCURVE SMOOTH",
"330 1633 OFFCURVE",
"404 1597 OFFCURVE",
"487 1554 OFFCURVE",
"581 1518 OFFCURVE",
"635 1520 QCURVE SMOOTH",
"689 1522 OFFCURVE",
"775 1565 OFFCURVE",
"836 1628 OFFCURVE",
"873 1702 OFFCURVE",
"877 1735 QCURVE",
"768 1804 LINE",
"754 1778 OFFCURVE",
"736 1759 QCURVE SMOOTH",
"720 1742 OFFCURVE",
"673 1714 OFFCURVE",
"641 1712 QCURVE SMOOTH",
"615 1711 OFFCURVE",
"565 1728 OFFCURVE",
"515 1753 OFFCURVE",
"462 1784 OFFCURVE",
"404 1809 OFFCURVE",
"340 1826 OFFCURVE",
"303 1825 QCURVE SMOOTH",
"248 1823 OFFCURVE",
"162 1780 OFFCURVE",
"100 1717 OFFCURVE",
"65 1643 OFFCURVE",
"61 1610 QCURVE",
"170 1540 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01212 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 28 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 938;
}
);
note = tilde.cap;
},
{
glyphname = macron.cap;
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"660 1571 LINE",
"660 1767 LINE",
"-45 1767 LINE",
"-45 1571 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0121 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 8 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 512;
}
);
note = macron.cap;
}
);
instances = (
{
customParameters = (
{
name = postscriptFullName;
value = "Doppio One Regular";
},
{
name = postscriptFontName;
value = "DoppioOne-Regular";
}
);
instanceInterpolations = {
"410E5E1C-5FD0-457E-A79B-7BF13808BDAC" = 1;
};
name = Regular;
weightClass = Normal;
}
);
manufacturer = "Szymon Celej";
manufacturerURL = www.sorkintype.com;
unitsPerEm = 2048;
versionMajor = 1;
versionMinor = 1;
}
